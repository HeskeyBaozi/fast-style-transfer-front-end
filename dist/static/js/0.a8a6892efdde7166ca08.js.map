{"version":3,"sources":["webpack:///./node_modules/core-js/library/modules/_descriptors.js","webpack:///./node_modules/core-js/library/modules/_ctx.js","webpack:///./node_modules/deeplearn/dist/graph/optimizers/adamax_optimizer.js","webpack:///./node_modules/core-js/library/modules/web.dom.iterable.js","webpack:///./node_modules/deeplearn/dist/graph/ops/argmaxequals.js","webpack:///./node_modules/babel-runtime/core-js/promise.js","webpack:///./node_modules/deeplearn/dist/graph/ops/op.js","webpack:///./node_modules/core-js/library/modules/_iterators.js","webpack:///./node_modules/deeplearn/dist/math/math.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/tex_util.js","webpack:///./node_modules/deeplearn/dist/graph/operation_emitter.js","webpack:///./node_modules/core-js/library/modules/_an-instance.js","webpack:///./node_modules/deeplearn/dist/math/backends/backend_webgl.js","webpack:///./node_modules/deeplearn/dist/data/input_provider.js","webpack:///./node_modules/core-js/library/modules/_uid.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator-method.js","webpack:///./node_modules/seedrandom/lib/tychei.js","webpack:///./node_modules/core-js/library/modules/_add-to-unscopables.js","webpack:///./node_modules/core-js/library/modules/_defined.js","webpack:///./node_modules/core-js/library/modules/core.is-iterable.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/pool_gpu.js","webpack:///./node_modules/deeplearn/dist/math/backends/types/matmul.js","webpack:///./node_modules/deeplearn/dist/index.js","webpack:///./node_modules/deeplearn/dist/graph/priority_queue.js","webpack:///./node_modules/core-js/library/modules/_an-object.js","webpack:///./node_modules/core-js/library/modules/_global.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/batchnorm_gpu.js","webpack:///./node_modules/core-js/library/modules/_microtask.js","webpack:///./node_modules/core-js/library/modules/_redefine.js","webpack:///./node_modules/deeplearn/dist/data/xhr-dataset.js","webpack:///./node_modules/core-js/library/modules/_iter-create.js","webpack:///./node_modules/deeplearn/dist/data/checkpoint_loader.js","webpack:///./node_modules/deeplearn/dist/math/concat_util.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/mulmat_gpu.js","webpack:///./node_modules/core-js/library/fn/object/define-property.js","webpack:///./node_modules/seedrandom/lib/xor4096.js","webpack:///./node_modules/babel-runtime/core-js/get-iterator.js","webpack:///./src/transform-network/network.ts","webpack:///./src/components/StyleTransfer/style-transfer.component.ts","webpack:///./src/components/StyleTransfer/style-transfer.vue?027f","webpack:///./src/components/StyleTransfer/style-transfer.vue","webpack:///./node_modules/deeplearn/dist/math/ndarray.js","webpack:///./node_modules/babel-runtime/core-js/object/define-property.js","webpack:///./node_modules/core-js/library/modules/es6.promise.js","webpack:///./node_modules/deeplearn/dist/graph/ops/subtract.js","webpack:///./node_modules/core-js/library/modules/_has.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/copy_gpu.js","webpack:///./node_modules/core-js/library/modules/_iter-step.js","webpack:///./node_modules/deeplearn/dist/math/rand.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/unaryop_gpu.js","webpack:///./node_modules/core-js/library/modules/es7.promise.finally.js","webpack:///./node_modules/core-js/library/modules/_is-object.js","webpack:///./node_modules/deeplearn/dist/math/backends/kernel_registry.js","webpack:///./node_modules/deeplearn/dist/graph/tensor_array_map.js","webpack:///./node_modules/core-js/library/modules/_core.js","webpack:///./node_modules/deeplearn/dist/graph/optimizers/adam_optimizer.js","webpack:///./node_modules/seedrandom/index.js","webpack:///./node_modules/deeplearn/dist/device_util.js","webpack:///./node_modules/deeplearn/dist/graph/ops/max_pool.js","webpack:///./node_modules/core-js/library/modules/_object-keys-internal.js","webpack:///./node_modules/deeplearn/dist/math/types.js","webpack:///./node_modules/deeplearn/dist/graph/optimizers/momentum_optimizer.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/concat_gpu.js","webpack:///./node_modules/core-js/library/modules/_task.js","webpack:///(webpack)/buildin/amd-define.js","webpack:///./node_modules/deeplearn/dist/graph/ops/linear_combination.js","webpack:///./node_modules/deeplearn/dist/math/slice_util.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/gpgpu_util.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/tile_gpu.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/binaryop_gpu.js","webpack:///./node_modules/core-js/library/modules/_iobject.js","webpack:///./node_modules/core-js/library/modules/_is-array-iter.js","webpack:///./node_modules/core-js/library/modules/_to-primitive.js","webpack:///./node_modules/core-js/library/modules/_for-of.js","webpack:///./node_modules/core-js/library/modules/_library.js","webpack:///./node_modules/core-js/library/modules/_dom-create.js","webpack:///./node_modules/deeplearn/dist/math/conv_util.js","webpack:///./node_modules/core-js/library/modules/_object-gpo.js","webpack:///./node_modules/deeplearn/dist/graph/ops/multiply.js","webpack:///./node_modules/core-js/library/modules/_to-length.js","webpack:///./node_modules/deeplearn/dist/graph/ops/argmax.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/conv_backprop_gpu.js","webpack:///./node_modules/core-js/library/modules/_cof.js","webpack:///./node_modules/deeplearn/dist/graph/optimizers/adadelta_optimizer.js","webpack:///./node_modules/core-js/library/modules/_html.js","webpack:///./node_modules/core-js/library/modules/_classof.js","webpack:///./node_modules/deeplearn/dist/graph/ops/add.js","webpack:///./node_modules/core-js/library/modules/_fails.js","webpack:///./node_modules/core-js/library/modules/_ie8-dom-define.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/slice_gpu.js","webpack:///./node_modules/deeplearn/dist/graph/optimizers/rmsprop_optimizer.js","webpack:///./node_modules/core-js/library/modules/_to-iobject.js","webpack:///./node_modules/deeplearn/dist/graph/ops/reshape.js","webpack:///./node_modules/core-js/library/fn/promise.js","webpack:///./node_modules/core-js/library/modules/_to-integer.js","webpack:///./node_modules/seedrandom/lib/alea.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/webgl_util.js","webpack:///./node_modules/core-js/library/modules/_property-desc.js","webpack:///./node_modules/deeplearn/dist/graph/ops/exp.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/multinomial_gpu.js","webpack:///./node_modules/core-js/library/fn/is-iterable.js","webpack:///./node_modules/deeplearn/dist/data/dataset.js","webpack:///./node_modules/babel-runtime/regenerator/index.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/onehot_gpu.js","webpack:///./node_modules/core-js/library/modules/_object-create.js","webpack:///./node_modules/deeplearn/dist/math/backends/backend_cpu.js","webpack:///./node_modules/babel-runtime/helpers/classCallCheck.js","webpack:///./node_modules/deeplearn/dist/graph/ops/matmul.js","webpack:///./node_modules/core-js/library/modules/_shared-key.js","webpack:///./node_modules/deeplearn/dist/math/backends/tape_util.js","webpack:///./node_modules/deeplearn/dist/math/cost_functions.js","webpack:///./node_modules/core-js/library/modules/_set-species.js","webpack:///./node_modules/vue-class-component/dist/vue-class-component.common.js","webpack:///./node_modules/deeplearn/dist/graph/ops/element_wise_cost.js","webpack:///./node_modules/babel-runtime/helpers/slicedToArray.js","webpack:///./node_modules/core-js/library/modules/_perform.js","webpack:///./node_modules/core-js/library/modules/_wks.js","webpack:///./node_modules/core-js/library/modules/_iter-detect.js","webpack:///./node_modules/deeplearn/dist/graph/ops/concat3d.js","webpack:///./node_modules/seedrandom/lib/xor128.js","webpack:///./node_modules/core-js/library/modules/_set-to-string-tag.js","webpack:///./node_modules/core-js/library/modules/_shared.js","webpack:///./node_modules/deeplearn/dist/math/axis_util.js","webpack:///./node_modules/core-js/library/modules/_object-dp.js","webpack:///./node_modules/deeplearn/dist/graph/ops/softmax.js","webpack:///./node_modules/core-js/library/modules/_promise-resolve.js","webpack:///./node_modules/core-js/library/modules/_to-absolute-index.js","webpack:///./node_modules/deeplearn/dist/environment.js","webpack:///./node_modules/core-js/library/fn/get-iterator.js","webpack:///./node_modules/seedrandom/lib/xorshift7.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator.js","webpack:///./node_modules/core-js/library/modules/_string-at.js","webpack:///./node_modules/deeplearn/dist/math/reduce_util.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/render_ndarray_gpu_util.js","webpack:///./node_modules/core-js/library/modules/_hide.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/gpgpu_context.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/reduce_gpu.js","webpack:///./node_modules/seedrandom/lib/xorwow.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/conv_gpu_depthwise.js","webpack:///./node_modules/deeplearn/dist/graph/session_util.js","webpack:///./node_modules/core-js/library/modules/es7.promise.try.js","webpack:///./node_modules/deeplearn/dist/graph/ops/divide.js","webpack:///./node_modules/deeplearn/dist/util.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/argminmax_gpu.js","webpack:///./node_modules/deeplearn/dist/graph/ops/convolution.js","webpack:///./node_modules/regenerator-runtime/runtime-module.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/transpose_gpu.js","webpack:///./node_modules/core-js/library/modules/_export.js","webpack:///./node_modules/deeplearn/dist/math/activation_functions.js","webpack:///./node_modules/deeplearn/dist/math/broadcast_util.js","webpack:///./node_modules/core-js/library/modules/_invoke.js","webpack:///./node_modules/deeplearn/dist/graph/ops/log.js","webpack:///./node_modules/deeplearn/dist/graph/graph.js","webpack:///./node_modules/deeplearn/dist/initializers.js","webpack:///./node_modules/core-js/library/modules/_a-function.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/shader_compiler.js","webpack:///./node_modules/core-js/library/modules/_object-keys.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/resize_bilinear_gpu.js","webpack:///./node_modules/core-js/library/modules/es6.object.define-property.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/conv_gpu.js","webpack:///./node_modules/deeplearn/dist/graph/ops/reduce_sum.js","webpack:///./node_modules/core-js/library/modules/_iter-call.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./node_modules/deeplearn/dist/graph_runner.js","webpack:///./node_modules/deeplearn/dist/graph/session.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/clip_gpu.js","webpack:///./node_modules/seedrandom/seedrandom.js","webpack:///./node_modules/core-js/library/modules/_new-promise-capability.js","webpack:///./node_modules/deeplearn/dist/graph/ops/element_wise_activation.js","webpack:///./node_modules/deeplearn/dist/graph/optimizers/optimizer.js","webpack:///./node_modules/core-js/library/modules/_object-dps.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/texture_manager.js","webpack:///./node_modules/deeplearn/dist/version.js","webpack:///./node_modules/core-js/library/modules/_to-object.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/gpgpu_math.js","webpack:///./node_modules/core-js/library/modules/_species-constructor.js","webpack:///./node_modules/deeplearn/dist/test_util.js","webpack:///./node_modules/babel-runtime/core-js/is-iterable.js","webpack:///./node_modules/deeplearn/dist/math/backends/webgl/max_pool_backprop_gpu.js","webpack:///./node_modules/core-js/library/modules/_array-includes.js","webpack:///./node_modules/core-js/library/modules/_iter-define.js","webpack:///./node_modules/deeplearn/dist/graph/optimizers/adagrad_optimizer.js","webpack:///./node_modules/deeplearn/dist/graph/optimizers/sgd_optimizer.js","webpack:///./node_modules/babel-runtime/helpers/createClass.js","webpack:///./node_modules/core-js/library/modules/es6.array.iterator.js","webpack:///./node_modules/core-js/library/modules/_redefine-all.js","webpack:///./node_modules/deeplearn/dist/math/backends/backend_engine.js","webpack:///./node_modules/core-js/library/modules/_enum-bug-keys.js","webpack:///./node_modules/deeplearn/dist/graph/graph_util.js","webpack:///./node_modules/core-js/library/modules/es6.string.iterator.js"],"names":["module","exports","__webpack_require__","Object","defineProperty","get","a","aFunction","fn","that","length","undefined","call","b","c","apply","arguments","__extends","this","extendStatics","setPrototypeOf","__proto__","Array","d","p","hasOwnProperty","__","constructor","prototype","create","value","ndarray_1","tensor_array_map_1","AdamaxOptimizer","_super","learningRate","beta1","beta2","specifiedVariableList","_this","firstMoment","TensorArrayMap","weightedInfNorm","eps","Scalar","new","b1","b2","accB1","beforeBatch","math","batchSize","runtime","activationArrayMap","gradientArrayMap","size","variableNodes","forEach","node","set","output","NDArray","zeros","shape","afterBatch","scope","keep","oldVariable","gradient","variableGradients","oldFirstMoment","oldWeightedInfNorm","newFirstMoment","scaledArrayAdd","subtract","one","ut0","multiply","ut1","abs","newWeightedInfNorm","add","relu","variable","divide","data","dispose","oldAccB1","Optimizer","global","hide","Iterators","TO_STRING_TAG","DOMIterables","split","i","NAME","Collection","proto","ArgMaxEquals","x1Tensor","x2Tensor","yTensor","feedForward","inferenceArrays","x1","x2","argMaxEquals","backProp","gradientArrays","Error","Operation","default","__esModule","disposeTransientArrays","environment_1","util","axis_util","backend_engine_1","matmul_1","broadcast_util","concat_util","conv_util","slice_util","NDArrayMath","backend","safeMode","registeredArrays","Set","customBackend","ENV","getBackend","backendEngine","BackendEngine","time","query","getNumArrays","register","has","id","track","writePixels","pixels","numChannels","write","values","dtype","readSync","read","enableDebugMode","console","warn","scopeFn","gradientsScope","startScope","endScope","result","matMul","aOrientation","bOrientation","MatrixOrientation","REGULAR","innerShapeA","innerShapeB","assert","rank","executeKernel","inputs","args","dy","y","TRANSPOSED","executeOp","name","f","vectorTimesMatrix","v","matrix","as2D","as1D","matrixTimesVector","dotProduct","v1","v2","asScalar","outerProduct","clone","x","reshape","ndarray","newShape","slice1D","begin","assertParamsValid","slice2D","slice3D","slice4D","concat1D","assertParams","concat2D","axis","concat3D","concat4D","logSumExp","input","keepDims","axes","parseAxisParam","xMax","max","exp","sum","log","res","expandShapeToKeepDim","origAxes","permutedAxes","getPermutedAxes","transpose","getInnerMostAxes","onesLike","mean","reduceShape","computeOutAndReduceShapes","reduceSize","sizeFromShape","argMin","argMax","assertShapesMatch","equal","equalStrict","topK","k","indices","min","softmax","logits","dim","lse","logResult","switchDim","newDim","tile","reps","perm","map","s","reverse","scalarPlusArray","scalarMinusArray","arrayMinusScalar","neg","assertAndGetBroadcastShape","addStrict","arraysEqual","pow","powStrict","sub","subStrict","elementWiseMul","multiplyStrict","divideStrict","scalarDividedByArray","arrayDividedByScalar","ceil","floor","sqrt","square","clip","step","elu","eluDer","selu","leakyRelu","alpha","prelu","preluDer","sigmoid","sin","cos","tan","asin","acos","atan","sinh","cosh","tanh","c1","c2","scalarTimesArray","elementWiseMulBroadcast","conv1d","filter","bias","stride","pad","input3D","reshapedTo3D","as3D","filter4D","as4D","input4D","strides","conv2d","reshapedTo4D","convInfo","computeConv2DInfo","conv2dDerInput","inShape","inShape4D","dy4D","inDepth","outDepth","conv2dDerBias","conv2dDerFilter","filterShape","conv2dTranspose","outputShape","depthwiseConv2D","rates","_a","param","parseTupleParam","rateHeight","rateWidth","maxPool","filterSize","computePool2DInfo","maxPoolBackprop","minPool","avgPool","resizeBilinear3D","newShape2D","alignCorners","batchNormalization2D","variance","varianceEpsilon","scale","offset","batchNormalization3D","multiRNNCell","lstmCells","h","newStates","push","newC","newH","basicLSTMCell","forgetBias","lstmKernel","lstmBias","combined","weighted","sliceCols","sliceSize","j","o","multinomial","probabilities","numSamples","seed","numOutcomes","Math","random","origRank","probs","oneHot","depth","onValue","offValue","moments","keepDimsShape","devSquared","norm","ord","normInternal","Infinity","gradients","keys","xs","flattenNameArrayMap","unflattenToNameArrayMap","valueAndGradients","disposeData","delete","getUnpackedArraySizeFromMatrixSize","matrixSize","channelsPerTexture","getMatrixSizeFromUnpackedArraySize","unpackedSize","getPackedMatrixTextureShapeWidthHeight","rows","columns","getPackedRGBAArraySizeFromMatrixShape","TextureType","getUnpackedMatrixTextureShapeWidthHeight","getColorMatrixTextureShapeWidthHeight","encodeMatrixToUnpackedArray","unpackedArray","requiredSize","dst","src","FLOAT_MAX","FLOAT_MIN","FLOAT_RANGE","FLOAT_DELTAS","FLOAT_POWERS","BYTE_NAN_VALUE","encodeFloatArray","floatArray","uintArray","Uint8Array","_loop_1","isNaN","normalizedValue","buckets","decodeToFloatArray","Float32Array","_loop_2","NaN","dot","delta","decodeMatrixFromUnpackedArray","decodeMatrixFromUnpackedColorRGBAArray","channels","encodeMatrixToPackedRGBA","packedRGBA","textureWidth","textureHeight","oddWidth","oddHeight","widthInFullBlocks","heightInFullBlocks","dstStride","oneRow","blockY","matrixSrcRow","blockX","srcStride","decodeMatrixFromPackedRGBA","dstRow1","dstRow2","graph_1","graph_util","add_1","argmax_1","argmaxequals_1","concat3d_1","convolution_1","divide_1","element_wise_activation_1","element_wise_cost_1","exp_1","linear_combination_1","log_1","max_pool_1","multiply_1","reduce_sum_1","reshape_1","softmax_1","subtract_1","emitFromGraphNodes","nodes","ops","ReshapeNode","Reshape","X","MatMulNode","X1","X2","MatMul","Convolution2DNode","w","W","B","Convolution2D","fieldSize","outputDepth","zeroPad","MaxPoolNode","MaxPool","ExpNode","Exp","LogNode","Log","ReLUNode","ReLU","LeakyReLUNode","LeakyReLU","PReLUNode","PReLU","ALPHA","EluNode","Elu","TanHNode","TanH","SigmoidNode","Sigmoid","SoftmaxCrossEntropyCostNode","target","TARGET","SoftmaxCrossEntropyCost","SoftmaxNode","Softmax","MeanSquaredCostNode","label","LABEL","prediction","PREDICTION","MeanSquaredCost","ArgMaxEqualsNode","ArgMaxNode","ArgMax","FusedLinearCombinationNode","LinearCombination","T1","T2","C1","C2","Concat3DNode","Concat3D","SquareNode","Square","AddNode","Add","SubtractNode","Subtract","MultiplyNode","Multiply","DivideNode","Divide","ReduceSumNode","ReduceSum","isInputNode","emitOpFromNode","it","Constructor","forbiddenField","TypeError","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","next","e","rejected","done","then","__generator","body","verb","n","op","_","t","pop","trys","g","sent","throw","return","Symbol","iterator","math_1","reduce_util","types","types_1","argminmax_gpu_1","batchnorm_gpu_1","binaryop_gpu","binaryop_gpu_1","clip_gpu_1","concat_gpu_1","conv_backprop_gpu_1","conv_gpu_1","conv_gpu_depthwise_1","copy_gpu_1","gpgpu_context_1","gpgpu_math","gpgpu_util","max_pool_backprop_gpu_1","mulmat_gpu_1","multinomial_gpu_1","onehot_gpu_1","pool_gpu_1","reduce_gpu_1","resize_bilinear_gpu_1","slice_gpu_1","tex_util_1","texture_manager_1","tile_gpu_1","transpose_gpu_1","unary_op","unaryop_gpu_1","webgl_util","MathBackendWebGL","gpgpu","delayedStorage","texData","binaryCache","gl","createWebGLContext","GPGPUContext","gpgpuCreatedLocally","textureManager","TextureManager","texShape","height","width","texture","acquireTexture","textureType","RGBA_COLOR","uploadPixelDataToTexture","getOrMakeTexData","releaseTexture","uploadToGPU","getTextureShapeFromLogicalShape","DEFAULT","throwIfNoData","cacheOnCPU","float32Values","downloadMatrixFromTexture","downloadMatrixFromRGBAColorTexture","_b","downloadMatrixFromTextureAsync","runQuery","start","performance","now","getTexture","getTextureData","getGPGPUContext","source","makeOutputArray","copy2D","program","SliceProgram","customSetup","getCustomSetupFunc","compileAndRun","sourceBeginRowCol","sourceSizeRowCol","dest","destBeginRowCol","destSizeRowCol","Copy2DProgram","ConcatProgram","UnaryOpProgram","NEG","MatMulProgram","BinaryOpProgram","MUL","upcastType","offsetShape","scaleShape","BatchNormProgram","TileProgram","TransposeProgram","reduce","reduceType","inSize","reduceInfo","windowSize","computeOptimalWindowSize","ReduceProgram","cols","argReduce","bestIndicesA","ArgMinMaxProgram","assertAxesAreInnerMostDims","outShape","a2D","outputDType","SumTypesMap","EQUAL","topKValues","topKIndices","DIV","ADD","SUB","POW","CEIL","FLOOR","EXP","LOG","SQRT","SQUARE","RELU","ELU","ELU_DER","SELU","LEAKY_RELU","PRELU","PRELU_DER","ClipProgram","ABS","SIGMOID","SIN","COS","TAN","ASIN","ACOS","ATAN","SINH","COSH","TANH","STEP","Conv2DProgram","Conv2DDerInputProgram","Conv2DDerFilterProgram","Conv2DDerBiasProgram","DepthwiseConv2DProgram","Pool2DProgram","maxPoolPositionsProgram","maxPoolPositions","maxPoolBackPropProgram","MaxPool2DBackpropProgram","ResizeBilinear3DProgram","MultinomialProgram","OneHotProgram","make","inputsData","array","outputData","key","makeShaderKey","binary","getAndSaveBinary","compileProgram","runProgram","getBinary","getTextureManager","deleteProgram","webGLProgram","newTexture","uploadMatrixToTexture","val","isValNaN","typedArrayToFloat32","dontKeepCopyOnGPU","Int32Array","getNaN","round","float32ToTypedArray","registerBackend","NDArrayMathGPU","setMath","InMemoryShuffledInputProviderBuilder","idx","inputCounter","epoch","shuffledIndices","createShuffledIndices","numInputs","numExamples","inputShape","getCurrentExampleIndex","returnIdx","getNextInput","inputId","currentExampleIndex","getEpoch","getInputProviders","inputProviders","getInputProvider","InCPUMemoryShuffledInputProviderBuilder","shuffledInputProvider","getNextCopy","like","disposeCopy","copy","InGPUMemoryShuffledInputProviderBuilder","px","concat","toString","webpackPolyfill","deprecate","paths","children","enumerable","l","classof","ITERATOR","getIteratorMethod","__WEBPACK_AMD_DEFINE_RESULT__","define","impl","opts","xg","me","strseed","charCodeAt","state","prng","double","int32","quick","tychei","isIterable","O","poolType","computePositions","variableNames","filterHeight","filterWidth","strideHeight","strideWidth","padTop","padInfo","top","padLeft","left","isAvgPool","initializationValue","compareOp_1","userCode","inHeight","inWidth","compareOp","returnValue","filterWidthNearestVec4","filterWidthVec4Remainder","updateSnippet","xhr_dataset","environment","render_ndarray_gpu_util","test_util","version_1","version","checkpoint_loader_1","CheckpointLoader","dataset_1","InMemoryDataset","input_provider_1","xhr_dataset_1","XhrDataset","Environment","Graph","Tensor","adadelta_optimizer_1","AdadeltaOptimizer","adagrad_optimizer_1","AdagradOptimizer","adam_optimizer_1","AdamOptimizer","adamax_optimizer_1","momentum_optimizer_1","MomentumOptimizer","optimizer_1","rmsprop_optimizer_1","RMSPropOptimizer","sgd_optimizer_1","SGDOptimizer","session_1","CostReduction","Session","graph_runner_1","GraphRunner","MetricReduction","initializers_1","ConstantInitializer","NDArrayInitializer","OnesInitializer","RandomNormalInitializer","RandomTruncatedNormalInitializer","RandomUniformInitializer","VarianceScalingInitializer","ZerosInitializer","backend_cpu_1","MathBackendCPU","NDArrayMathCPU","backend_webgl_1","Array1D","Array2D","Array3D","Array4D","defaultCompare","PriorityQueue","comparator","indexObserver","heap","enqueue","onIndexChanged","siftUp","dequeue","empty","swap","siftDown","update","newT","index","last","siftUpIndex","siftDownIndex","newIndex","getParentIndex","getLeftChildIndex","candidate","getRightChildIndex","parentIndex","compare","siftIndex","largestChildIndex","leftChildIndex","rightChildIndex","aIndex","bIndex","temp","isObject","window","self","Function","__g","xShape","meanShape","varianceShape","supportsBroadcasting","offsetSnippet","scaleSnippet","macrotask","Observer","MutationObserver","WebKitMutationObserver","process","isNode","head","notify","flush","parent","domain","exit","enter","nextTick","navigator","standalone","promise","toggle","document","createTextNode","observe","characterData","task","parseGrayscaleImageData","resultOffset","parseRGBImageData","parseTypedArrayFromPng","info","img","Image","setAttribute","onload","canvas","createElement","ctx","getContext","N","inputSize","PARSING_IMAGE_CANVAS_HEIGHT_PX","sWidth","sHeight","dWidth","dHeight","numPasses","pass","sy","drawImage","getImageData","parseImage","path","getXhrDatasetConfig","jsonConfigPath","xhr","XMLHttpRequest","open","JSON","parse","responseText","onerror","error","send","xhrDatasetConfig","getNDArray","dataPromise","dataType","responseType","event","response","err","parseTypedArrayFromBinary","ndarrays","subarray","fetchData","promises","all","dataset","descriptor","setToStringTag","IteratorPrototype","urlPath","charAt","loadManifest","checkpointManifest","MANIFEST_FILE","getCheckpointManifest","getAllVariables","variables","checkpointDefinition","variablePromises","getVariable","varName","variableRequestPromiseMethod","fname","filename","status","aShape","bShape","aRank","bRank","computeOutShape","x1Shape","x2Shape","slice","aOrient","bOrient","outerShapeA","outerShapeB","sharedDim","aSnippetFromOffset","vec4Offset","indexVar","bSnippetFromOffset","sharedDimNearestVec4","sharedDimVec4Remainder","$Object","desc","Date","limit","init","xor4096","network_TransformNetwork","TransformNetwork","varsRecording","currentStyle","dist","timesScalar","plusScalar","epsilonScalar","styleName","load","checkpointLoader","Check_Points_Path","_context2","preprocessedInput","conv1","convLayer","conv2","conv3","resid1","residualBlock","resid2","resid3","resid4","resid5","convT1","convTransposeLayer","convT2","convT3","outTanh","scaled","shifted","clamped","varId","y2","instanceNorm","numFilters","_input$shape","slicedToArray_default","_input$shape2","mu","sigmaSq","shift","epsilon","normalized","style_transfer_component_StyleTransferComponent","vue_runtime_esm","[object Object]","contentUrl","styleUrl","startBtnLoading","files","URL","createObjectURL","blob","fetch","$message","style_transfer_component___awaiter","transformNetwork","setStyle","getElementById","preprocessed","fromPixels","inferenceResult","predict","$refs","imageData","ImageData","putImageData","renderToCanvas","__decorate","vue_class_component_common_default","props","styleNames","type","style_transfer","render","_h","$createElement","_c","_self","attrs","staticClass","_v","accept","on","change","uploadContent","alt","placeholder","selectStyle","_l","loading","click","startTransfer","ref","staticRenderFns","Component","normalizeComponent","style_transfer_component","ssrContext","__webpack_exports__","copyTypedArray","vals","bool","instanceofTypedArray","toTypedArray","noConversionNeeded","isArray","flatten","makeZerosTypedArray","rand_1","DType","isDisposed","nextId","ones","makeOnesTypedArray","another","zerosLike","newValues","getValues","throwIfDisposed","inferFromImplicitShape","depth2","asType","newVals","dataSync","configurable","locs","_i","locToIndex","indexToLoc","fill","getValuesAsync","equals","rand","randFunction","randNormal","stdDev","randGauss","MPRandGauss","nextValue","randTruncatedNormal","randUniform","loc","inferredShape","inferShape","stride0","stride1","stride2","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","LIBRARY","$export","anInstance","forOf","speciesConstructor","microtask","newPromiseCapabilityModule","perform","promiseResolve","PROMISE","$Promise","newPromiseCapability","USE_NATIVE","FakePromise","exec","PromiseRejectionEvent","isThenable","isReject","_n","chain","ok","_s","run","reaction","handler","fail","onHandleUnhandled","onUnhandled","unhandled","isUnhandled","emit","onunhandledrejection","reason","onrejectionhandled","$reject","_d","_w","$resolve","wrapper","executor","onFulfilled","onRejected","catch","C","G","F","S","r","capability","$$reject","iter","iterable","remaining","$index","alreadyCalled","race","t1","t2","outTensor","isScalarShape","shouldBackProp","negSum","dySizeScalar","srcNumCols","destNumCols","sourceStart","destStart","destSize","setOutputMatrixWriteRegion","sourceStartCRLoc","getUniformLocation","uniform2i","destStartCRLoc","seedrandom","stdDeviation","truncated","nextVal","upper","lower","seedValue","alea","resultX","resultY","isValid","mul","isValidTruncated","convertValue","opSnippet","CHECK_NAN_SNIPPET","core","R","finally","onFinally","isFunction","KERNEL_METHODS","config","Clone","Slice1D","Slice2D","Slice3D","Slice4D","Concat1D","Concat2D","Concat4D","Neg","Sub","Mul","Div","Sum","ArgMin","Equal","TopKValues","TopKIndices","Min","Max","Ceil","Floor","Pow","Sqrt","Relu","LeakyRelu","PReLUDer","EluDer","Selu","Abs","Step","Sin","Cos","Tan","Asin","Acos","Atan","Sinh","Cosh","Tanh","Clip","Transpose","Tile","Conv2D","Conv2DDerInput","Conv2DDerFilter","Conv2DDerBias","DepthwiseConv2D","MaxPoolBackprop","AvgPool","MinPool","ResizeBilinear3D","BatchNorm3D","BatchNorm2D","Multinomial","OneHot","kernelName","TensorArrayMapBase","dict","tensor","skipChecks","nda","nullify","disposeArray","tensorID","hasNullArray","SummedTensorArrayMap","oldValue","newValue","__e","secondMoment","accB2","oldSecondMoment","gradientSquare","newSecondMoment","biasCorrectedFirstMoment","biasCorrectedSecondMoment","oldAccB2","xor128","xorwow","xorshift7","sr","isMobile","userAgent","vendor","opera","test","substr","xTensor","computeDefaultPad","isInt","toIObject","arrayIndexOf","IE_PROTO","object","names","UpcastInt32AndMap","UpcastBoolAndMap","UpcastFloat32AndMap","upcastTypeMap","float32","typeA","typeB","momentum","variableVelocities","m","oldVelocity","velocity","setMomentum","shader_compiler_1","concatAxis","dType","getCoordsDataType","unpackSnippet","getUnpack","sampleCoords","getSampleCoords","defer","channel","port","invoke","html","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","queue","ONREADYSTATECHANGE","listener","port2","port1","onmessage","postMessage","addEventListener","importScripts","appendChild","removeChild","setTimeout","clear","c1Tensor","c2Tensor","dotProduct1","dotProduct2","getWebGLContextAttributes","antialias","premultipliedAlpha","preserveDrawingBuffer","stencil","failIfMajorPerformanceCaveat","getTextureFormat","RGBA","RED","getTextureType","FLOAT","UNSIGNED_BYTE","createAndConfigureTexture","validateTextureSize","createTexture","tex2d","TEXTURE_2D","internalFormat","RGBA32F","R32F","getTextureInternalFormat","format","callAndCheck","bindTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","uploadDataToTexture","textureFormat","texSubImage2D","getDownloadTargetArrayBuffer","tex_util","decodeDownloadTargetArrayBuffer","downloadTarget","channelsPerPixel","attributes","createWebGLRenderingContextFromCanvas","createWebGLRenderingContext","disable","DEPTH_TEST","STENCIL_TEST","BLEND","DITHER","POLYGON_OFFSET_FILL","SAMPLE_COVERAGE","enable","SCISSOR_TEST","CULL_FACE","cullFace","BACK","createVertexShader","createVertexBuffer","vertexArray","createStaticVertexBuffer","createIndexBuffer","triangleVertexIndices","Uint16Array","createStaticIndexBuffer","createMatrixTexture","createColorMatrixTexture","createPackedMatrixTexture","bindVertexProgramAttributeStreams","vertexBuffer","attribLocations","bindBuffer","ARRAY_BUFFER","bindVertexBufferToProgramAttribute","getChannelsPerTexture","uploadMatrixToPackedTexture","downloadMatrixFromOutputTextureAsync","getBufferSubDataAsyncExtension","gl2","bufferSizeBytes","buffer","createBuffer","PIXEL_PACK_BUFFER","bufferData","STATIC_DRAW","readPixels","getBufferSubDataAsync","downloadMatrixFromOutputTexture","downloadMatrixFromPackedOutputTexture","sourceCoords","currentCoords","join","getSourceCoords","cof","propertyIsEnumerable","ArrayProto","valueOf","isArrayIter","anObject","toLength","getIterFn","BREAK","RETURN","entries","iterFn","is","depthwise","dataFormat","inChannels","filterChannels","outHeight","outWidth","bottom","right","computeOutputShape3D","padAlongHeight","padAlongWidth","top_1","getPadAndOutInfo","outChannels","inputRows","inputCols","outputRows","outputCols","computeWeightsShape4D","inputDepth","computeDilatedRC","rc","origStride","toObject","ObjectProto","getPrototypeOf","toInteger","yShape","yNumRows","yNumCols","gamma","accumulatedSquaredGradients","accumulatedUpdates","oldCache","oldUpdates","cache","updates","updateSquare","newUpdates","documentElement","TAG","ARG","T","tryGet","callee","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","context","Context","_invoke","GenStateSuspendedStart","method","arg","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","obj","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","AsyncIterator","hasOwn","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iteratorMethod","iteratorSymbol","Op","$Symbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","regeneratorRuntime","getProto","NativeIteratorPrototype","Gp","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","async","skipTempReset","prev","stop","rootRecord","rval","exception","handle","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","getCoords","startLoc","getUniformLocationNoThrow","uniform1i","uniform3i","uniform4i","IObject","defined","xSize","ySize","s0","s1","s2","mash","Mash","webglVersion","func","checkWebGLError","webGLDebugErrorCheckingEnabled","getError","NO_ERROR","getWebGLErrorMessage","INVALID_ENUM","INVALID_VALUE","INVALID_OPERATION","INVALID_FRAMEBUFFER_OPERATION","OUT_OF_MEMORY","CONTEXT_LOST_WEBGL","queryMaxTextureSize","MAX_TEXTURE_SIZE","getParameter","bindTextureUnit","textureUnit","validateTextureUnit","activeTexture","TEXTURE0","getFramebufferErrorMessage","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_UNSUPPORTED","throwIfNull","returnTOrNull","failureMessage","tOrNull","maxTextureUnit","MAX_COMBINED_TEXTURE_IMAGE_UNITS","glTextureUnit","textureUnitRange","enableDebugWebGLErrorChecking","enabled","getExtensionOrThrow","extensionName","getExtension","vertexShaderSource","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","createFragmentShader","fragmentShaderSource","fragmentShader","FRAGMENT_SHADER","shaderInfoLog","lineNumberRegexResult","lineNumberRegex","lineNumber","shaderLines","linesWithLineNumbers","line","rightPad","maxLineLength","beforeErrorLines","errorLine","afterErrorLines","logShaderSourceAndInfoLog","createProgram","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","validateProgram","VALIDATE_STATUS","ELEMENT_ARRAY_BUFFER","maxTextureSize","requested","createFramebuffer","attribute","arrayEntriesPerItem","itemStrideInBytes","itemOffsetInBytes","getAttribLocation","vertexAttribPointer","enableVertexAttribArray","unbindTextureUnit","getProgramUniformLocationOrThrow","uniformName","bindTextureToProgramUniformSampler","uniformSamplerLocation","bindCanvasToFramebuffer","bindFramebuffer","FRAMEBUFFER","viewport","scissor","bindColorTextureToFramebuffer","framebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","unbindColorTextureFromFramebuffer","validateFramebuffer","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","logShape","squeezeShape","maxTexSize","sizeToSquarishShape","bitmap","writable","seedLoc","uniform1f","dataShapes","normalizationInfo","getDataShape","dataIndex","getData","getStats","getStatsForData","inputMin","Number","POSITIVE_INFINITY","inputMax","NEGATIVE_INFINITY","exampleIndices","example","shuffle","inputValues","exampleCount","normalizeExamplesToRange","examples","curLowerBounds","curUpperBounds","newLowerBounds","newUpperBounds","curBoundsIsPerDimension","newBoundsIsPerDimension","newExamples","normalizedValues","curLowerBound","curRange","newLowerBound","newRange","computeBounds","isNormalized","minValues","maxValues","normalizeWithinBounds","lowerBound","upperBound","removeNormalization","unnormalizeExamples","numIndices","dPs","enumBugKeys","Empty","createDict","iframeDocument","iframe","style","display","contentWindow","lt","close","Properties","HTMLCanvasElement","HTMLImageElement","HTMLVideoElement","numPixels","startI","startJ","startK","startL","aVals","bVals","i2","j2","k2","l2","broadcastedBinaryOp","aValue","bValue","leftDim","rightDim","normalGetter","transposedGetter","aGetter","bGetter","resultDtype","minIndex","NAN_INT32","maxIndex","aVal","bVal","valuesAndIndices","sort","topkValues","getTypedArrayFromDType","topkIndices","resVals","inVals","resultValues","alphas","d2","yR","xRCorner","xRMin","xRMax","yC","xCCorner","xCMin","xCMax","dotProd","xR","wR","xC","wC","d1","biasVal","topPad","leftPad","dx","yRMax","yCMax","dW","yRMin","yCMin","numRows","numCols","chMul","q","newLoc","originalLoc","i_1","originalIndex","i_2","pool","minMaxValue","avgValue","pixel","maxPositions","maxValue","maxPosition","dxR","dxC","dyRCorner","dyCCorner","dyR","dyC","mask","effectiveInputSize","effectiveOutputSize","sourceFracRow","sourceFracCol","sourceRowFloor","sourceRowCeil","sourceColFloor","sourceColCeil","topLeft","bottomLeft","colFrac","xValues","meanValues","varianceValues","scaleValues","offsetValues","outValues","numEvents","probVals","cdf","event_1","outOffset","sampleId","event_2","event_3","aValues","bValues","aBroadcastDims","getBroadcastDims","bBroadcastDims","aLoc","bLoc","instance","dx1","dx2","shared","uid","getFilteredNodesXToY","tape","arraysFromX","nodesFromX","nodeInputs","inputAndArgs","inputName","anyInputFromX","keys_1","arraysLeadToY","nodesToY","outputs","keys_2","filteredTape","prunedInputs","nodeInput","prunedOutputs","outputName","prunedNode","assign","backpropagateGradients","arrayAccumulatedGradientMap","keys_3","inputGradients","grad","activation","curGradient","computeInputs","outputArrays","keys_4","inputArrays","inputArraysSeen","keys_5","extractNDArraysFromScopeResult","list","resultObj","stripUndefinedInputsFromInputConfig","SquareCostFunc","halfOne","cost","diff","diffSquared","der","dP","DESCRIPTORS","SPECIES","KEY","componentFactory","options","_componentTag","getOwnPropertyNames","$internalHooks","indexOf","getOwnPropertyDescriptor","methods","computed","mixins","vm","originalInit","_init","$options","plainData","collectDataFromConstructor","decorators","__decorators__","superProto","Super","Vue","Extended","extend","Original","extendedDescriptor","hasProto","superDescriptor","isPrimitive","forwardStaticMembers","ex","_interopDefault","registerHooks","Component$1","createDecorator","factory","Ctor","cost_functions_1","ElementWiseCost","oneOverNScalar","elementWiseCost","_interopRequireDefault","_isIterable3","_getIterator3","arr","_arr","_e","sliceIterator","store","USE_SYMBOL","SAFE_CLOSING","riter","from","skipClosing","safe","concatResult","z","def","tag","stat","SHARED","axesAreInnerMostDims","combineLocations","outputLoc","reduceLoc","outIdx","reduceIdx","msg","numAxes","IE8_DOM_DEFINE","toPrimitive","Attributes","crossEntropyCost","yPlusEps","logOutput","tarLogOutput","costVector","op_1","logitsTensor","labelTensor","softmaxTensor","softmaxResult","promiseCapability","getWebGLRenderingContext","webGLVersion","tempCanvas","loseContext","loseContextExtension","isWebGLVersionEnabled","getFeaturesFromURL","features","urlParams","getQueryParams","location","search","DEEPLEARNJS_FLAGS_PREFIX","urlFlags_1","keyValue","URL_PROPERTIES","urlProperty","Type","NUMBER","BOOLEAN","device_util","globalMath","backendRegistry","prevBackendRegistry","feature","evaluateFeature","getBestBackend","orderedBackends","backendId","isExtEnabled","isWebGLDisjointQueryTimerEnabled","frameBuffer","frameBufferComplete","readPixelsNoError","isFloatTextureReadPixelsEnabled","isEnabled","isWebGLGetBufferSubDataAsyncExtensionEnabled","setFeatures","bestBackend","ns","getGlobalNamespace","getOrMakeEnvironment","getIterator","TO_STRING","pos","String","PARALLELIZE_THRESHOLD","nearestDivisor","renderToFramebuffer","renderShader","sourceTex","setProgram","sourceSamplerLocation","setInputMatrixTexture","executeProgram","getRenderRGBShader","destinationWidth","createDesc","outputTexture","disposed","autoDebugValidate","textureFloatExtension","colorBufferFloatExtension","indexBuffer","deleteFramebuffer","deleteBuffer","enableAutomaticDebugValidation","deleteMatrixTexture","deleteTexture","downloadMatrixDriver","downloadMatrixDriverAsync","downloadMatrixFromPackedTexture","attachShader","useProgram","getAttributeLocation","inputMatrixTexture","uniformLocation","throwIfNoProgram","setOutputMatrixTexture","outputMatrixTexture","setOutputMatrixTextureDriver","setOutputPackedMatrixTexture","outputPackedMatrixTexture","startRow","startColumn","numColumns","setOutputMatrixWriteRegionDriver","setOutputPackedMatrixWriteRegion","debugValidate","drawElements","TRIANGLES","UNSIGNED_SHORT","blockUntilAllProgramsCompleted","queryFn","runQueryWebGL2","runQueryWebGL1","benchmark","ext","createQuery","beginQuery","TIME_ELAPSED_EXT","endQuery","repeatedTry","available","getQueryParameter","QUERY_RESULT_AVAILABLE","disjoint","GPU_DISJOINT_EXT","timeElapsedNanos","QUERY_RESULT","createQueryEXT","beginQueryEXT","endQueryEXT","getQueryObjectEXT","QUERY_RESULT_AVAILABLE_EXT","QUERY_RESULT_EXT","downloadMatrixDriverSetup","downloadMatrixDriverTeardown","downloadAndDecode","outputMatrixTextureMaybePacked","outSize","isReduceSum","windowSizeNearestVec4","windowSizeVec4Remainder","checkOutOfBounds","xNumRows","xNumCols","channelMul","getTerminatingNodesFromFeedDictionary","feedDictionary","getOrderedEvaluationSetFromEvalTensor","evalTensors","terminatingNodes","evalNodes","unorderedEvaluationSet","getUnorderedEvaluationSet","getOrderedEvaluationSet","addPersistentArraysToTensorArrayMap","evaluationSet","tensorArrayMap","VariableNode","ConstantNode","getVariableNodesFromEvaluationSet","throwIfFeedDictionaryContainsNDArrays","loadInputsFromFeedDictionaryToTensorArrayMap","batchFeed","activations","feedEntry","releaseFeedDictionaryInputsFromTensorArrayMap","provider","feedEntryArray","removeFeedDictionaryNodesFromEvaluationSet","splice","disposeAndInitializeOperationOutputs","isPassthroughNode","disposeAndInitializeOperationInputGradients","disposeTransientOperationArrays","operations","throwErrorIfEvaluationSetContainsPlaceholderNodes","PlaceholderNode","try","callbackfn","x1IsScalar","x2IsScalar","div","x2Squared","x1OverX2Squared","dyTimesDerivative","expr","ret","n1","n2","NAN_BOOL","clamp","distSquared","shapeA","shapeB","errorMessagePrefix","e2x","Uint32Array","repeat","checkFn","delayFn","maxCounter","tryCount","tryFn","nextBackoff","queryString","params","replace","decodeURIComponent","decodeParam","shapeProd","implicitIdx","NAN_FLOAT32","keptDims","isNDArrayInList","ndarrayList","checkForNaN","nameArrayMap","xMap","flatArrays","firstPass","compOp","indexSnippet","wTensor","bTensor","assertWeightsShape","weights","biases","dw","db","weightsShape","hadRuntime","oldRuntime","switched","originalOrder","switchedCoords","getSwitchedCoords","PROTOTYPE","own","out","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","IS_BIND","IS_WRAP","expProto","virtual","U","TanHFunc","ySquared","ReLUFunc","LeakyReluFunc","SigmoidFunc","SquareFunc","two","EluFunc","inRank","dims","unshift","broadcastDimsAreOuter","errMsg","un","GraphLayers","dense","units","useBias","kernelInitializer","biasInitializer","initialize","matmul","layers","addNodeAndReturnOutput","constant","finalValue","flatValues","fusedLinearCombination","reduceSum","concat3d","softmaxCrossEntropyCost","meanSquaredCost","argmax","argmaxEquals","validate","getNodes","nextID","Node","graph","shapeSize","AXIS","getMatMulOutputShape","mode","distribution","inputUnits","outputUnits","stdev","minval","maxval","getSamplerFromInInfo","inInfo","shapeInfo","logicalShape","inputInfo","texName","toUpperCase","getSamplerScalar","funcName","getSampler1D","texNumR","texNumC","squeezedShape","newInputInfo","squeezeInputInfo","getSqueezedParams","getSampler2D","texType","getSampler3D","getSampler4D","stringify","makeShader","inputsInfo","broadcast","sampleSnippet","FLOAT_TEXTURE_SAMPLE_SNIPPET","UNSIGNED_BYTE_TEXTURE_SAMPLE_SNIPPET","setOutputSnippet","FLOAT_TEXTURE_SETOUTPUT_SNIPPET","UNSIGNED_BYTE_TEXTURE_SETOUTPUT_SNIPPET","inputPrefixSnippet","inputSamplingSnippet","outShapeInfo","tNumR","tNumC","getSamplerFlat","inTexShape","isRGBAColorTexture","texFuncSnippet","broadcastDims","outRank","doBroadcast","broadcastOverOuter","coordsSnippet","rankDiff","unpackedCoordsSnippet","getBroadcastOutputCoordsSampler","outTexShape","inTexExpandedShape","rgbaColorSnippet","broadcastSnippet","getSamplerAtOutputCoords","getInputSamplingSnippet","outputSamplingSnippet","getOutput1DCoords","getOutput2DCoords","getOutput3DCoords","getOutput4DCoords","getOutputSamplingSnippet","SHADER_PREFIX","$keys","outputDimensionsRowCol","effectiveInputShape","effectiveOutputShape","hasBias","biasSnippet","inputDepthNearestVec4","inputDepthVec4Remainder","__webpack_amd_options__","session","eventObserver","lastCostTimestamp","lastEvalTimestamp","resetStatistics","zeroScalar","totalBatchesTrained","train","costTensor","trainFeedEntries","optimizer","numBatches","metricTensor","metricFeedEntries","metricBatchSize","metricReduction","evalIntervalMs","costIntervalMs","MEAN","metricBatchSizeScalar","metricIntervalMs","currentTrainLoopNumBatches","batchesTrainedThisRun","isTraining","trainStartTimestamp","trainNetwork","stopTraining","resumeTraining","shouldComputeCost","avgCostCallback","costReduction","NONE","avgCost","trainTime","trainExamplesPerSecCallback","examplesPerSec","metricCallback","lastComputedMetric","computeMetric","totalTimeCallback","batchesTrainedCallback","requestAnimationFrame","doneTrainingCallback","infer","inferenceTensor","inferenceFeedEntries","inferenceExampleIntervalMs","inferenceExampleCount","inferenceExamplesCallback","inferenceExamplesPerSecCallback","currentInferenceLoopNumPasses","isInferring","inferencePassesThisRun","inferNetwork","feeds","inferenceValues","ndarrayFeedEntries","nextCopy","eval","inferenceExamplesPerSecTime","lastInferTimeoutID","stopInferring","clearTimeout","isInferenceRunning","metric","metricValue","getTotalBatchesTrained","getLastComputedMetric","setSession","setInferenceTensor","setInferenceExampleCount","operation_emitter","session_util","FeedDictionary","feedEntries","runtimeCache","oneScalar","batchSizeScalar","evalAll","tensors","feed","getOrCreateRuntime","results","prevBatchSize","inferenceOperations","backPropOperations","afterExample","updateCostForExample","updateCostForBatch","totalCost","currCost","SUM","makeRuntimeCacheKey","minFixed","toFixed","maxFixed","callback","shortseed","mixkey","entropy","tostring","nodecrypto","randomBytes","crypto","msCrypto","getRandomValues","browser","plugins","screen","autoseed","arc4","keylen","count","chunks","startdenom","significance","overflow","is_math_call","rngname","prop","typ","smear","stringseed","fromCharCode","$$resolve","activation_functions_1","ElementWiseActivation","dydx","alphaTensor","specifiedVariableNodes","accumulatedGradient","getKeys","defineProperties","getKeyFromTextureShape","shapeRowsCol","numUsedTextures","numFreeTextures","freeTextures","logEnabled","allocatedTextures","usedTextureCount","shapeRC","shapeKey","total","getNumUsedTextures","getNumFreeTextures","shouldUploadNaNUniform","validateBinaryAndProgram","shapeInfos","texShapeA","texShapeB","shader_compiler","ATTRIBUTE_NAMES","NAN_UNIFORM_NAME","inputInfos","inShapeInfos","uniformLocations","attributeLocations","outTex","tex","variableName","variableUniformLocation","keyInputs","keyUserCode","keyBroadcast","D","standardDeviation","squareDiffSum","kurtosis","valuesMean","sum2","sum4","skewness","sum3","expectNumbersClose","TEST_EPSILON","areClose","describeWithFeaturesAndExecutor","testNameBase","tests","featuresList","testName","executeMathTests","mathFactory","executeTests","testFunc","PROMISE_IT","customBeforeEach","customAfterEach","customIt","describe","beforeEach","afterEach","jarqueBeraNormalityTest","jb","expectArrayInMeanStdRange","actual","expectedMean","expectedStdDev","actualMean","expectArraysClose","expected","aType","bType","actualValues","expectedValues","actualStr","expectedStr","expectValuesInRange","low","high","randomArrayInRange","minValue","range","makeIdentity","cpuMultiplyMatrix","aRow","aCol","bRow","bCol","aOffset","cOffset","cpuDotProduct","describeMathCPU","describeMathGPU","describeCustom","assertIsNan","lastIndex","toAbsoluteIndex","IS_INCLUDES","$this","el","fromIndex","redefine","$iterCreate","BUGGY","returnThis","Base","IS_SET","FORCED","getMethod","kind","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","setLearningRate","_defineProperty2","protoProps","staticProps","addToUnscopables","iterated","_t","_k","Arguments","kernel_registry","tape_util","nextTapeNodeId","gradientScopeCount","debugMode","activeScope","scopeStack","paddedName","activeTape","evaluatedNode","kernel","gradientWrt","gradientsMode","newScopeArrays","arraysToKeep","arraysToTrackInParent","priority_queue","priority_queue_1","terminatingNodeMap","seen","visit","cur","nodeIndices","pendingDependencies","nodeQueue","$at","point"],"mappings":"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","file":"static/js/0.a8a6892efdde7166ca08.js","sourcesContent":["// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_descriptors.js\n// module id = +E39\n// module chunks = 0","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_ctx.js\n// module id = +ZMJ\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = require(\"../../math/ndarray\");\nvar tensor_array_map_1 = require(\"../tensor_array_map\");\nvar optimizer_1 = require(\"./optimizer\");\nvar AdamaxOptimizer = (function (_super) {\n    __extends(AdamaxOptimizer, _super);\n    function AdamaxOptimizer(learningRate, beta1, beta2, specifiedVariableList) {\n        var _this = _super.call(this, learningRate, specifiedVariableList) || this;\n        _this.learningRate = learningRate;\n        _this.beta1 = beta1;\n        _this.beta2 = beta2;\n        _this.firstMoment = new tensor_array_map_1.TensorArrayMap();\n        _this.weightedInfNorm = new tensor_array_map_1.TensorArrayMap();\n        _this.eps = ndarray_1.Scalar.new(1e-8);\n        _this.b1 = ndarray_1.Scalar.new(_this.beta1);\n        _this.b2 = ndarray_1.Scalar.new(_this.beta2);\n        _this.accB1 = ndarray_1.Scalar.new(_this.beta1);\n        return _this;\n    }\n    AdamaxOptimizer.prototype.beforeBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        _super.prototype.beforeBatch.call(this, math, batchSize, runtime, activationArrayMap, gradientArrayMap);\n        if (this.firstMoment.size() === 0) {\n            this.variableNodes.forEach(function (node) {\n                _this.firstMoment.set(node.output, ndarray_1.NDArray.zeros(node.output.shape));\n            });\n        }\n        if (this.weightedInfNorm.size() === 0) {\n            this.variableNodes.forEach(function (node) {\n                _this.weightedInfNorm.set(node.output, ndarray_1.NDArray.zeros(node.output.shape));\n            });\n        }\n    };\n    AdamaxOptimizer.prototype.afterBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        math.scope(function (keep) {\n            _this.variableNodes.forEach(function (node) {\n                var oldVariable = activationArrayMap.get(node.output);\n                var gradient = _this.variableGradients.get(node.output);\n                var oldFirstMoment = _this.firstMoment.get(node.output);\n                var oldWeightedInfNorm = _this.weightedInfNorm.get(node.output);\n                var newFirstMoment = math.scaledArrayAdd(_this.b1, oldFirstMoment, math.subtract(_this.one, _this.b1), gradient);\n                var ut0 = math.multiply(_this.b2, oldWeightedInfNorm);\n                var ut1 = math.abs(gradient);\n                var newWeightedInfNorm = math.add(math.relu(math.subtract(ut0, ut1)), ut1);\n                var variable = math.scaledArrayAdd(_this.one, oldVariable, math.divide(_this.c, math.subtract(_this.one, _this.accB1)), math.divide(newFirstMoment, math.add(_this.eps, newWeightedInfNorm)));\n                activationArrayMap.set(node.output, keep(variable));\n                node.data = variable;\n                _this.firstMoment.set(node.output, keep(newFirstMoment));\n                _this.weightedInfNorm.set(node.output, keep(newWeightedInfNorm));\n                oldVariable.dispose();\n                gradient.dispose();\n                oldFirstMoment.dispose();\n                oldWeightedInfNorm.dispose();\n            });\n            var oldAccB1 = _this.accB1;\n            _this.accB1 = keep(math.multiply(_this.accB1, _this.b1));\n            oldAccB1.dispose();\n        });\n        this.variableGradients.dispose();\n        this.variableGradients = new tensor_array_map_1.TensorArrayMap();\n    };\n    AdamaxOptimizer.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.firstMoment.dispose();\n        this.weightedInfNorm.dispose();\n        this.eps.dispose();\n        this.accB1.dispose();\n        this.b1.dispose();\n        this.b2.dispose();\n    };\n    return AdamaxOptimizer;\n}(optimizer_1.Optimizer));\nexports.AdamaxOptimizer = AdamaxOptimizer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/optimizers/adamax_optimizer.js\n// module id = +cXR\n// module chunks = 0","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/web.dom.iterable.js\n// module id = +tPU\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar op_1 = require(\"./op\");\nvar ArgMaxEquals = (function (_super) {\n    __extends(ArgMaxEquals, _super);\n    function ArgMaxEquals(x1Tensor, x2Tensor, yTensor) {\n        var _this = _super.call(this) || this;\n        _this.x1Tensor = x1Tensor;\n        _this.x2Tensor = x2Tensor;\n        _this.yTensor = yTensor;\n        return _this;\n    }\n    ArgMaxEquals.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x1 = inferenceArrays.get(this.x1Tensor);\n        var x2 = inferenceArrays.get(this.x2Tensor);\n        math.scope(function (keep) {\n            inferenceArrays.set(_this.yTensor, keep(math.argMaxEquals(x1, x2)));\n        });\n    };\n    ArgMaxEquals.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        throw new Error('ArgMaxEquals backprop unimplemented');\n    };\n    return ArgMaxEquals;\n}(op_1.Operation));\nexports.ArgMaxEquals = ArgMaxEquals;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/ops/argmaxequals.js\n// module id = +tPX\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/promise\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/promise.js\n// module id = //Fk\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Operation = (function () {\n    function Operation() {\n    }\n    Operation.prototype.disposeTransientArrays = function (inferenceArrays, gradientArrays) { };\n    Operation.prototype.dispose = function () { };\n    return Operation;\n}());\nexports.Operation = Operation;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/ops/op.js\n// module id = /ROS\n// module chunks = 0","module.exports = {};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iterators.js\n// module id = /bQp\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../environment\");\nvar util = require(\"../util\");\nvar axis_util = require(\"./axis_util\");\nvar backend_engine_1 = require(\"./backends/backend_engine\");\nvar matmul_1 = require(\"./backends/types/matmul\");\nvar broadcast_util = require(\"./broadcast_util\");\nvar concat_util = require(\"./concat_util\");\nvar conv_util = require(\"./conv_util\");\nvar ndarray_1 = require(\"./ndarray\");\nvar slice_util = require(\"./slice_util\");\nvar NDArrayMath = (function () {\n    function NDArrayMath(backend, safeMode) {\n        this.registeredArrays = new Set();\n        this.customBackend = false;\n        if (typeof backend === 'string') {\n            this.backend = environment_1.ENV.getBackend(backend);\n        }\n        else {\n            this.customBackend = true;\n            this.backend = backend;\n        }\n        this.backendEngine = new backend_engine_1.BackendEngine(this.backend, safeMode);\n    }\n    NDArrayMath.prototype.time = function (query) {\n        return this.backend.time(query);\n    };\n    NDArrayMath.prototype.getNumArrays = function () {\n        return this.registeredArrays.size;\n    };\n    NDArrayMath.prototype.register = function (a) {\n        if (this.registeredArrays.has(a.id)) {\n            throw new Error(\"NDArray with id \" + a.id + \" was already registered\");\n        }\n        this.registeredArrays.add(a.id);\n        this.backendEngine.track(a);\n    };\n    NDArrayMath.prototype.writePixels = function (id, pixels, numChannels) {\n        this.backend.writePixels(id, pixels, numChannels);\n    };\n    NDArrayMath.prototype.write = function (id, values, dtype, shape) {\n        this.backend.write(id, values, dtype, shape);\n    };\n    NDArrayMath.prototype.readSync = function (id) {\n        return this.backend.readSync(id);\n    };\n    NDArrayMath.prototype.read = function (id) {\n        return this.backend.read(id);\n    };\n    NDArrayMath.prototype.enableDebugMode = function () {\n        this.backendEngine.enableDebugMode();\n        console.warn('Debugging mode is ON. The output of every math call will ' +\n            'be downloaded to CPU and checked for NaNs. ' +\n            'This significantly impacts performance.');\n    };\n    NDArrayMath.prototype.scope = function (scopeFn) {\n        var gradientsMode = false;\n        return this.backendEngine.scope('scope', scopeFn, gradientsMode);\n    };\n    NDArrayMath.prototype.gradientsScope = function (scopeFn) {\n        var gradientsMode = true;\n        return this.backendEngine.scope('gradientsScope', scopeFn, gradientsMode);\n    };\n    NDArrayMath.prototype.startScope = function () {\n        var gradientsMode = false;\n        this.backendEngine.startScope(gradientsMode);\n    };\n    NDArrayMath.prototype.endScope = function (result) {\n        var gradientsMode = false;\n        this.backendEngine.endScope(result, gradientsMode);\n    };\n    NDArrayMath.prototype.keep = function (result) {\n        return this.backendEngine.keep(result);\n    };\n    NDArrayMath.prototype.track = function (result) {\n        return this.backendEngine.track(result);\n    };\n    NDArrayMath.prototype.dispose = function () {\n        if (this.customBackend) {\n            this.backend.dispose();\n        }\n    };\n    NDArrayMath.prototype.matMul = function (a, b, aOrientation, bOrientation) {\n        var _this = this;\n        if (aOrientation === void 0) { aOrientation = matmul_1.MatrixOrientation.REGULAR; }\n        if (bOrientation === void 0) { bOrientation = matmul_1.MatrixOrientation.REGULAR; }\n        var innerShapeA = (aOrientation === matmul_1.MatrixOrientation.REGULAR) ? a.shape[1] : a.shape[0];\n        var innerShapeB = (bOrientation === matmul_1.MatrixOrientation.REGULAR) ? b.shape[0] : b.shape[1];\n        util.assert(a.rank === 2 && b.rank === 2, \"Error in matMul: inputs must be rank 2, got ranks \" + a.rank +\n            (\" and \" + b.rank + \".\"));\n        util.assert(innerShapeA === innerShapeB, \"Error in matMul: inner shapes (\" + innerShapeA + \") and (\" +\n            (innerShapeB + \") of NDArrays with shapes \" + a.shape + \" and \") +\n            (b.shape + \" and orientations \" + matmul_1.MatrixOrientation[aOrientation]) +\n            (\" and \" + matmul_1.MatrixOrientation[bOrientation] + \" must match.\"));\n        return this.backendEngine.executeKernel('MatMul', { inputs: { a: a, b: b }, args: { aOrientation: aOrientation, bOrientation: bOrientation } }, function (dy, y) {\n            if (aOrientation === matmul_1.MatrixOrientation.TRANSPOSED ||\n                bOrientation === matmul_1.MatrixOrientation.TRANSPOSED) {\n                throw new Error(\"Backprop for transposed MatMul not yet implemented.\");\n            }\n            return {\n                a: function () { return _this.matMul(dy, b, matmul_1.MatrixOrientation.REGULAR, matmul_1.MatrixOrientation.TRANSPOSED); },\n                b: function () { return _this.matMul(a, dy, matmul_1.MatrixOrientation.TRANSPOSED, matmul_1.MatrixOrientation.REGULAR); }\n            };\n        });\n    };\n    NDArrayMath.prototype.executeOp = function (name, f) {\n        return f();\n    };\n    NDArrayMath.prototype.vectorTimesMatrix = function (v, matrix) {\n        util.assert(v.rank === 1, \"Error in vectorTimesMatrix: first input must be rank 1, but got \" +\n            (\"rank \" + v.rank + \".\"));\n        util.assert(matrix.rank === 2, \"Error in vectorTimesMatrix: second input must be rank 2, but got \" +\n            (\"rank \" + matrix.rank + \".\"));\n        util.assert(v.size === matrix.shape[0], \"Error in vectorTimesMatrix: size of vector (\" + v.size + \") \" +\n            (\"must match first dimension of matrix (\" + matrix.shape[0] + \")\"));\n        return this.matMul(v.as2D(1, -1), matrix).as1D();\n    };\n    NDArrayMath.prototype.matrixTimesVector = function (matrix, v) {\n        util.assert(v.rank === 1, \"Error in matrixTimesVector: second input must rank 1, but got \" +\n            (\"rank \" + v.rank + \".\"));\n        util.assert(matrix.rank === 2, \"Error in matrixTimesVector: first input must be a rank 2, but got \" +\n            (\"rank \" + matrix.rank + \".\"));\n        util.assert(v.size === matrix.shape[1], \"Error in matrixTimesVector: size of first rank 1 input \" + v.size + \" \" +\n            \"must match inner dimension of second rank 2 input, but got \" +\n            (\"shape \" + matrix.shape + \".\"));\n        return this.matMul(matrix, v.as2D(-1, 1)).as1D();\n    };\n    NDArrayMath.prototype.dotProduct = function (v1, v2) {\n        util.assert(v1.rank === 1 && v2.rank === 1, \"Error in dotProduct: inputs must be rank 1, but got ranks \" +\n            (v1.rank + \" and \" + v2.rank + \".\"));\n        util.assert(v1.size === v2.size, \"Error in dotProduct: size of inputs (\" + v1.size + \") and (\" +\n            (v2.size + \") must match.\"));\n        return this.matMul(v1.as2D(1, -1), v2.as2D(-1, 1)).asScalar();\n    };\n    NDArrayMath.prototype.outerProduct = function (v1, v2) {\n        util.assert(v1.rank === 1 && v2.rank === 1, \"Error in outerProduct: inputs must be rank 1, but got ranks \" +\n            (v1.rank + \" and \" + v2.rank + \".\"));\n        return this.matMul(v1.as2D(-1, 1), v2.as2D(1, -1));\n    };\n    NDArrayMath.prototype.clone = function (x) {\n        return this.backendEngine.executeKernel('Clone', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.reshape = function (ndarray, newShape) {\n        console.warn('math.reshape() is deprecated. Please call reshape() ' +\n            'directly on the ndarray object');\n        return ndarray.reshape(newShape);\n    };\n    NDArrayMath.prototype.slice1D = function (x, begin, size) {\n        slice_util.assertParamsValid(x, [begin], [size]);\n        return this.backendEngine.executeKernel('Slice1D', { inputs: { x: x }, args: { begin: begin, size: size } });\n    };\n    NDArrayMath.prototype.slice2D = function (x, begin, size) {\n        slice_util.assertParamsValid(x, begin, size);\n        return this.backendEngine.executeKernel('Slice2D', { inputs: { x: x }, args: { begin: begin, size: size } });\n    };\n    NDArrayMath.prototype.slice3D = function (x, begin, size) {\n        slice_util.assertParamsValid(x, begin, size);\n        return this.backendEngine.executeKernel('Slice3D', { inputs: { x: x }, args: { begin: begin, size: size } });\n    };\n    NDArrayMath.prototype.slice4D = function (x, begin, size) {\n        slice_util.assertParamsValid(x, begin, size);\n        return this.backendEngine.executeKernel('Slice4D', { inputs: { x: x }, args: { begin: begin, size: size } });\n    };\n    NDArrayMath.prototype.concat1D = function (a, b) {\n        concat_util.assertParams(a.shape, b.shape, 0);\n        return this.backendEngine.executeKernel('Concat1D', { inputs: { a: a, b: b } });\n    };\n    NDArrayMath.prototype.concat2D = function (a, b, axis) {\n        concat_util.assertParams(a.shape, b.shape, axis);\n        return this.backendEngine.executeKernel('Concat2D', { inputs: { a: a, b: b }, args: { axis: axis } });\n    };\n    NDArrayMath.prototype.concat3D = function (a, b, axis) {\n        concat_util.assertParams(a.shape, b.shape, axis);\n        return this.backendEngine.executeKernel('Concat3D', { inputs: { a: a, b: b }, args: { axis: axis } });\n    };\n    NDArrayMath.prototype.concat4D = function (a, b, axis) {\n        concat_util.assertParams(a.shape, b.shape, axis);\n        return this.backendEngine.executeKernel('Concat4D', { inputs: { a: a, b: b }, args: { axis: axis } });\n    };\n    NDArrayMath.prototype.logSumExp = function (input, axis, keepDims) {\n        var _this = this;\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        var axes = axis_util.parseAxisParam(axis, input.shape);\n        return this.executeOp('logSumExp', function () {\n            var xMax = _this.max(input, axes, true);\n            var a = _this.subtract(input, xMax);\n            var b = _this.exp(a);\n            var c = _this.sum(b, axes);\n            var d = _this.log(c);\n            var res = _this.add(xMax.reshape(d.shape), d);\n            if (keepDims) {\n                var newShape = axis_util.expandShapeToKeepDim(res.shape, axes);\n                return res.reshape(newShape);\n            }\n            return res;\n        });\n    };\n    NDArrayMath.prototype.sum = function (x, axis, keepDims) {\n        var _this = this;\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        var origAxes = axis_util.parseAxisParam(axis, x.shape);\n        var axes = origAxes;\n        var permutedAxes = axis_util.getPermutedAxes(axes, x.rank);\n        return this.executeOp('sum', function () {\n            if (permutedAxes != null) {\n                x = _this.transpose(x, permutedAxes);\n                axes = axis_util.getInnerMostAxes(axes.length, x.rank);\n            }\n            var res = _this.backendEngine.executeKernel('Sum', { inputs: { x: x }, args: { axes: axes } }, function (dy, y) {\n                return {\n                    x: function () {\n                        if (axis != null) {\n                            throw new Error(\"Gradients for sum with axis reduction not yet \" +\n                                \"supported.\");\n                        }\n                        return _this.multiply(dy, ndarray_1.NDArray.onesLike(x));\n                    }\n                };\n            });\n            if (keepDims) {\n                var newShape = axis_util.expandShapeToKeepDim(res.shape, origAxes);\n                return res.reshape(newShape);\n            }\n            return res;\n        });\n    };\n    NDArrayMath.prototype.mean = function (x, axis, keepDims) {\n        var _this = this;\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        var axes = axis_util.parseAxisParam(axis, x.shape);\n        var shapes = axis_util.computeOutAndReduceShapes(x.shape, axes);\n        var reduceShape = shapes[1];\n        var reduceSize = util.sizeFromShape(reduceShape);\n        return this.executeOp('mean', function () {\n            return _this.scope(function (keep) {\n                var res = _this.divide(x, ndarray_1.Scalar.new(reduceSize));\n                return _this.sum(res, axis, keepDims);\n            });\n        });\n    };\n    NDArrayMath.prototype.argMin = function (x, axis) {\n        var _this = this;\n        if (axis === void 0) { axis = null; }\n        var axes = axis_util.parseAxisParam(axis, x.shape);\n        var permutedAxes = axis_util.getPermutedAxes(axes, x.rank);\n        return this.executeOp('argMin', function () {\n            if (permutedAxes != null) {\n                x = _this.transpose(x, permutedAxes);\n                axes = axis_util.getInnerMostAxes(axes.length, x.rank);\n            }\n            return _this.backendEngine.executeKernel('ArgMin', { inputs: { x: x }, args: { axes: axes } });\n        });\n    };\n    NDArrayMath.prototype.argMax = function (x, axis) {\n        var _this = this;\n        if (axis === void 0) { axis = null; }\n        var axes = axis_util.parseAxisParam(axis, x.shape);\n        var permutedAxes = axis_util.getPermutedAxes(axes, x.rank);\n        return this.executeOp('argMax', function () {\n            if (permutedAxes != null) {\n                x = _this.transpose(x, permutedAxes);\n                axes = axis_util.getInnerMostAxes(axes.length, x.rank);\n            }\n            return _this.backendEngine.executeKernel('ArgMax', { inputs: { x: x }, args: { axes: axes } });\n        });\n    };\n    NDArrayMath.prototype.argMaxEquals = function (x1, x2) {\n        var _this = this;\n        util.assertShapesMatch(x1.shape, x2.shape, 'Error in argMaxEquals: ');\n        return this.executeOp('argMaxEquals', function () { return _this.scope(function () {\n            return _this.equal(_this.argMax(x1), _this.argMax(x2));\n        }); });\n    };\n    NDArrayMath.prototype.equal = function (a, b) {\n        return this.backendEngine.executeKernel('Equal', { inputs: { a: a, b: b } });\n    };\n    NDArrayMath.prototype.equalStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in equalStrict: ');\n        return this.equal(a, b);\n    };\n    NDArrayMath.prototype.topK = function (x, k) {\n        var _this = this;\n        util.assert(k <= x.size, \"Error in topK: k value (\" + k + \") must be less than size of input \" +\n            (\"ndarray, got shape \" + x.shape + \".\"));\n        var values;\n        var indices;\n        this.executeOp('topK', function () {\n            values = _this.backendEngine.executeKernel('TopKValues', { inputs: { x: x }, args: { k: k } });\n            indices = _this.backendEngine.executeKernel('TopKIndices', { inputs: { x: x }, args: { k: k } });\n            return values;\n        });\n        var result = { values: values, indices: indices };\n        return result;\n    };\n    NDArrayMath.prototype.min = function (x, axis, keepDims) {\n        var _this = this;\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        var origAxes = axis_util.parseAxisParam(axis, x.shape);\n        var axes = origAxes;\n        var permutedAxes = axis_util.getPermutedAxes(axes, x.rank);\n        return this.executeOp('min', function () {\n            if (permutedAxes != null) {\n                x = _this.transpose(x, permutedAxes);\n                axes = axis_util.getInnerMostAxes(axes.length, x.rank);\n            }\n            var res = _this.backendEngine.executeKernel('Min', { inputs: { x: x }, args: { axes: axes } });\n            if (keepDims) {\n                var newShape = axis_util.expandShapeToKeepDim(res.shape, origAxes);\n                return res.reshape(newShape);\n            }\n            return res;\n        });\n    };\n    NDArrayMath.prototype.max = function (x, axis, keepDims) {\n        var _this = this;\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        var origAxes = axis_util.parseAxisParam(axis, x.shape);\n        var axes = origAxes;\n        var permutedAxes = axis_util.getPermutedAxes(axes, x.rank);\n        return this.executeOp('max', function () {\n            if (permutedAxes != null) {\n                x = _this.transpose(x, permutedAxes);\n                axes = axis_util.getInnerMostAxes(axes.length, x.rank);\n            }\n            var res = _this.backendEngine.executeKernel('Max', { inputs: { x: x }, args: { axes: axes } });\n            if (keepDims) {\n                var newShape = axis_util.expandShapeToKeepDim(res.shape, origAxes);\n                return res.reshape(newShape);\n            }\n            return res;\n        });\n    };\n    NDArrayMath.prototype.softmax = function (logits, dim) {\n        var _this = this;\n        if (dim === void 0) { dim = -1; }\n        if (dim === -1) {\n            dim = logits.rank - 1;\n        }\n        if (dim !== logits.rank - 1) {\n            throw Error('Softmax along a non-last dimension is not yet supported. ' +\n                (\"Logits was rank \" + logits.rank + \" and dim was \" + dim));\n        }\n        return this.executeOp('softmax', function () {\n            return _this.scope(function () {\n                var lse = _this.logSumExp(logits, [dim], true);\n                var logResult = _this.subtract(logits, lse);\n                return _this.exp(logResult);\n            });\n        });\n    };\n    NDArrayMath.prototype.switchDim = function (a, newDim) {\n        return this.transpose(a, newDim);\n    };\n    NDArrayMath.prototype.tile = function (x, reps) {\n        util.assert(x.rank === reps.length, \"Error in transpose: rank of input \" + x.rank + \" \" +\n            (\"must match length of reps \" + reps + \".\"));\n        return this.backendEngine.executeKernel('Tile', { inputs: { x: x }, args: { reps: reps } });\n    };\n    NDArrayMath.prototype.transpose = function (x, perm) {\n        if (perm == null) {\n            perm = x.shape.map(function (s, i) { return i; }).reverse();\n        }\n        util.assert(x.rank === perm.length, \"Error in transpose: rank of input \" + x.rank + \" \" +\n            (\"must match length of perm \" + perm + \".\"));\n        return this.backendEngine.executeKernel('Transpose', { inputs: { x: x }, args: { perm: perm } });\n    };\n    NDArrayMath.prototype.scalarPlusArray = function (c, a) {\n        util.assert(c.size === 1, \"Error in scalarPlusArray: first argument must be rank 0, but got \" +\n            (\"rank \" + c.rank + \".\"));\n        return this.add(c, a);\n    };\n    NDArrayMath.prototype.scalarMinusArray = function (c, a) {\n        util.assert(c.size === 1, \"Error in scalarMinusArray: first argument must be rank 0, but got \" +\n            (\"rank \" + c.rank + \".\"));\n        return this.subtract(c, a);\n    };\n    NDArrayMath.prototype.arrayMinusScalar = function (a, c) {\n        util.assert(c.size === 1, \"Error in arrayMinusScalar: second argument must be rank 0, but \" +\n            (\"got rank \" + c.rank + \".\"));\n        return this.subtract(a, c);\n    };\n    NDArrayMath.prototype.neg = function (x) {\n        return this.backendEngine.executeKernel('Neg', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.add = function (a, b) {\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return this.backendEngine.executeKernel('Add', { inputs: { a: a, b: b } });\n    };\n    NDArrayMath.prototype.addStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in addStrict: ');\n        return this.add(a, b);\n    };\n    NDArrayMath.prototype.subtract = function (a, b) {\n        var _this = this;\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return this.backendEngine.executeKernel('Sub', { inputs: { a: a, b: b } }, function (dy, y) {\n            if (!util.arraysEqual(a.shape, b.shape)) {\n                throw new Error(\"Backprop through broadcasted subtract not \" +\n                    \"yet supported.\");\n            }\n            return {\n                a: function () { return ndarray_1.NDArray.onesLike(a); },\n                b: function () { return _this.scope(function () { return _this.neg(ndarray_1.NDArray.onesLike(b)); }); }\n            };\n        });\n    };\n    NDArrayMath.prototype.pow = function (a, b) {\n        var _this = this;\n        util.assert(b.dtype === 'int32', 'only supports int32 data type for the exponent parameter.');\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var gradient = function (dy, y) {\n            if (!util.arraysEqual(a.shape, b.shape)) {\n                throw new Error(\"Gradient of pow not yet supported for broadcasted shapes.\");\n            }\n            var derA = function () {\n                return _this.scope(function () {\n                    return _this.multiply(dy, _this.multiply(b, _this.pow(a, _this.subtract(b, ndarray_1.Scalar.new(1, 'int32')))));\n                });\n            };\n            var derB = function () {\n                throw new Error(\"Backprop through exponent of math.pow not \" +\n                    \"implemented yet.\");\n            };\n            return { a: derA, b: derB };\n        };\n        return this.backendEngine.executeKernel('Pow', { inputs: { a: a, b: b } }, gradient);\n    };\n    NDArrayMath.prototype.powStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in powStrict: ');\n        return this.pow(a, b);\n    };\n    NDArrayMath.prototype.sub = function (a, b) {\n        return this.subtract(a, b);\n    };\n    NDArrayMath.prototype.subStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in subStrict: ');\n        return this.subtract(a, b);\n    };\n    NDArrayMath.prototype.multiply = function (a, b) {\n        var _this = this;\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return this.backendEngine.executeKernel('Mul', { inputs: { a: a, b: b } }, function (dy, y) {\n            if (!util.arraysEqual(a.shape, b.shape)) {\n                throw new Error(\"Backprop through broadcasted multiply not supported yet.\");\n            }\n            return { a: function () { return _this.clone(b); }, b: function () { return _this.clone(a); } };\n        });\n    };\n    NDArrayMath.prototype.elementWiseMul = function (a, b) {\n        return this.multiplyStrict(a, b);\n    };\n    NDArrayMath.prototype.multiplyStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in multiplyStrict: ');\n        return this.multiply(a, b);\n    };\n    NDArrayMath.prototype.divide = function (a, b) {\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return this.backendEngine.executeKernel('Div', { inputs: { a: a, b: b } });\n    };\n    NDArrayMath.prototype.divideStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in divideStrict: ');\n        return this.divide(a, b);\n    };\n    NDArrayMath.prototype.scalarDividedByArray = function (c, a) {\n        util.assert(c.size === 1, \"Error in scalarDividedByArray: first argument must be rank 0, but \" +\n            (\"got NDArray of rank \" + c.rank + \".\"));\n        return this.divide(c, a);\n    };\n    NDArrayMath.prototype.arrayDividedByScalar = function (a, c) {\n        util.assert(c.size === 1, \"Error in arrayDividedByScalar: second argument must be rank 0, \" +\n            (\"but got NDArray of rank \" + c.rank + \".\"));\n        return this.divide(a, c);\n    };\n    NDArrayMath.prototype.ceil = function (x) {\n        return this.backendEngine.executeKernel('Ceil', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.floor = function (x) {\n        return this.backendEngine.executeKernel('Floor', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.exp = function (x) {\n        return this.backendEngine.executeKernel('Exp', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.log = function (x) {\n        return this.backendEngine.executeKernel('Log', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.sqrt = function (x) {\n        return this.backendEngine.executeKernel('Sqrt', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.square = function (x) {\n        var _this = this;\n        return this.backendEngine.executeKernel('Square', { inputs: { x: x } }, function (dy, y) {\n            return {\n                x: function () { return _this.multiply(dy, _this.multiply(x, ndarray_1.Scalar.new(2))); }\n            };\n        });\n    };\n    NDArrayMath.prototype.abs = function (x) {\n        return this.backendEngine.executeKernel('Abs', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.clip = function (x, min, max) {\n        util.assert((min <= max), \"Error in clip: min (\" + min + \") must be\" +\n            (\"less than or equal to max (\" + max + \").\"));\n        return this.backendEngine.executeKernel('Clip', { inputs: { x: x }, args: { min: min, max: max } });\n    };\n    NDArrayMath.prototype.relu = function (x) {\n        var _this = this;\n        return this.backendEngine.executeKernel('Relu', { inputs: { x: x } }, function (dy, y) {\n            return { x: function () { return _this.step(x); } };\n        });\n    };\n    NDArrayMath.prototype.elu = function (x) {\n        return this.backendEngine.executeKernel('Elu', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.eluDer = function (x) {\n        return this.backendEngine.executeKernel('EluDer', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.selu = function (x) {\n        return this.backendEngine.executeKernel('Selu', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.leakyRelu = function (x, alpha) {\n        if (alpha === void 0) { alpha = 0.2; }\n        return this.backendEngine.executeKernel('LeakyRelu', { inputs: { x: x }, args: { alpha: alpha } });\n    };\n    NDArrayMath.prototype.prelu = function (x, alpha) {\n        return this.backendEngine.executeKernel('PReLU', { inputs: { x: x, alpha: alpha } });\n    };\n    NDArrayMath.prototype.preluDer = function (x, alpha) {\n        return this.backendEngine.executeKernel('PReLUDer', { inputs: { x: x, alpha: alpha } });\n    };\n    NDArrayMath.prototype.sigmoid = function (x) {\n        return this.backendEngine.executeKernel('Sigmoid', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.sin = function (x) {\n        return this.backendEngine.executeKernel('Sin', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.cos = function (x) {\n        return this.backendEngine.executeKernel('Cos', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.tan = function (x) {\n        return this.backendEngine.executeKernel('Tan', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.asin = function (x) {\n        return this.backendEngine.executeKernel('Asin', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.acos = function (x) {\n        return this.backendEngine.executeKernel('Acos', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.atan = function (x) {\n        return this.backendEngine.executeKernel('Atan', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.sinh = function (x) {\n        return this.backendEngine.executeKernel('Sinh', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.cosh = function (x) {\n        return this.backendEngine.executeKernel('Cosh', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.tanh = function (x) {\n        return this.backendEngine.executeKernel('Tanh', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.step = function (x, alpha) {\n        if (alpha === void 0) { alpha = 0.0; }\n        return this.backendEngine.executeKernel('Step', { inputs: { x: x }, args: { alpha: alpha } });\n    };\n    NDArrayMath.prototype.scaledArrayAdd = function (c1, a, c2, b) {\n        var _this = this;\n        util.assert(c1.size === 1, \"Error in scaledArrayAdd: first argument must rank 0, but got \" +\n            (\" rank \" + c1.rank + \".\"));\n        util.assert(c2.size === 1, \"Error in scaledArrayAdd: third argument must be rank 0, but got \" +\n            (\"NDArray of rank \" + c2.rank + \".\"));\n        util.assertShapesMatch(a.shape, b.shape, 'Error in scaledArrayAdd: ');\n        return this.executeOp('scaledArrayAdd', function () {\n            return _this.scope(function () {\n                return _this.add(_this.multiply(c1, a), _this.multiply(c2, b));\n            });\n        });\n    };\n    NDArrayMath.prototype.scalarTimesArray = function (c, a) {\n        util.assert(c.size === 1, \"Error in arrayDividedByScalar: first argument must be rank 0, but \" +\n            (\"got rank \" + c.rank + \".\"));\n        return this.multiply(c, a);\n    };\n    NDArrayMath.prototype.elementWiseMulBroadcast = function (a, b) {\n        util.assert(a.rank === 2, \"Error in elementWiseMulBroadcast: first argument must be \" +\n            (\"rank 2, but got rank \" + a.rank + \".\"));\n        util.assert(b.rank === 2, \"Error in elementWiseMulBroadcast: second argument must be \" +\n            (\"rank 2, but got rank \" + b.rank + \".\"));\n        return this.multiply(a, b);\n    };\n    NDArrayMath.prototype.conv1d = function (input, filter, bias, stride, pad) {\n        var _this = this;\n        var input3D = input;\n        var reshapedTo3D = false;\n        if (input.rank === 2) {\n            reshapedTo3D = true;\n            input3D = input.as3D(1, input.shape[0], input.shape[1]);\n        }\n        util.assert(input3D.rank === 3, \"Error in conv1d: input must be rank 3, but got rank \" + input3D.rank + \".\");\n        util.assert(filter.rank === 3, \"Error in conv1d: filter must be rank 3, but got rank \" +\n            (filter.rank + \".\"));\n        if (bias != null) {\n            util.assert(bias.rank === 1, \"Error in conv1d: bias must be rank 1, but got rank \" +\n                (bias.rank + \".\"));\n        }\n        util.assert(input3D.shape[2] === filter.shape[1], \"Error in conv1d: depth of input (\" + input3D.shape[2] + \") must match  \" +\n            (\"input depth for filter \" + filter.shape[1] + \".\"));\n        var filter4D = filter.as4D(1, filter.shape[0], filter.shape[1], filter.shape[2]);\n        var input4D = input3D.as4D(input3D.shape[0], 1, input3D.shape[1], input3D.shape[2]);\n        var strides = [1, stride];\n        return this.executeOp('Conv1D', function () {\n            var res = _this.conv2d(input4D, filter4D, bias, strides, pad);\n            if (reshapedTo3D) {\n                return res.as2D(res.shape[2], res.shape[3]);\n            }\n            return res.as3D(res.shape[0], res.shape[2], res.shape[3]);\n        });\n    };\n    NDArrayMath.prototype.conv2d = function (input, filter, bias, strides, pad) {\n        var _this = this;\n        var input4D = input;\n        var reshapedTo4D = false;\n        if (input.rank === 3) {\n            reshapedTo4D = true;\n            input4D = input.as4D(1, input.shape[0], input.shape[1], input.shape[2]);\n        }\n        util.assert(input4D.rank === 4, \"Error in conv2d: input must be rank 4, but got rank \" + input4D.rank + \".\");\n        util.assert(filter.rank === 4, \"Error in conv2d: filter must be rank 4, but got rank \" +\n            (filter.rank + \".\"));\n        if (bias != null) {\n            util.assert(bias.rank === 1, \"Error in conv2d: bias must be rank 1, but got rank \" +\n                (bias.rank + \".\"));\n        }\n        util.assert(input4D.shape[3] === filter.shape[2], \"Error in conv2d: depth of input (\" + input4D.shape[3] + \") must match  \" +\n            (\"input depth for filter \" + filter.shape[2] + \".\"));\n        var convInfo = conv_util.computeConv2DInfo(input4D.shape, filter.shape, strides, pad);\n        return this.executeOp('Conv2D', function () {\n            var res = _this.backendEngine.executeKernel('Conv2D', { inputs: { x: input4D, filter: filter, bias: bias }, args: { convInfo: convInfo } });\n            if (reshapedTo4D) {\n                return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n            }\n            return res;\n        });\n    };\n    NDArrayMath.prototype.conv2dDerInput = function (inShape, dy, filter, strides, pad) {\n        var _this = this;\n        util.assert(inShape.length === dy.rank, \"Length of inShape \" +\n            (\"(\" + inShape.length + \") and rank of dy (\" + dy.rank + \") must match\"));\n        var inShape4D = inShape;\n        var dy4D = dy;\n        var reshapedTo4D = false;\n        if (dy.rank === 3) {\n            reshapedTo4D = true;\n            dy4D = dy.as4D(1, dy.shape[0], dy.shape[1], dy.shape[2]);\n            inShape4D = [1, inShape[0], inShape[1], inShape[2]];\n        }\n        var inDepth = inShape4D[3];\n        var outDepth = dy4D.shape[3];\n        util.assert(inShape4D.length === 4, \"Error in conv2dDerInput: inShape must be length 4, but got length \" +\n            (inShape4D.length + \".\"));\n        util.assert(dy4D.rank === 4, \"Error in conv2dDerInput: dy must be rank 4, but got \" +\n            (\"rank \" + dy4D.rank));\n        util.assert(filter.rank === 4, \"Error in conv2dDerInput: filter must be rank 4, but got \" +\n            (\"rank \" + filter.rank));\n        util.assert(inDepth === filter.shape[2], \"Error in conv2dDerInput: depth of input (\" + inDepth + \") must \" +\n            (\"match input depth for filter \" + filter.shape[2] + \".\"));\n        util.assert(outDepth === filter.shape[3], \"Error in conv2dDerInput: depth of output (\" + outDepth + \") must\" +\n            (\"match output depth for filter \" + filter.shape[3] + \".\"));\n        var convInfo = conv_util.computeConv2DInfo(inShape4D, filter.shape, strides, pad);\n        return this.executeOp('conv2dDerInput', function () {\n            var res = _this.backendEngine.executeKernel('Conv2DDerInput', { inputs: { dy: dy4D, filter: filter }, args: { convInfo: convInfo } });\n            if (reshapedTo4D) {\n                return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n            }\n            return res;\n        });\n    };\n    NDArrayMath.prototype.conv2dDerBias = function (dy) {\n        var dy4D = dy;\n        if (dy.rank === 3) {\n            dy4D = dy.as4D(1, dy.shape[0], dy.shape[1], dy.shape[2]);\n        }\n        return this.backendEngine.executeKernel('Conv2DDerBias', { inputs: { dy: dy4D } });\n    };\n    NDArrayMath.prototype.conv2dDerFilter = function (input, dy, filterShape, strides, pad) {\n        var input4D = input;\n        if (input.rank === 3) {\n            input4D = input.as4D(1, input.shape[0], input.shape[1], input.shape[2]);\n        }\n        var dy4D = dy;\n        if (dy4D.rank === 3) {\n            dy4D = dy.as4D(1, dy.shape[0], dy.shape[1], dy.shape[2]);\n        }\n        util.assert(input4D.rank === 4, \"Error in conv2dDerFilter: input must be rank 4, but got shape \" +\n            (input4D.shape + \".\"));\n        util.assert(dy4D.rank === 4, \"Error in conv2dDerFilter: dy must be rank 4, but got shape \" +\n            (dy4D.shape + \".\"));\n        util.assert(filterShape.length === 4, \"Error in conv2dDerFilter: filterShape must be length 4, but got \" +\n            (filterShape + \".\"));\n        util.assert(input4D.shape[3] === filterShape[2], \"Error in conv2dDerFilter: depth of input \" + input4D.shape[3] + \") must \" +\n            (\"match input depth in filter (\" + filterShape[2] + \".\"));\n        util.assert(dy4D.shape[3] === filterShape[3], \"Error in conv2dDerFilter: depth of dy (\" + dy4D.shape[3] + \") must \" +\n            (\"match output depth for filter (\" + filterShape[3] + \").\"));\n        var convInfo = conv_util.computeConv2DInfo(input4D.shape, filterShape, strides, pad);\n        return this.backendEngine.executeKernel('Conv2DDerFilter', { inputs: { x: input4D, dy: dy4D }, args: { convInfo: convInfo } });\n    };\n    NDArrayMath.prototype.conv2dTranspose = function (x, filter, outputShape, strides, pad) {\n        return this.conv2dDerInput(outputShape, x, filter, strides, pad);\n    };\n    NDArrayMath.prototype.depthwiseConv2D = function (input, filter, strides, pad, rates) {\n        var _this = this;\n        if (rates === void 0) { rates = [1, 1]; }\n        var input4D = input;\n        var reshapedTo4D = false;\n        if (input.rank === 3) {\n            reshapedTo4D = true;\n            input4D = input.as4D(1, input.shape[0], input.shape[1], input.shape[2]);\n        }\n        util.assert(input4D.rank === 4, \"Error in depthwiseConv2D: input must be rank 4, but got \" +\n            (\"rank \" + input4D.rank + \".\"));\n        util.assert(filter.rank === 4, \"Error in depthwiseConv2D: filter must be rank 4, but got rank \" +\n            (filter.rank + \".\"));\n        util.assert(input4D.shape[3] === filter.shape[2], \"Error in depthwiseConv2D: number of input channels \" +\n            (\"(\" + input4D.shape[3] + \") must match the inChannels dimension in \") +\n            (\"filter \" + filter.shape[2] + \".\"));\n        rates = rates || [1, 1];\n        var _a = parseTupleParam(rates), rateHeight = _a[0], rateWidth = _a[1];\n        util.assert(rateHeight === 1 && rateWidth === 1, 'Error in depthwiseConv2D: rates greater than 1 are not yet ' +\n            (\"supported. Got rates '\" + rates + \"'\"));\n        var convInfo = conv_util.computeConv2DInfo(input4D.shape, filter.shape, strides, pad, true);\n        return this.executeOp('depthwiseConv2D', function () {\n            var res = _this.backendEngine.executeKernel('DepthwiseConv2D', { inputs: { x: input4D, filter: filter }, args: { convInfo: convInfo } });\n            if (reshapedTo4D) {\n                return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n            }\n            return res;\n        });\n    };\n    NDArrayMath.prototype.maxPool = function (input, filterSize, strides, pad) {\n        var _this = this;\n        var input4D = input;\n        var reshapedTo4D = false;\n        if (input.rank === 3) {\n            reshapedTo4D = true;\n            input4D = input.as4D(1, input.shape[0], input.shape[1], input.shape[2]);\n        }\n        util.assert(input4D.rank === 4, \"Error in maxPool: input must be rank 4 but got rank \" + input4D.rank + \".\");\n        var convInfo = conv_util.computePool2DInfo(input4D.shape, filterSize, strides, pad);\n        return this.executeOp('maxPool', function () {\n            var res = _this.backendEngine.executeKernel('MaxPool', { inputs: { x: input4D }, args: { convInfo: convInfo } });\n            if (reshapedTo4D) {\n                return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n            }\n            return res;\n        });\n    };\n    NDArrayMath.prototype.maxPoolBackprop = function (dy, input, filterSize, strides, pad) {\n        var _this = this;\n        util.assert(input.rank === dy.rank, \"Rank of input (\" + input.rank + \") does not match rank of dy (\" + dy.rank + \")\");\n        var input4D = input;\n        var dy4D = dy;\n        var reshapedTo4D = false;\n        if (input.rank === 3) {\n            reshapedTo4D = true;\n            input4D = input.as4D(1, input.shape[0], input.shape[1], input.shape[2]);\n            dy4D = dy.as4D(1, dy.shape[0], dy.shape[1], dy.shape[2]);\n        }\n        util.assert(dy4D.rank === 4, \"Error in maxPoolBackprop: dy must be rank 4 but got rank \" +\n            (dy4D.rank + \".\"));\n        util.assert(input4D.rank === 4, \"Error in maxPoolBackprop: input must be rank 4 but got rank \" +\n            (input4D.rank + \".\"));\n        var convInfo = conv_util.computePool2DInfo(input4D.shape, filterSize, strides, pad);\n        return this.executeOp('maxPoolBackprop', function () {\n            var res = _this.backendEngine.executeKernel('MaxPoolBackprop', { inputs: { dy: dy4D, x: input4D }, args: { convInfo: convInfo } });\n            if (reshapedTo4D) {\n                return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n            }\n            return res;\n        });\n    };\n    NDArrayMath.prototype.minPool = function (input, filterSize, strides, pad) {\n        var _this = this;\n        var input4D = input;\n        var reshapedTo4D = false;\n        if (input.rank === 3) {\n            reshapedTo4D = true;\n            input4D = input.as4D(1, input.shape[0], input.shape[1], input.shape[2]);\n        }\n        util.assert(input4D.rank === 4, \"Error in minPool: x must be rank 4 but got rank \" + input4D.rank + \".\");\n        var convInfo = conv_util.computePool2DInfo(input4D.shape, filterSize, strides, pad);\n        return this.executeOp('minPool', function () {\n            var res = _this.backendEngine.executeKernel('MinPool', { inputs: { x: input4D }, args: { convInfo: convInfo } });\n            if (reshapedTo4D) {\n                return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n            }\n            return res;\n        });\n    };\n    NDArrayMath.prototype.avgPool = function (input, filterSize, strides, pad) {\n        var _this = this;\n        var input4D = input;\n        var reshapedTo4D = false;\n        if (input.rank === 3) {\n            reshapedTo4D = true;\n            input4D = input.as4D(1, input.shape[0], input.shape[1], input.shape[2]);\n        }\n        util.assert(input4D.rank === 4, \"Error in avgPool: x must be rank 4 but got rank \" + input4D.rank + \".\");\n        var convInfo = conv_util.computePool2DInfo(input4D.shape, filterSize, strides, pad);\n        return this.executeOp('avgPool', function () {\n            var res = _this.backendEngine.executeKernel('AvgPool', { inputs: { x: input4D }, args: { convInfo: convInfo } });\n            if (reshapedTo4D) {\n                return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n            }\n            return res;\n        });\n    };\n    NDArrayMath.prototype.resizeBilinear3D = function (x, newShape2D, alignCorners) {\n        if (alignCorners === void 0) { alignCorners = false; }\n        util.assert(x.rank === 3, \"Error in resizeBilinear3D: x must be rank 3 but got rank \" + x.rank + \".\");\n        util.assert(newShape2D.length === 2, \"Error in resizeBilinear3D: new shape must 2D, but got shape \" +\n            (newShape2D + \".\"));\n        return this.backendEngine.executeKernel('ResizeBilinear3D', { inputs: { x: x }, args: { newShape2D: newShape2D, alignCorners: alignCorners } });\n    };\n    NDArrayMath.prototype.batchNormalization2D = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        if (varianceEpsilon === void 0) { varianceEpsilon = .001; }\n        util.assert(x.rank === 2, \"Error in batchNormalization3D: x must be rank 3 but got rank \" +\n            (x.rank + \".\"));\n        util.assert(mean.rank === 2 || mean.rank === 1, \"Error in batchNormalization2D: mean must be rank 2 or rank 1 but \" +\n            (\"got rank \" + mean.rank + \".\"));\n        util.assert(variance.rank === 2 || variance.rank === 1, \"Error in batchNormalization2D: variance must be rank 2 or rank 1 \" +\n            (\"but got rank \" + variance.rank + \".\"));\n        if (scale != null) {\n            util.assert(scale.rank === 2 || scale.rank === 1, \"Error in batchNormalization2D: scale must be rank 2 or rank 1 \" +\n                (\"but got rank \" + scale.rank + \".\"));\n        }\n        if (offset != null) {\n            util.assert(offset.rank === 2 || offset.rank === 1, \"Error in batchNormalization2D: offset must be rank 2 or rank 1 \" +\n                (\"but got rank \" + offset.rank + \".\"));\n        }\n        return this.backendEngine.executeKernel('BatchNorm2D', { inputs: { x: x, mean: mean, variance: variance, scale: scale, offset: offset }, args: { varianceEpsilon: varianceEpsilon } });\n    };\n    NDArrayMath.prototype.batchNormalization3D = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        if (varianceEpsilon === void 0) { varianceEpsilon = .001; }\n        util.assert(x.rank === 3, \"Error in batchNormalization3D: x must be rank 3 but got rank \" +\n            (x.rank + \".\"));\n        util.assert(mean.rank === 3 || mean.rank === 1, \"Error in batchNormalization3D: mean must be rank 3 or rank 1 but \" +\n            (\"got rank \" + mean.rank + \".\"));\n        util.assert(variance.rank === 3 || variance.rank === 1, \"Error in batchNormalization3D: variance must be rank 3 or rank 1 \" +\n            (\"but got rank \" + variance.rank + \".\"));\n        if (scale != null) {\n            util.assert(scale.rank === 3 || scale.rank === 1, \"Error in batchNormalization3D: scale must be rank 3 or rank 1 \" +\n                (\"but got rank \" + scale.rank + \".\"));\n        }\n        if (offset != null) {\n            util.assert(offset.rank === 3 || offset.rank === 1, \"Error in batchNormalization3D: offset must be rank 3 or rank 1 \" +\n                (\"but got rank \" + offset.rank + \".\"));\n        }\n        return this.backendEngine.executeKernel('BatchNorm3D', { inputs: { x: x, mean: mean, variance: variance, scale: scale, offset: offset }, args: { varianceEpsilon: varianceEpsilon } });\n    };\n    NDArrayMath.prototype.multiRNNCell = function (lstmCells, data, c, h) {\n        var res = this.scope(function () {\n            var input = data;\n            var newStates = [];\n            for (var i = 0; i < lstmCells.length; i++) {\n                var output = lstmCells[i](input, c[i], h[i]);\n                newStates.push(output[0]);\n                newStates.push(output[1]);\n                input = output[1];\n            }\n            return newStates;\n        });\n        var newC = [];\n        var newH = [];\n        for (var i = 0; i < res.length; i += 2) {\n            newC.push(res[i]);\n            newH.push(res[i + 1]);\n        }\n        return [newC, newH];\n    };\n    NDArrayMath.prototype.basicLSTMCell = function (forgetBias, lstmKernel, lstmBias, data, c, h) {\n        var _this = this;\n        var res = this.scope(function () {\n            var combined = _this.concat2D(data, h, 1);\n            var weighted = _this.matMul(combined, lstmKernel);\n            var res = _this.add(weighted, lstmBias);\n            var batchSize = res.shape[0];\n            var sliceCols = res.shape[1] / 4;\n            var sliceSize = [batchSize, sliceCols];\n            var i = _this.slice2D(res, [0, 0], sliceSize);\n            var j = _this.slice2D(res, [0, sliceCols], sliceSize);\n            var f = _this.slice2D(res, [0, sliceCols * 2], sliceSize);\n            var o = _this.slice2D(res, [0, sliceCols * 3], sliceSize);\n            var newC = _this.addStrict(_this.multiplyStrict(c, _this.sigmoid(_this.scalarPlusArray(forgetBias, f))), _this.multiplyStrict(_this.sigmoid(i), _this.tanh(j)));\n            var newH = _this.multiplyStrict(_this.tanh(newC), _this.sigmoid(o));\n            return [newC, newH];\n        });\n        return [res[0], res[1]];\n    };\n    NDArrayMath.prototype.multinomial = function (probabilities, numSamples, seed) {\n        var _this = this;\n        var numOutcomes = probabilities.size;\n        if (numOutcomes < 2) {\n            throw new Error(\"Error in multinomial: you need at least 2 outcomes, but got \" +\n                (numOutcomes + \".\"));\n        }\n        if (probabilities.rank > 2) {\n            throw new Error(\"Rank of probabilities must be 1 or 2, but is \" + probabilities.rank);\n        }\n        seed = seed || Math.random();\n        var origRank = probabilities.rank;\n        if (probabilities.rank === 1) {\n            probabilities = probabilities.as2D(1, -1);\n        }\n        return this.executeOp('multinomial', function () {\n            var res = _this.backendEngine.executeKernel('Multinomial', {\n                inputs: { probs: probabilities },\n                args: { numSamples: numSamples, seed: seed }\n            });\n            if (origRank === 1) {\n                return res.as1D();\n            }\n            return res;\n        });\n    };\n    NDArrayMath.prototype.oneHot = function (indices, depth, onValue, offValue) {\n        if (onValue === void 0) { onValue = 1; }\n        if (offValue === void 0) { offValue = 0; }\n        if (depth < 2) {\n            throw new Error(\"Error in oneHot: depth must be >=2, but it is \" + depth);\n        }\n        return this.backendEngine.executeKernel('OneHot', { inputs: { indices: indices }, args: { depth: depth, onValue: onValue, offValue: offValue } });\n    };\n    NDArrayMath.prototype.moments = function (x, axis, keepDims) {\n        var _this = this;\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        var axes = axis_util.parseAxisParam(axis, x.shape);\n        var result = this.scope(function () {\n            var mean = _this.mean(x, axes, keepDims);\n            var keepDimsShape = mean.shape;\n            if (!keepDims) {\n                keepDimsShape = axis_util.expandShapeToKeepDim(mean.shape, axes);\n            }\n            var devSquared = _this.square(_this.subtract(x, mean.reshape(keepDimsShape)));\n            var variance = _this.mean(devSquared, axes, keepDims);\n            return { mean: mean, variance: variance };\n        });\n        return result;\n    };\n    NDArrayMath.prototype.norm = function (x, ord, axis, keepDims) {\n        var _this = this;\n        if (ord === void 0) { ord = 'euclidean'; }\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        return this.scope(function () {\n            var norm = _this.normInternal(x, ord, axis);\n            var keepDimsShape = norm.shape;\n            if (keepDims) {\n                var axes = axis_util.parseAxisParam(axis, x.shape);\n                keepDimsShape = axis_util.expandShapeToKeepDim(norm.shape, axes);\n            }\n            return norm.reshape(keepDimsShape);\n        });\n    };\n    NDArrayMath.prototype.normInternal = function (x, p, axis) {\n        if (axis === void 0) { axis = null; }\n        if (x.rank === 0) {\n            return this.abs(x);\n        }\n        if (x.rank !== 1 && axis === null) {\n            return this.normInternal(x.reshape([-1]), p, axis);\n        }\n        if (x.rank === 1 || typeof axis === 'number' ||\n            axis instanceof Array && axis.length === 1) {\n            if (p === 1) {\n                return this.sum(this.abs(x), axis);\n            }\n            if (p === Infinity) {\n                return this.max(this.abs(x), axis);\n            }\n            if (p === -Infinity) {\n                return this.min(this.abs(x), axis);\n            }\n            if (p === 'euclidean' || p === 2) {\n                return this.sqrt(this.sum(this.pow(this.abs(x), ndarray_1.Scalar.new(2, 'int32')), axis));\n            }\n            throw new Error(\"Error in norm: invalid ord value: \" + p);\n        }\n        if (axis instanceof Array && axis.length === 2) {\n            if (p === 1) {\n                return this.max(this.sum(this.abs(x), axis[0]), axis[1] - 1);\n            }\n            if (p === Infinity) {\n                return this.max(this.sum(this.abs(x), axis[1]), axis[0]);\n            }\n            if (p === -Infinity) {\n                return this.min(this.sum(this.abs(x), axis[1]), axis[0]);\n            }\n            if (p === 'fro' || p === 'euclidean') {\n                return this.sqrt(this.sum(this.pow(x, ndarray_1.Scalar.new(2, 'int32')), axis));\n            }\n            throw new Error(\"Error in norm: invalid ord value: \" + p);\n        }\n        throw new Error(\"Error in norm: invalid axis: \" + axis);\n    };\n    NDArrayMath.prototype.gradients = function (f, x) {\n        var keys = x instanceof ndarray_1.NDArray ? null : Object.keys(x);\n        var xs = util.flattenNameArrayMap(x, keys);\n        var returnValue = false;\n        var gradients = this.backendEngine.gradients(f, xs, returnValue);\n        if (x instanceof ndarray_1.NDArray) {\n            return gradients[0];\n        }\n        else {\n            return util.unflattenToNameArrayMap(keys, gradients);\n        }\n    };\n    NDArrayMath.prototype.valueAndGradients = function (f, x) {\n        var keys = x instanceof ndarray_1.NDArray ? null : Object.keys(x);\n        var xs = util.flattenNameArrayMap(x, keys);\n        var returnValue = true;\n        var valueAndGradients = this.backendEngine.gradients(f, xs, returnValue);\n        var gradients;\n        if (x instanceof ndarray_1.NDArray) {\n            gradients = valueAndGradients.gradients[0];\n        }\n        else {\n            gradients =\n                util.unflattenToNameArrayMap(keys, valueAndGradients.gradients);\n        }\n        return { value: valueAndGradients.value, gradients: gradients };\n    };\n    NDArrayMath.prototype.disposeData = function (id) {\n        if (this.registeredArrays.has(id)) {\n            this.registeredArrays.delete(id);\n            this.backend.disposeData(id);\n        }\n    };\n    return NDArrayMath;\n}());\nexports.NDArrayMath = NDArrayMath;\nfunction parseTupleParam(param) {\n    return typeof param === 'number' ? [param, param] : param;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/math.js\n// module id = 02A5\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TextureType;\n(function (TextureType) {\n    TextureType[TextureType[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    TextureType[TextureType[\"RGBA_COLOR\"] = 1] = \"RGBA_COLOR\";\n})(TextureType = exports.TextureType || (exports.TextureType = {}));\nfunction getUnpackedMatrixTextureShapeWidthHeight(rows, columns) {\n    return [columns, rows];\n}\nexports.getUnpackedMatrixTextureShapeWidthHeight = getUnpackedMatrixTextureShapeWidthHeight;\nfunction getUnpackedArraySizeFromMatrixSize(matrixSize, channelsPerTexture) {\n    return matrixSize * channelsPerTexture;\n}\nexports.getUnpackedArraySizeFromMatrixSize = getUnpackedArraySizeFromMatrixSize;\nfunction getColorMatrixTextureShapeWidthHeight(rows, columns) {\n    return [columns * 4, rows];\n}\nexports.getColorMatrixTextureShapeWidthHeight = getColorMatrixTextureShapeWidthHeight;\nfunction getMatrixSizeFromUnpackedArraySize(unpackedSize, channelsPerTexture) {\n    if (unpackedSize % channelsPerTexture !== 0) {\n        throw new Error(\"unpackedSize (\" + unpackedSize + \") must be a multiple of \" +\n            (\"\" + channelsPerTexture));\n    }\n    return unpackedSize / channelsPerTexture;\n}\nexports.getMatrixSizeFromUnpackedArraySize = getMatrixSizeFromUnpackedArraySize;\nfunction encodeMatrixToUnpackedArray(matrix, unpackedArray, channelsPerTexture) {\n    var requiredSize = getUnpackedArraySizeFromMatrixSize(matrix.length, channelsPerTexture);\n    if (unpackedArray.length < requiredSize) {\n        throw new Error(\"unpackedArray length (\" + unpackedArray.length + \") must be >= \" +\n            (\"\" + requiredSize));\n    }\n    var dst = 0;\n    for (var src = 0; src < matrix.length; ++src) {\n        unpackedArray[dst] = matrix[src];\n        dst += channelsPerTexture;\n    }\n}\nexports.encodeMatrixToUnpackedArray = encodeMatrixToUnpackedArray;\nexports.FLOAT_MAX = 20000;\nexports.FLOAT_MIN = -exports.FLOAT_MAX;\nvar FLOAT_RANGE = (exports.FLOAT_MAX - exports.FLOAT_MIN) / 255;\nvar FLOAT_DELTAS = [1, 1 / 255, 1 / (255 * 255), 1 / (255 * 255 * 255)];\nvar FLOAT_POWERS = [1, 255, 255 * 255];\nexports.BYTE_NAN_VALUE = 0;\nfunction encodeFloatArray(floatArray) {\n    var uintArray = new Uint8Array(floatArray.length * 4);\n    var _loop_1 = function (i) {\n        var value = floatArray[i / 4];\n        if (isNaN(value)) {\n            uintArray[i] = exports.BYTE_NAN_VALUE;\n            uintArray[i + 1] = exports.BYTE_NAN_VALUE;\n            uintArray[i + 2] = exports.BYTE_NAN_VALUE;\n            uintArray[i + 3] = exports.BYTE_NAN_VALUE;\n            return \"continue\";\n        }\n        var normalizedValue = (value - exports.FLOAT_MIN) / FLOAT_RANGE;\n        var enc = FLOAT_POWERS.map(function (pow) { return pow * normalizedValue; });\n        var buckets = enc.map(function (value) { return Math.floor((value % 1) * 255); });\n        uintArray[i] = Math.floor(normalizedValue);\n        uintArray[i + 1] = buckets[0];\n        uintArray[i + 2] = buckets[1];\n        uintArray[i + 3] = buckets[2];\n    };\n    for (var i = 0; i < uintArray.length; i += 4) {\n        _loop_1(i);\n    }\n    return uintArray;\n}\nexports.encodeFloatArray = encodeFloatArray;\nfunction decodeToFloatArray(uintArray) {\n    var floatArray = new Float32Array(uintArray.length / 4);\n    var _loop_2 = function (i) {\n        if (uintArray[i] === exports.BYTE_NAN_VALUE &&\n            uintArray[i + 1] === exports.BYTE_NAN_VALUE &&\n            uintArray[i + 2] === exports.BYTE_NAN_VALUE &&\n            uintArray[i + 3] === exports.BYTE_NAN_VALUE) {\n            floatArray[i / 4] = NaN;\n            return \"continue\";\n        }\n        var dot = 0;\n        FLOAT_DELTAS.forEach(function (delta, j) {\n            dot += delta * uintArray[i + j];\n        });\n        var value = dot * FLOAT_RANGE + exports.FLOAT_MIN;\n        floatArray[i / 4] = value;\n    };\n    for (var i = 0; i < uintArray.length; i += 4) {\n        _loop_2(i);\n    }\n    return floatArray;\n}\nexports.decodeToFloatArray = decodeToFloatArray;\nfunction decodeMatrixFromUnpackedArray(unpackedArray, matrix, channelsPerTexture) {\n    var requiredSize = getMatrixSizeFromUnpackedArraySize(unpackedArray.length, channelsPerTexture);\n    if (matrix.length < requiredSize) {\n        throw new Error(\"matrix length (\" + matrix.length + \") must be >= \" + requiredSize);\n    }\n    var dst = 0;\n    for (var src = 0; src < unpackedArray.length; src += channelsPerTexture) {\n        matrix[dst++] = unpackedArray[src];\n    }\n}\nexports.decodeMatrixFromUnpackedArray = decodeMatrixFromUnpackedArray;\nfunction decodeMatrixFromUnpackedColorRGBAArray(unpackedArray, matrix, channels) {\n    var requiredSize = unpackedArray.length * channels / 4;\n    if (matrix.length < requiredSize) {\n        throw new Error(\"matrix length (\" + matrix.length + \") must be >= \" + requiredSize);\n    }\n    var dst = 0;\n    for (var src = 0; src < unpackedArray.length; src += 4) {\n        for (var c = 0; c < channels; c++) {\n            matrix[dst++] = unpackedArray[src + c];\n        }\n    }\n}\nexports.decodeMatrixFromUnpackedColorRGBAArray = decodeMatrixFromUnpackedColorRGBAArray;\nfunction getPackedMatrixTextureShapeWidthHeight(rows, columns) {\n    return [Math.ceil(columns / 2), Math.ceil(rows / 2)];\n}\nexports.getPackedMatrixTextureShapeWidthHeight = getPackedMatrixTextureShapeWidthHeight;\nfunction getPackedRGBAArraySizeFromMatrixShape(rows, columns) {\n    var _a = getPackedMatrixTextureShapeWidthHeight(rows, columns), w = _a[0], h = _a[1];\n    return w * h * 4;\n}\nexports.getPackedRGBAArraySizeFromMatrixShape = getPackedRGBAArraySizeFromMatrixShape;\nfunction encodeMatrixToPackedRGBA(matrix, rows, columns, packedRGBA) {\n    var requiredSize = getPackedRGBAArraySizeFromMatrixShape(rows, columns);\n    if (packedRGBA.length < requiredSize) {\n        throw new Error(\"packedRGBA length (\" + packedRGBA.length + \") must be >= \" + requiredSize);\n    }\n    var _a = getPackedMatrixTextureShapeWidthHeight(rows, columns), textureWidth = _a[0], textureHeight = _a[1];\n    var oddWidth = (columns % 2) === 1;\n    var oddHeight = (rows % 2) === 1;\n    var widthInFullBlocks = Math.floor(columns / 2);\n    var heightInFullBlocks = Math.floor(rows / 2);\n    {\n        var dstStride = (oddWidth ? 4 : 0);\n        var oneRow = columns;\n        var dst = 0;\n        for (var blockY = 0; blockY < heightInFullBlocks; ++blockY) {\n            var matrixSrcRow = (blockY * 2 * columns);\n            for (var blockX = 0; blockX < widthInFullBlocks; ++blockX) {\n                var matrixSrcCol = blockX * 2;\n                var src = matrixSrcRow + matrixSrcCol;\n                packedRGBA[dst] = matrix[src];\n                packedRGBA[dst + 1] = matrix[src + 1];\n                packedRGBA[dst + 2] = matrix[src + oneRow];\n                packedRGBA[dst + 3] = matrix[src + oneRow + 1];\n                dst += 4;\n            }\n            dst += dstStride;\n        }\n    }\n    if (oddWidth) {\n        var src = columns - 1;\n        var dst = (textureWidth - 1) * 4;\n        var srcStride = 2 * columns;\n        var dstStride = textureWidth * 4;\n        for (var blockY = 0; blockY < heightInFullBlocks; ++blockY) {\n            packedRGBA[dst] = matrix[src];\n            packedRGBA[dst + 2] = matrix[src + columns];\n            src += srcStride;\n            dst += dstStride;\n        }\n    }\n    if (oddHeight) {\n        var src = (rows - 1) * columns;\n        var dst = (textureHeight - 1) * textureWidth * 4;\n        for (var blockX = 0; blockX < widthInFullBlocks; ++blockX) {\n            packedRGBA[dst++] = matrix[src++];\n            packedRGBA[dst++] = matrix[src++];\n            dst += 2;\n        }\n    }\n    if (oddWidth && oddHeight) {\n        packedRGBA[packedRGBA.length - 4] = matrix[matrix.length - 1];\n    }\n    return packedRGBA;\n}\nexports.encodeMatrixToPackedRGBA = encodeMatrixToPackedRGBA;\nfunction decodeMatrixFromPackedRGBA(packedRGBA, rows, columns, matrix) {\n    var requiredSize = rows * columns;\n    if (requiredSize < matrix.length) {\n        throw new Error(\"matrix length (\" + matrix.length + \") must be >= \" + requiredSize);\n    }\n    var oddWidth = (columns % 2) === 1;\n    var oddHeight = (rows % 2) === 1;\n    var widthInFullBlocks = Math.floor(columns / 2);\n    var heightInFullBlocks = Math.floor(rows / 2);\n    var _a = getPackedMatrixTextureShapeWidthHeight(rows, columns), textureWidth = _a[0], textureHeight = _a[1];\n    {\n        var srcStride = oddWidth ? 4 : 0;\n        var dstStride = columns + (oddWidth ? 1 : 0);\n        var src = 0;\n        var dstRow1 = 0;\n        var dstRow2 = columns;\n        for (var blockY = 0; blockY < heightInFullBlocks; ++blockY) {\n            for (var blockX = 0; blockX < widthInFullBlocks; ++blockX) {\n                matrix[dstRow1++] = packedRGBA[src++];\n                matrix[dstRow1++] = packedRGBA[src++];\n                matrix[dstRow2++] = packedRGBA[src++];\n                matrix[dstRow2++] = packedRGBA[src++];\n            }\n            src += srcStride;\n            dstRow1 += dstStride;\n            dstRow2 += dstStride;\n        }\n    }\n    if (oddWidth) {\n        var src = (textureWidth - 1) * 4;\n        var dst = columns - 1;\n        var srcStride = textureWidth * 4;\n        var dstStride = 2 * columns;\n        for (var blockY = 0; blockY < heightInFullBlocks; ++blockY) {\n            matrix[dst] = packedRGBA[src];\n            matrix[dst + columns] = packedRGBA[src + 2];\n            src += srcStride;\n            dst += dstStride;\n        }\n    }\n    if (oddHeight) {\n        var src = (textureHeight - 1) * textureWidth * 4;\n        var dst = (rows - 1) * columns;\n        for (var blockX = 0; blockX < widthInFullBlocks; ++blockX) {\n            matrix[dst++] = packedRGBA[src++];\n            matrix[dst++] = packedRGBA[src++];\n            src += 2;\n        }\n    }\n    if (oddWidth && oddHeight) {\n        matrix[matrix.length - 1] = packedRGBA[packedRGBA.length - 4];\n    }\n    return matrix;\n}\nexports.decodeMatrixFromPackedRGBA = decodeMatrixFromPackedRGBA;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/tex_util.js\n// module id = 1S1d\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graph_1 = require(\"./graph\");\nvar graph_util = require(\"./graph_util\");\nvar add_1 = require(\"./ops/add\");\nvar argmax_1 = require(\"./ops/argmax\");\nvar argmaxequals_1 = require(\"./ops/argmaxequals\");\nvar concat3d_1 = require(\"./ops/concat3d\");\nvar convolution_1 = require(\"./ops/convolution\");\nvar divide_1 = require(\"./ops/divide\");\nvar element_wise_activation_1 = require(\"./ops/element_wise_activation\");\nvar element_wise_cost_1 = require(\"./ops/element_wise_cost\");\nvar exp_1 = require(\"./ops/exp\");\nvar linear_combination_1 = require(\"./ops/linear_combination\");\nvar log_1 = require(\"./ops/log\");\nvar matmul_1 = require(\"./ops/matmul\");\nvar max_pool_1 = require(\"./ops/max_pool\");\nvar multiply_1 = require(\"./ops/multiply\");\nvar reduce_sum_1 = require(\"./ops/reduce_sum\");\nvar reshape_1 = require(\"./ops/reshape\");\nvar softmax_1 = require(\"./ops/softmax\");\nvar subtract_1 = require(\"./ops/subtract\");\nfunction emitFromGraphNodes(nodes) {\n    var ops = [];\n    nodes.forEach(function (node) { return Array.prototype.push.apply(ops, emitOpFromNode(node)); });\n    return ops;\n}\nexports.emitFromGraphNodes = emitFromGraphNodes;\nfunction emitOpFromNode(node) {\n    if (node instanceof graph_1.ReshapeNode) {\n        return [new reshape_1.Reshape(node.inputs[graph_1.ReshapeNode.X], node.output)];\n    }\n    else if (node instanceof graph_1.MatMulNode) {\n        var x1 = node.inputs[graph_1.MatMulNode.X1];\n        var x2 = node.inputs[graph_1.MatMulNode.X2];\n        return [new matmul_1.MatMul(x1, x2, node.output)];\n    }\n    else if (node instanceof graph_1.Convolution2DNode) {\n        var w = node.inputs[graph_1.Convolution2DNode.W];\n        var x = node.inputs[graph_1.Convolution2DNode.X];\n        var b = node.inputs[graph_1.Convolution2DNode.B];\n        return [new convolution_1.Convolution2D(w, x, b, node.output, node.fieldSize, node.outputDepth, node.stride, node.zeroPad)];\n    }\n    else if (node instanceof graph_1.MaxPoolNode) {\n        var x = node.inputs[graph_1.MaxPoolNode.X];\n        return [new max_pool_1.MaxPool(x, node.output, node.fieldSize, node.stride, node.zeroPad)];\n    }\n    else if (node instanceof graph_1.ExpNode) {\n        return [new exp_1.Exp(node.inputs[graph_1.ExpNode.X], node.output)];\n    }\n    else if (node instanceof graph_1.LogNode) {\n        return [new log_1.Log(node.inputs[graph_1.LogNode.X], node.output)];\n    }\n    else if (node instanceof graph_1.ReLUNode) {\n        return [new element_wise_activation_1.ReLU(node.inputs[graph_1.ReLUNode.X], node.output)];\n    }\n    else if (node instanceof graph_1.LeakyReLUNode) {\n        return [new element_wise_activation_1.LeakyReLU(node.inputs[graph_1.LeakyReLUNode.X], node.output, node.alpha)];\n    }\n    else if (node instanceof graph_1.PReLUNode) {\n        return [new element_wise_activation_1.PReLU(node.inputs[graph_1.PReLUNode.X], node.inputs[graph_1.PReLUNode.ALPHA], node.output)];\n    }\n    else if (node instanceof graph_1.EluNode) {\n        return [new element_wise_activation_1.Elu(node.inputs[graph_1.EluNode.X], node.output)];\n    }\n    else if (node instanceof graph_1.TanHNode) {\n        return [new element_wise_activation_1.TanH(node.inputs[graph_1.TanHNode.X], node.output)];\n    }\n    else if (node instanceof graph_1.SigmoidNode) {\n        return [new element_wise_activation_1.Sigmoid(node.inputs[graph_1.SigmoidNode.X], node.output)];\n    }\n    else if (node instanceof graph_1.SoftmaxCrossEntropyCostNode) {\n        var x = node.inputs[graph_1.SoftmaxCrossEntropyCostNode.X];\n        var target = node.inputs[graph_1.SoftmaxCrossEntropyCostNode.TARGET];\n        return [new softmax_1.SoftmaxCrossEntropyCost(x, target, node.output)];\n    }\n    else if (node instanceof graph_1.SoftmaxNode) {\n        return [new softmax_1.Softmax(node.inputs[graph_1.SoftmaxNode.X], node.output)];\n    }\n    else if (node instanceof graph_1.MeanSquaredCostNode) {\n        var label = node.inputs[graph_1.MeanSquaredCostNode.LABEL];\n        var prediction = node.inputs[graph_1.MeanSquaredCostNode.PREDICTION];\n        return [new element_wise_cost_1.MeanSquaredCost(label, prediction, node.output)];\n    }\n    else if (node instanceof graph_1.ArgMaxEqualsNode) {\n        return [new argmaxequals_1.ArgMaxEquals(node.inputs[graph_1.ArgMaxEqualsNode.X1], node.inputs[graph_1.ArgMaxEqualsNode.X2], node.output)];\n    }\n    else if (node instanceof graph_1.ArgMaxNode) {\n        return [new argmax_1.ArgMax(node.x, node.output)];\n    }\n    else if (node instanceof graph_1.FusedLinearCombinationNode) {\n        return [new linear_combination_1.LinearCombination(node.inputs[graph_1.FusedLinearCombinationNode.T1], node.inputs[graph_1.FusedLinearCombinationNode.T2], node.inputs[graph_1.FusedLinearCombinationNode.C1], node.inputs[graph_1.FusedLinearCombinationNode.C2], node.output)];\n    }\n    else if (node instanceof graph_1.Concat3DNode) {\n        return [new concat3d_1.Concat3D(node.inputs[graph_1.Concat3DNode.X1], node.inputs[graph_1.Concat3DNode.X2], node.axis, node.output)];\n    }\n    else if (node instanceof graph_1.SquareNode) {\n        return [new element_wise_activation_1.Square(node.inputs[graph_1.SquareNode.X], node.output)];\n    }\n    else if (node instanceof graph_1.AddNode) {\n        return [new add_1.Add(node.inputs[graph_1.AddNode.T1], node.inputs[graph_1.AddNode.T2], node.output)];\n    }\n    else if (node instanceof graph_1.SubtractNode) {\n        return [new subtract_1.Subtract(node.inputs[graph_1.SubtractNode.T1], node.inputs[graph_1.SubtractNode.T2], node.output)];\n    }\n    else if (node instanceof graph_1.MultiplyNode) {\n        return [new multiply_1.Multiply(node.inputs[graph_1.MultiplyNode.T1], node.inputs[graph_1.MultiplyNode.T2], node.output)];\n    }\n    else if (node instanceof graph_1.DivideNode) {\n        return [new divide_1.Divide(node.inputs[graph_1.DivideNode.T1], node.inputs[graph_1.DivideNode.T2], node.output)];\n    }\n    else if (node instanceof graph_1.ReduceSumNode) {\n        return [new reduce_sum_1.ReduceSum(node.inputs[graph_1.ReduceSumNode.X], node.output)];\n    }\n    else if (graph_util.isInputNode(node)) {\n        return [];\n    }\n    else {\n        throw Error(\"Unsupported node type: \" + node.constructor.name);\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/operation_emitter.js\n// module id = 2HCx\n// module chunks = 0","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_an-instance.js\n// module id = 2KxR\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../../environment\");\nvar util = require(\"../../util\");\nvar axis_util = require(\"../axis_util\");\nvar math_1 = require(\"../math\");\nvar ndarray_1 = require(\"../ndarray\");\nvar reduce_util = require(\"../reduce_util\");\nvar types = require(\"../types\");\nvar types_1 = require(\"../types\");\nvar argminmax_gpu_1 = require(\"./webgl/argminmax_gpu\");\nvar batchnorm_gpu_1 = require(\"./webgl/batchnorm_gpu\");\nvar binaryop_gpu = require(\"./webgl/binaryop_gpu\");\nvar binaryop_gpu_1 = require(\"./webgl/binaryop_gpu\");\nvar clip_gpu_1 = require(\"./webgl/clip_gpu\");\nvar concat_gpu_1 = require(\"./webgl/concat_gpu\");\nvar conv_backprop_gpu_1 = require(\"./webgl/conv_backprop_gpu\");\nvar conv_gpu_1 = require(\"./webgl/conv_gpu\");\nvar conv_gpu_depthwise_1 = require(\"./webgl/conv_gpu_depthwise\");\nvar copy_gpu_1 = require(\"./webgl/copy_gpu\");\nvar gpgpu_context_1 = require(\"./webgl/gpgpu_context\");\nvar gpgpu_math = require(\"./webgl/gpgpu_math\");\nvar gpgpu_util = require(\"./webgl/gpgpu_util\");\nvar max_pool_backprop_gpu_1 = require(\"./webgl/max_pool_backprop_gpu\");\nvar mulmat_gpu_1 = require(\"./webgl/mulmat_gpu\");\nvar multinomial_gpu_1 = require(\"./webgl/multinomial_gpu\");\nvar onehot_gpu_1 = require(\"./webgl/onehot_gpu\");\nvar pool_gpu_1 = require(\"./webgl/pool_gpu\");\nvar reduce_gpu_1 = require(\"./webgl/reduce_gpu\");\nvar resize_bilinear_gpu_1 = require(\"./webgl/resize_bilinear_gpu\");\nvar slice_gpu_1 = require(\"./webgl/slice_gpu\");\nvar tex_util_1 = require(\"./webgl/tex_util\");\nvar texture_manager_1 = require(\"./webgl/texture_manager\");\nvar tile_gpu_1 = require(\"./webgl/tile_gpu\");\nvar transpose_gpu_1 = require(\"./webgl/transpose_gpu\");\nvar unary_op = require(\"./webgl/unaryop_gpu\");\nvar unaryop_gpu_1 = require(\"./webgl/unaryop_gpu\");\nvar webgl_util = require(\"./webgl/webgl_util\");\nvar MathBackendWebGL = (function () {\n    function MathBackendWebGL(gpgpu, delayedStorage) {\n        if (delayedStorage === void 0) { delayedStorage = true; }\n        this.gpgpu = gpgpu;\n        this.delayedStorage = delayedStorage;\n        this.texData = {};\n        this.binaryCache = {};\n        if (environment_1.ENV.get('WEBGL_VERSION') < 1) {\n            throw new Error('WebGL is not supported on this device');\n        }\n        if (gpgpu == null) {\n            var gl = gpgpu_util.createWebGLContext();\n            this.gpgpu = new gpgpu_context_1.GPGPUContext(gl);\n            this.gpgpuCreatedLocally = true;\n        }\n        else {\n            this.gpgpuCreatedLocally = false;\n        }\n        this.textureManager = new texture_manager_1.TextureManager(this.gpgpu);\n    }\n    MathBackendWebGL.prototype.writePixels = function (id, pixels, numChannels) {\n        var texShape = [pixels.height, pixels.width];\n        var texture = id in this.texData ?\n            this.texData[id].texture :\n            this.textureManager.acquireTexture(texShape);\n        this.texData[id] = {\n            values: null,\n            texture: texture,\n            textureType: tex_util_1.TextureType.RGBA_COLOR,\n            texShape: texShape,\n            numChannels: numChannels,\n            dtype: 'int32'\n        };\n        this.gpgpu.uploadPixelDataToTexture(texture, pixels);\n    };\n    MathBackendWebGL.prototype.write = function (id, values, dtype, shape) {\n        if (values == null) {\n            throw new Error('MathBackendWebGL.write(): values can not be null');\n        }\n        var _a = this.getOrMakeTexData(id, shape, dtype), texture = _a.texture, texShape = _a.texShape;\n        if (texture != null) {\n            this.textureManager.releaseTexture(texture, texShape);\n            this.texData[id].texture = null;\n        }\n        this.texData[id].values = values;\n        if (!this.delayedStorage) {\n            this.uploadToGPU(id);\n        }\n    };\n    MathBackendWebGL.prototype.getOrMakeTexData = function (id, shape, dtype) {\n        if (!(id in this.texData)) {\n            var texShape = webgl_util.getTextureShapeFromLogicalShape(this.gpgpu.gl, shape);\n            var textureType = tex_util_1.TextureType.DEFAULT;\n            this.texData[id] =\n                { texture: null, values: null, textureType: textureType, texShape: texShape, dtype: dtype };\n        }\n        return this.texData[id];\n    };\n    MathBackendWebGL.prototype.readSync = function (id) {\n        this.throwIfNoData(id);\n        var _a = this.texData[id], texture = _a.texture, values = _a.values, textureType = _a.textureType, texShape = _a.texShape, numChannels = _a.numChannels;\n        if (values != null) {\n            this.cacheOnCPU(id);\n            return values;\n        }\n        var float32Values;\n        if (textureType === tex_util_1.TextureType.DEFAULT) {\n            float32Values = this.gpgpu.downloadMatrixFromTexture(texture, texShape[0], texShape[1]);\n        }\n        else {\n            float32Values = this.gpgpu.downloadMatrixFromRGBAColorTexture(texture, texShape[0], texShape[1], numChannels);\n        }\n        this.cacheOnCPU(id, float32Values);\n        return this.texData[id].values;\n    };\n    MathBackendWebGL.prototype.read = function (id) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, texture, values, textureType, texShape, float32Values;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.throwIfNoData(id);\n                        _a = this.texData[id], texture = _a.texture, values = _a.values, textureType = _a.textureType, texShape = _a.texShape;\n                        if (values != null) {\n                            this.cacheOnCPU(id);\n                            return [2, values];\n                        }\n                        if (!(environment_1.ENV.get('WEBGL_GET_BUFFER_SUB_DATA_ASYNC_EXTENSION_ENABLED') &&\n                            textureType === tex_util_1.TextureType.DEFAULT)) return [3, 2];\n                        return [4, this.gpgpu.downloadMatrixFromTextureAsync(texture, texShape[0], texShape[1])];\n                    case 1:\n                        float32Values = _b.sent();\n                        this.cacheOnCPU(id, float32Values);\n                        return [2, this.texData[id].values];\n                    case 2:\n                        if (!environment_1.ENV.get('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_ENABLED')) {\n                            return [2, this.readSync(id)];\n                        }\n                        return [4, this.gpgpu.runQuery(function () { })];\n                    case 3:\n                        _b.sent();\n                        return [2, this.readSync(id)];\n                }\n            });\n        });\n    };\n    MathBackendWebGL.prototype.time = function (query) {\n        return __awaiter(this, void 0, void 0, function () {\n            var start, a;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!environment_1.ENV.get('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_ENABLED')) return [3, 2];\n                        start = performance.now();\n                        a = query();\n                        return [4, a.data()];\n                    case 1:\n                        _a.sent();\n                        return [2, performance.now() - start];\n                    case 2: return [2, this.gpgpu.runQuery(query)];\n                }\n            });\n        });\n    };\n    MathBackendWebGL.prototype.disposeData = function (id) {\n        if (id in this.texData) {\n            var _a = this.texData[id], texture = _a.texture, texShape = _a.texShape;\n            if (texture != null) {\n                this.textureManager.releaseTexture(texture, texShape);\n            }\n            delete this.texData[id];\n        }\n    };\n    MathBackendWebGL.prototype.getTexture = function (id) {\n        this.uploadToGPU(id);\n        return this.texData[id].texture;\n    };\n    MathBackendWebGL.prototype.getTextureData = function (id) {\n        this.uploadToGPU(id);\n        return this.texData[id];\n    };\n    MathBackendWebGL.prototype.getGPGPUContext = function () {\n        return this.gpgpu;\n    };\n    MathBackendWebGL.prototype.clone = function (x) {\n        this.throwIfNoData(x.id);\n        var texShape = this.texData[x.id].texShape;\n        var source = x.as2D(texShape[0], texShape[1]);\n        var output = this.makeOutputArray(texShape, x.dtype);\n        this.copy2D(source, [0, 0], texShape, output, [0, 0], texShape);\n        return output.reshape(x.shape);\n    };\n    MathBackendWebGL.prototype.slice1D = function (x, begin, size) {\n        var program = new slice_gpu_1.SliceProgram([size]);\n        var customSetup = program.getCustomSetupFunc([begin]);\n        return this.compileAndRun(program, [x], null, customSetup);\n    };\n    MathBackendWebGL.prototype.slice2D = function (x, begin, size) {\n        var program = new slice_gpu_1.SliceProgram(size);\n        var customSetup = program.getCustomSetupFunc(begin);\n        return this.compileAndRun(program, [x], null, customSetup);\n    };\n    MathBackendWebGL.prototype.slice3D = function (x, begin, size) {\n        var program = new slice_gpu_1.SliceProgram(size);\n        var customSetup = program.getCustomSetupFunc(begin);\n        return this.compileAndRun(program, [x], null, customSetup);\n    };\n    MathBackendWebGL.prototype.slice4D = function (x, begin, size) {\n        var program = new slice_gpu_1.SliceProgram(size);\n        var customSetup = program.getCustomSetupFunc(begin);\n        return this.compileAndRun(program, [x], null, customSetup);\n    };\n    MathBackendWebGL.prototype.copy2D = function (source, sourceBeginRowCol, sourceSizeRowCol, dest, destBeginRowCol, destSizeRowCol) {\n        var program = new copy_gpu_1.Copy2DProgram(sourceSizeRowCol[1], destSizeRowCol[1]);\n        var customSetup = program.getCustomSetupFunc(sourceBeginRowCol, destBeginRowCol, destSizeRowCol);\n        this.compileAndRun(program, [source], dest, customSetup);\n    };\n    MathBackendWebGL.prototype.concat1D = function (a, b) {\n        var program = new concat_gpu_1.ConcatProgram(a.shape, b.shape, 0);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.concat2D = function (a, b, axis) {\n        var program = new concat_gpu_1.ConcatProgram(a.shape, b.shape, axis);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.concat3D = function (a, b, axis) {\n        var program = new concat_gpu_1.ConcatProgram(a.shape, b.shape, axis);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.concat4D = function (a, b, axis) {\n        var program = new concat_gpu_1.ConcatProgram(a.shape, b.shape, axis);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.neg = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.NEG);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.matMul = function (a, b, aOrientation, bOrientation) {\n        var program = new mulmat_gpu_1.MatMulProgram(a.shape, b.shape, aOrientation, bOrientation);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.multiply = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.MUL, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, types.upcastType(a.dtype, b.dtype));\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.batchNormalization2D = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        var inputs = [x, mean, variance];\n        var offsetShape = null;\n        if (offset != null) {\n            offsetShape = offset.shape;\n            inputs.push(offset);\n        }\n        var scaleShape = null;\n        if (scale != null) {\n            scaleShape = scale.shape;\n            inputs.push(scale);\n        }\n        var program = new batchnorm_gpu_1.BatchNormProgram(x.shape, mean.shape, variance.shape, offsetShape, scaleShape, varianceEpsilon);\n        return this.compileAndRun(program, inputs);\n    };\n    MathBackendWebGL.prototype.batchNormalization3D = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        var inputs = [x, mean, variance];\n        var offsetShape = null;\n        if (offset != null) {\n            offsetShape = offset.shape;\n            inputs.push(offset);\n        }\n        var scaleShape = null;\n        if (scale != null) {\n            scaleShape = scale.shape;\n            inputs.push(scale);\n        }\n        var program = new batchnorm_gpu_1.BatchNormProgram(x.shape, mean.shape, variance.shape, offsetShape, scaleShape, varianceEpsilon);\n        return this.compileAndRun(program, inputs);\n    };\n    MathBackendWebGL.prototype.tile = function (x, reps) {\n        var program = new tile_gpu_1.TileProgram(x.shape, reps);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.transpose = function (x, perm) {\n        var program = new transpose_gpu_1.TransposeProgram(x.shape, perm);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.reduce = function (x, reduceType, dtype) {\n        var batchSize = x.shape[0];\n        var inSize = x.shape[1];\n        var windowSize = reduce_util.computeOptimalWindowSize(inSize);\n        var reduceInfo = { windowSize: windowSize, inSize: inSize, batchSize: batchSize };\n        var program = new reduce_gpu_1.ReduceProgram(reduceInfo, reduceType);\n        var _a = program.outputShape, rows = _a[0], cols = _a[1];\n        var output = this.makeOutputArray(program.outputShape, dtype).as2D(rows, cols);\n        this.compileAndRun(program, [x], output);\n        if (output.shape[1] === 1) {\n            return output;\n        }\n        return this.reduce(output, reduceType, dtype);\n    };\n    MathBackendWebGL.prototype.argReduce = function (x, reduceType, bestIndicesA) {\n        if (bestIndicesA === void 0) { bestIndicesA = null; }\n        var batchSize = x.shape[0];\n        var inSize = x.shape[1];\n        if (bestIndicesA != null) {\n            batchSize = bestIndicesA.shape[0];\n            inSize = bestIndicesA.shape[1];\n        }\n        var windowSize = reduce_util.computeOptimalWindowSize(inSize);\n        var reduceInfo = { windowSize: windowSize, inSize: inSize, batchSize: batchSize };\n        var program = new argminmax_gpu_1.ArgMinMaxProgram(reduceInfo, reduceType, bestIndicesA == null);\n        var _a = program.outputShape, rows = _a[0], cols = _a[1];\n        var output = this.makeOutputArray(program.outputShape, 'int32').as2D(rows, cols);\n        var inputs = [x];\n        if (bestIndicesA != null) {\n            inputs.push(bestIndicesA);\n        }\n        this.compileAndRun(program, inputs, output);\n        if (output.shape[1] === 1) {\n            return output;\n        }\n        return this.argReduce(x, reduceType, output);\n    };\n    MathBackendWebGL.prototype.sum = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('sum', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var inSize = util.sizeFromShape(reduceShape);\n        var a2D = x.as2D(-1, inSize);\n        var outputDType = types_1.SumTypesMap[x.dtype];\n        return this.reduce(a2D, 'sum', outputDType).reshape(outShape);\n    };\n    MathBackendWebGL.prototype.argMin = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('argMin', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var inSize = util.sizeFromShape(reduceShape);\n        var a2D = x.as2D(-1, inSize);\n        return this.argReduce(a2D, 'min').reshape(outShape);\n    };\n    MathBackendWebGL.prototype.argMax = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('argMax', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var inSize = util.sizeFromShape(reduceShape);\n        var a2D = x.as2D(-1, inSize);\n        return this.argReduce(a2D, 'max').reshape(outShape);\n    };\n    MathBackendWebGL.prototype.equal = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.EQUAL, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, 'bool');\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.topKValues = function (x, k) {\n        throw new Error('topKValues GPU not yet implemented!');\n    };\n    MathBackendWebGL.prototype.topKIndices = function (x, k) {\n        throw new Error('topKIndices GPU not yet implemented!');\n    };\n    MathBackendWebGL.prototype.min = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('min', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var inSize = util.sizeFromShape(reduceShape);\n        var a2D = x.as2D(-1, inSize);\n        return this.reduce(a2D, 'min', a2D.dtype).reshape(outShape);\n    };\n    MathBackendWebGL.prototype.max = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('max', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var inSize = util.sizeFromShape(reduceShape);\n        var a2D = x.as2D(-1, inSize);\n        return this.reduce(a2D, 'max', a2D.dtype).reshape(outShape);\n    };\n    MathBackendWebGL.prototype.divide = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.DIV, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, 'float32');\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.add = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.ADD, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, types.upcastType(a.dtype, b.dtype));\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.subtract = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.SUB, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, types.upcastType(a.dtype, b.dtype));\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.pow = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.POW, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.ceil = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.CEIL);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.floor = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.FLOOR);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.exp = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.EXP);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.log = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.LOG);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.sqrt = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SQRT);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.square = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SQUARE);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.relu = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.RELU);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.elu = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ELU);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.eluDer = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ELU_DER);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.selu = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SELU);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.leakyRelu = function (x, alpha) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.LEAKY_RELU(alpha));\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.prelu = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.PRELU, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.preluDer = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.PRELU_DER, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.clip = function (x, min, max) {\n        var program = new clip_gpu_1.ClipProgram(x.shape, min, max);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.abs = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ABS);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.sigmoid = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SIGMOID);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.sin = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SIN);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.cos = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.COS);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.tan = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.TAN);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.asin = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ASIN);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.acos = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ACOS);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.atan = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ATAN);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.sinh = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SINH);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.cosh = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.COSH);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.tanh = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.TANH);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.step = function (x, alpha) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.STEP(alpha));\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.conv2d = function (x, filter, bias, convInfo) {\n        var program = new conv_gpu_1.Conv2DProgram(convInfo, bias != null);\n        var inputs = bias != null ? [x, filter, bias] : [x, filter];\n        return this.compileAndRun(program, inputs);\n    };\n    MathBackendWebGL.prototype.conv2dDerInput = function (dy, filter, convInfo) {\n        var program = new conv_backprop_gpu_1.Conv2DDerInputProgram(convInfo);\n        return this.compileAndRun(program, [dy, filter]);\n    };\n    MathBackendWebGL.prototype.conv2dDerFilter = function (x, dy, convInfo) {\n        var program = new conv_backprop_gpu_1.Conv2DDerFilterProgram(convInfo);\n        return this.compileAndRun(program, [x, dy]);\n    };\n    MathBackendWebGL.prototype.conv2dDerBias = function (dy) {\n        var program = new conv_backprop_gpu_1.Conv2DDerBiasProgram(dy.shape);\n        return this.compileAndRun(program, [dy]);\n    };\n    MathBackendWebGL.prototype.depthwiseConv2D = function (x, filter, convInfo) {\n        var program = new conv_gpu_depthwise_1.DepthwiseConv2DProgram(convInfo);\n        return this.compileAndRun(program, [x, filter]);\n    };\n    MathBackendWebGL.prototype.maxPool = function (x, convInfo) {\n        var program = new pool_gpu_1.Pool2DProgram(convInfo, 'max', false);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.minPool = function (x, convInfo) {\n        var program = new pool_gpu_1.Pool2DProgram(convInfo, 'min', false);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.avgPool = function (x, convInfo) {\n        var program = new pool_gpu_1.Pool2DProgram(convInfo, 'avg', false);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.maxPoolBackprop = function (dy, x, convInfo) {\n        var getPositions = true;\n        var maxPoolPositionsProgram = new pool_gpu_1.Pool2DProgram(convInfo, 'max', getPositions);\n        var maxPoolPositions = this.compileAndRun(maxPoolPositionsProgram, [x]);\n        var maxPoolBackPropProgram = new max_pool_backprop_gpu_1.MaxPool2DBackpropProgram(convInfo);\n        var result = this.compileAndRun(maxPoolBackPropProgram, [dy, maxPoolPositions]);\n        maxPoolPositions.dispose();\n        return result;\n    };\n    MathBackendWebGL.prototype.resizeBilinear3D = function (x, newShape2D, alignCorners) {\n        var program = new resize_bilinear_gpu_1.ResizeBilinear3DProgram(x.shape, newShape2D, alignCorners);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.multinomial = function (probs, numSamples, seed) {\n        var batchSize = probs.shape[0];\n        var numOutcomes = probs.shape[1];\n        var program = new multinomial_gpu_1.MultinomialProgram(batchSize, numOutcomes, numSamples);\n        var output = this.makeOutputArray(program.outputShape, 'int32');\n        var customSetup = program.getCustomSetupFunc(seed);\n        return this.compileAndRun(program, [probs], output, customSetup);\n    };\n    MathBackendWebGL.prototype.oneHot = function (indices, depth, onValue, offValue) {\n        var program = new onehot_gpu_1.OneHotProgram(indices.size, depth, onValue, offValue);\n        return this.compileAndRun(program, [indices]);\n    };\n    MathBackendWebGL.prototype.makeOutputArray = function (shape, dtype) {\n        return ndarray_1.NDArray.make(shape, {}, dtype);\n    };\n    MathBackendWebGL.prototype.compileAndRun = function (program, inputs, output, customSetup) {\n        var _this = this;\n        if (output == null) {\n            output = this.makeOutputArray(program.outputShape, inputs[0].dtype);\n        }\n        var inputsData = inputs.map(function (input) {\n            _this.uploadToGPU(input.id);\n            return { array: input, texData: _this.texData[input.id] };\n        });\n        this.getOrMakeTexData(output.id, output.shape, output.dtype);\n        this.uploadToGPU(output.id);\n        var outputData = { array: output, texData: this.texData[output.id] };\n        var key = gpgpu_math.makeShaderKey(program, inputsData, outputData);\n        var binary = this.getAndSaveBinary(key, function () {\n            return gpgpu_math.compileProgram(_this.gpgpu, program, inputsData, outputData);\n        });\n        gpgpu_math.runProgram(binary, inputsData, outputData, customSetup);\n        return output;\n    };\n    MathBackendWebGL.prototype.getAndSaveBinary = function (key, getBinary) {\n        if (!(key in this.binaryCache)) {\n            this.binaryCache[key] = getBinary();\n        }\n        return this.binaryCache[key];\n    };\n    MathBackendWebGL.prototype.getTextureManager = function () {\n        return this.textureManager;\n    };\n    MathBackendWebGL.prototype.dispose = function () {\n        for (var key in this.binaryCache) {\n            this.gpgpu.deleteProgram(this.binaryCache[key].webGLProgram);\n        }\n        this.textureManager.dispose();\n        if (this.gpgpuCreatedLocally) {\n            this.gpgpu.dispose();\n        }\n    };\n    MathBackendWebGL.prototype.throwIfNoData = function (id) {\n        if (!(id in this.texData)) {\n            throw new Error(\"No data found for NDArray with id \" + id + \". \" +\n                \"Use dl.ENV.math instead of constructing your own NDArrayMath. \" +\n                \"If you need to construct your own math, make sure this array is \" +\n                \"allocated after the math construction\");\n        }\n    };\n    MathBackendWebGL.prototype.uploadToGPU = function (id) {\n        this.throwIfNoData(id);\n        var _a = this.texData[id], texShape = _a.texShape, values = _a.values, texture = _a.texture, dtype = _a.dtype;\n        if (texture != null) {\n            return;\n        }\n        var newTexture = this.textureManager.acquireTexture(texShape);\n        this.texData[id].texture = newTexture;\n        if (values != null) {\n            this.gpgpu.uploadMatrixToTexture(newTexture, texShape[0], texShape[1], typedArrayToFloat32(values, dtype));\n        }\n    };\n    MathBackendWebGL.prototype.cacheOnCPU = function (id, float32Values) {\n        var dontKeepCopyOnGPU = this.delayedStorage;\n        var _a = this.texData[id], texture = _a.texture, texShape = _a.texShape, dtype = _a.dtype;\n        if (dontKeepCopyOnGPU && texture != null) {\n            this.textureManager.releaseTexture(texture, texShape);\n            this.texData[id].texture = null;\n        }\n        if (float32Values != null) {\n            this.texData[id].values = float32ToTypedArray(float32Values, dtype);\n        }\n    };\n    return MathBackendWebGL;\n}());\nexports.MathBackendWebGL = MathBackendWebGL;\nenvironment_1.ENV.registerBackend('webgl', function () { return new MathBackendWebGL(); });\nvar NDArrayMathGPU = (function (_super) {\n    __extends(NDArrayMathGPU, _super);\n    function NDArrayMathGPU(gpgpu, safeMode) {\n        if (safeMode === void 0) { safeMode = false; }\n        var _this = this;\n        console.warn('new NDArrayMathGPU() is deprecated. Please use the global ' +\n            'dl.ENV.math. In rare cases, to construct your own NDArrayMath ' +\n            'that runs on GPU, use math = new NDArrayMath(\\'webgl\\', safeMode); ' +\n            'and make sure to set it as global: dl.ENV.setMath(math);');\n        _this = _super.call(this, new MathBackendWebGL(gpgpu), safeMode) || this;\n        environment_1.ENV.setMath(_this);\n        return _this;\n    }\n    NDArrayMathGPU.prototype.getGPGPUContext = function () {\n        return this.backendEngine.getBackend()\n            .getGPGPUContext();\n    };\n    NDArrayMathGPU.prototype.getTextureManager = function () {\n        return this.backendEngine.getBackend()\n            .getTextureManager();\n    };\n    return NDArrayMathGPU;\n}(math_1.NDArrayMath));\nexports.NDArrayMathGPU = NDArrayMathGPU;\nfunction float32ToTypedArray(a, dtype) {\n    if (dtype === 'float32') {\n        return a;\n    }\n    else if (dtype === 'int32' || dtype === 'bool') {\n        var result = (dtype === 'int32') ? new Int32Array(a.length) :\n            new Uint8Array(a.length);\n        for (var i = 0; i < result.length; ++i) {\n            var val = a[i];\n            val = isNaN(val) ? util.getNaN(dtype) : Math.round(val);\n            result[i] = val;\n        }\n        return result;\n    }\n    else {\n        throw new Error(\"Unknown dtype \" + dtype);\n    }\n}\nfunction typedArrayToFloat32(a, dtype) {\n    if (a instanceof Float32Array) {\n        return a;\n    }\n    else {\n        var res = new Float32Array(a.length);\n        for (var i = 0; i < res.length; i++) {\n            var val = a[i];\n            res[i] = util.isValNaN(val, dtype) ? NaN : val;\n        }\n        return res;\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/backend_webgl.js\n// module id = 2d20\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = require(\"../math/ndarray\");\nvar util = require(\"../util\");\nvar InMemoryShuffledInputProviderBuilder = (function () {\n    function InMemoryShuffledInputProviderBuilder(inputs) {\n        this.inputs = inputs;\n        this.idx = 0;\n        this.inputCounter = 0;\n        this.epoch = 0;\n        this.shuffledIndices = util.createShuffledIndices(inputs[0].length);\n        this.numInputs = inputs.length;\n        var numExamples = this.inputs[0].length;\n        for (var i = 0; i < this.numInputs; i++) {\n            util.assert(this.inputs[i].length === numExamples, 'Number of examples must match across different inputs.');\n        }\n        for (var i = 0; i < this.numInputs; i++) {\n            var inputShape = this.inputs[i][0].shape;\n            for (var j = 0; j < this.inputs[i].length; j++) {\n                util.assertShapesMatch(inputShape, this.inputs[i][j].shape);\n            }\n        }\n    }\n    InMemoryShuffledInputProviderBuilder.prototype.getCurrentExampleIndex = function () {\n        var returnIdx = this.idx;\n        this.inputCounter++;\n        if (this.inputCounter >= this.numInputs) {\n            this.idx++;\n            this.inputCounter = 0;\n            if (this.idx >= this.inputs[0].length) {\n                this.idx = 0;\n                this.epoch++;\n            }\n        }\n        return returnIdx;\n    };\n    InMemoryShuffledInputProviderBuilder.prototype.getNextInput = function (inputId) {\n        var currentExampleIndex = this.getCurrentExampleIndex();\n        return this.inputs[inputId][this.shuffledIndices[currentExampleIndex]];\n    };\n    InMemoryShuffledInputProviderBuilder.prototype.getEpoch = function () {\n        return this.epoch;\n    };\n    InMemoryShuffledInputProviderBuilder.prototype.getInputProviders = function () {\n        var inputProviders = [];\n        for (var i = 0; i < this.numInputs; i++) {\n            inputProviders.push(this.getInputProvider(i));\n        }\n        return inputProviders;\n    };\n    return InMemoryShuffledInputProviderBuilder;\n}());\nexports.InMemoryShuffledInputProviderBuilder = InMemoryShuffledInputProviderBuilder;\nvar InCPUMemoryShuffledInputProviderBuilder = (function (_super) {\n    __extends(InCPUMemoryShuffledInputProviderBuilder, _super);\n    function InCPUMemoryShuffledInputProviderBuilder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    InCPUMemoryShuffledInputProviderBuilder.prototype.getInputProvider = function (inputId) {\n        var shuffledInputProvider = this;\n        return {\n            getNextCopy: function (math) {\n                return ndarray_1.NDArray.like(shuffledInputProvider.getNextInput(inputId));\n            },\n            disposeCopy: function (math, copy) {\n                copy.dispose();\n            }\n        };\n    };\n    return InCPUMemoryShuffledInputProviderBuilder;\n}(InMemoryShuffledInputProviderBuilder));\nexports.InCPUMemoryShuffledInputProviderBuilder = InCPUMemoryShuffledInputProviderBuilder;\nvar InGPUMemoryShuffledInputProviderBuilder = (function (_super) {\n    __extends(InGPUMemoryShuffledInputProviderBuilder, _super);\n    function InGPUMemoryShuffledInputProviderBuilder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    InGPUMemoryShuffledInputProviderBuilder.prototype.getInputProvider = function (inputId) {\n        var shuffledInputProvider = this;\n        return {\n            getNextCopy: function (math) {\n                return math.clone(shuffledInputProvider.getNextInput(inputId));\n            },\n            disposeCopy: function (math, copy) {\n                copy.dispose();\n            }\n        };\n    };\n    return InGPUMemoryShuffledInputProviderBuilder;\n}(InMemoryShuffledInputProviderBuilder));\nexports.InGPUMemoryShuffledInputProviderBuilder = InGPUMemoryShuffledInputProviderBuilder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/data/input_provider.js\n// module id = 2wQ/\n// module chunks = 0","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_uid.js\n// module id = 3Eo+\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 3IRH\n// module chunks = 0","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/core.get-iterator-method.js\n// module id = 3fs2\n// module chunks = 0","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/seedrandom/lib/tychei.js\n// module id = 4dK1\n// module chunks = 0","module.exports = function () { /* empty */ };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_add-to-unscopables.js\n// module id = 4mcu\n// module chunks = 0","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_defined.js\n// module id = 52gC\n// module chunks = 0","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').isIterable = function (it) {\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    // eslint-disable-next-line no-prototype-builtins\n    || Iterators.hasOwnProperty(classof(O));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/core.is-iterable.js\n// module id = 5PlU\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Pool2DProgram = (function () {\n    function Pool2DProgram(convInfo, poolType, computePositions) {\n        this.variableNames = ['x'];\n        if (poolType === 'avg' && computePositions) {\n            throw new Error('Cannot compute positions for average pool.');\n        }\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        this.outputShape = convInfo.outShape;\n        var isAvgPool = poolType === 'avg';\n        var initializationValue = '0.0';\n        if (!isAvgPool) {\n            if (poolType === 'min') {\n                initializationValue = '1.0 / 0.0';\n            }\n            else {\n                initializationValue = '-1.0 / 0.0';\n            }\n        }\n        if (computePositions) {\n            var compareOp_1 = poolType === 'min' ? '<=' : '>=';\n            this.userCode = \"\\n        const ivec2 strides = ivec2(\" + strideHeight + \", \" + strideWidth + \");\\n        const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n        void main() {\\n          ivec4 coords = getOutputCoords();\\n          int batch = coords[0];\\n          int d = coords[3];\\n\\n          ivec2 xRCCorner = coords.yz * strides - pads;\\n          int xRCorner = xRCCorner.x;\\n          int xCCorner = xRCCorner.y;\\n\\n          // max/min x(?, ?, d) to get y(yR, yC, d).\\n          // ? = to be determined\\n          float minMaxValue = 0.0;\\n          float minMaxValueFound = 0.0;\\n          int minMaxPosition = 0;\\n          float avgValue = 0.0;\\n\\n          for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n            int xR = xRCorner + wR;\\n\\n            if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n              continue;\\n            }\\n\\n            for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n              int xC = xCCorner + wC;\\n\\n              if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n                continue;\\n              }\\n\\n              float value = getX(batch, xR, xC, d);\\n\\n              if (isNaN(value)) {\\n                setOutput(value);\\n                return;\\n              }\\n\\n              // If a min / max value has already been found, use it. If not,\\n              // use the current value.\\n              float currMinMaxValue = mix(\\n                  value, minMaxValue, minMaxValueFound);\\n              if (value \" + compareOp_1 + \" currMinMaxValue) {\\n                minMaxValue = value;\\n                minMaxValueFound = 1.0;\\n                minMaxPosition = wR * \" + filterWidth + \" + wC;\\n              }\\n            }\\n          }\\n          setOutput(float(minMaxPosition));\\n        }\\n      \";\n            return;\n        }\n        var compareOp = poolType === 'min' ? 'min' : 'max';\n        var returnValue = poolType + \"(\" + poolType + \"(\" + poolType + \"(\" +\n            'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n        if (poolType === 'avg') {\n            returnValue = \"avgValue / \" + filterHeight * filterWidth + \".0\";\n        }\n        var filterWidthNearestVec4 = Math.floor(filterWidth / 4) * 4;\n        var filterWidthVec4Remainder = filterWidth % 4;\n        var updateSnippet = \"\\n      if (hasNaN(values)) {\\n        setOutput(getNaN(values));\\n        return;\\n      }\\n      if (\" + isAvgPool + \") {\\n        avgValue += dot(values, ones);\\n      } else {\\n        minMaxValue = \" + compareOp + \"(values, minMaxValue);\\n      }\\n    \";\n        this.userCode = \"\\n      const ivec2 strides = ivec2(\" + strideHeight + \", \" + strideWidth + \");\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n      const float initializationValue = \" + initializationValue + \";\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float getValue(int batch, int xR, int xC, int d) {\\n        if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n          return initializationValue;\\n        }\\n        return getX(batch, xR, xC, d);\\n      }\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // max/min x(?, ?, d) to get y(yR, yC, d).\\n        // ? = to be determined\\n        vec4 minMaxValue = vec4(\" + initializationValue + \");\\n        float avgValue = 0.0;\\n\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          int xR = xRCorner + wR;\\n\\n          if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < \" + filterWidthNearestVec4 + \"; wC += 4) {\\n            int xC = xCCorner + wC;\\n\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + 1, d),\\n              getValue(batch, xR, xC + 2, d),\\n              getValue(batch, xR, xC + 3, d)\\n            );\\n\\n            \" + updateSnippet + \"\\n          }\\n\\n          int xC = xCCorner + \" + filterWidthNearestVec4 + \";\\n          if (\" + (filterWidthVec4Remainder === 1) + \") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              initializationValue,\\n              initializationValue,\\n              initializationValue\\n            );\\n            \" + updateSnippet + \"\\n          } else if (\" + (filterWidthVec4Remainder === 2) + \") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + 1, d),\\n              initializationValue,\\n              initializationValue\\n            );\\n\\n            \" + updateSnippet + \"\\n          } else if (\" + (filterWidthVec4Remainder === 3) + \") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + 1, d),\\n              getValue(batch, xR, xC + 2, d),\\n              initializationValue\\n            );\\n\\n            \" + updateSnippet + \"\\n          }\\n        }\\n        setOutput(\" + returnValue + \");\\n      }\\n    \";\n    }\n    return Pool2DProgram;\n}());\nexports.Pool2DProgram = Pool2DProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/pool_gpu.js\n// module id = 5vEO\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MatrixOrientation;\n(function (MatrixOrientation) {\n    MatrixOrientation[MatrixOrientation[\"REGULAR\"] = 0] = \"REGULAR\";\n    MatrixOrientation[MatrixOrientation[\"TRANSPOSED\"] = 1] = \"TRANSPOSED\";\n})(MatrixOrientation = exports.MatrixOrientation || (exports.MatrixOrientation = {}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/types/matmul.js\n// module id = 65Fz\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar xhr_dataset = require(\"./data/xhr-dataset\");\nexports.xhr_dataset = xhr_dataset;\nvar environment = require(\"./environment\");\nexports.environment = environment;\nvar gpgpu_util = require(\"./math/backends/webgl/gpgpu_util\");\nexports.gpgpu_util = gpgpu_util;\nvar render_ndarray_gpu_util = require(\"./math/backends/webgl/render_ndarray_gpu_util\");\nexports.render_ndarray_gpu_util = render_ndarray_gpu_util;\nvar webgl_util = require(\"./math/backends/webgl/webgl_util\");\nexports.webgl_util = webgl_util;\nvar conv_util = require(\"./math/conv_util\");\nexports.conv_util = conv_util;\nvar test_util = require(\"./test_util\");\nexports.test_util = test_util;\nvar util = require(\"./util\");\nexports.util = util;\nvar version_1 = require(\"./version\");\nexports.version = version_1.version;\nvar checkpoint_loader_1 = require(\"./data/checkpoint_loader\");\nexports.CheckpointLoader = checkpoint_loader_1.CheckpointLoader;\nvar dataset_1 = require(\"./data/dataset\");\nexports.InMemoryDataset = dataset_1.InMemoryDataset;\nvar input_provider_1 = require(\"./data/input_provider\");\nexports.InCPUMemoryShuffledInputProviderBuilder = input_provider_1.InCPUMemoryShuffledInputProviderBuilder;\nexports.InGPUMemoryShuffledInputProviderBuilder = input_provider_1.InGPUMemoryShuffledInputProviderBuilder;\nvar xhr_dataset_1 = require(\"./data/xhr-dataset\");\nexports.XhrDataset = xhr_dataset_1.XhrDataset;\nvar environment_1 = require(\"./environment\");\nexports.ENV = environment_1.ENV;\nexports.Environment = environment_1.Environment;\nvar graph_1 = require(\"./graph/graph\");\nexports.Graph = graph_1.Graph;\nexports.Tensor = graph_1.Tensor;\nvar adadelta_optimizer_1 = require(\"./graph/optimizers/adadelta_optimizer\");\nexports.AdadeltaOptimizer = adadelta_optimizer_1.AdadeltaOptimizer;\nvar adagrad_optimizer_1 = require(\"./graph/optimizers/adagrad_optimizer\");\nexports.AdagradOptimizer = adagrad_optimizer_1.AdagradOptimizer;\nvar adam_optimizer_1 = require(\"./graph/optimizers/adam_optimizer\");\nexports.AdamOptimizer = adam_optimizer_1.AdamOptimizer;\nvar adamax_optimizer_1 = require(\"./graph/optimizers/adamax_optimizer\");\nexports.AdamaxOptimizer = adamax_optimizer_1.AdamaxOptimizer;\nvar momentum_optimizer_1 = require(\"./graph/optimizers/momentum_optimizer\");\nexports.MomentumOptimizer = momentum_optimizer_1.MomentumOptimizer;\nvar optimizer_1 = require(\"./graph/optimizers/optimizer\");\nexports.Optimizer = optimizer_1.Optimizer;\nvar rmsprop_optimizer_1 = require(\"./graph/optimizers/rmsprop_optimizer\");\nexports.RMSPropOptimizer = rmsprop_optimizer_1.RMSPropOptimizer;\nvar sgd_optimizer_1 = require(\"./graph/optimizers/sgd_optimizer\");\nexports.SGDOptimizer = sgd_optimizer_1.SGDOptimizer;\nvar session_1 = require(\"./graph/session\");\nexports.CostReduction = session_1.CostReduction;\nexports.Session = session_1.Session;\nvar graph_runner_1 = require(\"./graph_runner\");\nexports.GraphRunner = graph_runner_1.GraphRunner;\nexports.MetricReduction = graph_runner_1.MetricReduction;\nvar initializers_1 = require(\"./initializers\");\nexports.ConstantInitializer = initializers_1.ConstantInitializer;\nexports.NDArrayInitializer = initializers_1.NDArrayInitializer;\nexports.OnesInitializer = initializers_1.OnesInitializer;\nexports.RandomNormalInitializer = initializers_1.RandomNormalInitializer;\nexports.RandomTruncatedNormalInitializer = initializers_1.RandomTruncatedNormalInitializer;\nexports.RandomUniformInitializer = initializers_1.RandomUniformInitializer;\nexports.VarianceScalingInitializer = initializers_1.VarianceScalingInitializer;\nexports.ZerosInitializer = initializers_1.ZerosInitializer;\nvar backend_cpu_1 = require(\"./math/backends/backend_cpu\");\nexports.MathBackendCPU = backend_cpu_1.MathBackendCPU;\nexports.NDArrayMathCPU = backend_cpu_1.NDArrayMathCPU;\nvar backend_webgl_1 = require(\"./math/backends/backend_webgl\");\nexports.MathBackendWebGL = backend_webgl_1.MathBackendWebGL;\nexports.NDArrayMathGPU = backend_webgl_1.NDArrayMathGPU;\nvar matmul_1 = require(\"./math/backends/types/matmul\");\nexports.MatrixOrientation = matmul_1.MatrixOrientation;\nvar gpgpu_context_1 = require(\"./math/backends/webgl/gpgpu_context\");\nexports.GPGPUContext = gpgpu_context_1.GPGPUContext;\nvar math_1 = require(\"./math/math\");\nexports.NDArrayMath = math_1.NDArrayMath;\nvar ndarray_1 = require(\"./math/ndarray\");\nexports.Array1D = ndarray_1.Array1D;\nexports.Array2D = ndarray_1.Array2D;\nexports.Array3D = ndarray_1.Array3D;\nexports.Array4D = ndarray_1.Array4D;\nexports.NDArray = ndarray_1.NDArray;\nexports.Scalar = ndarray_1.Scalar;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/index.js\n// module id = 6Dki\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction defaultCompare(a, b) {\n    if (a === b) {\n        return 0;\n    }\n    else if (a < b) {\n        return -1;\n    }\n    else {\n        return 1;\n    }\n}\nexports.defaultCompare = defaultCompare;\nvar PriorityQueue = (function () {\n    function PriorityQueue(comparator, indexObserver) {\n        this.comparator = comparator;\n        this.indexObserver = indexObserver;\n        this.heap = [];\n    }\n    PriorityQueue.prototype.enqueue = function (t) {\n        this.heap.push(t);\n        this.onIndexChanged(t, this.heap.length - 1);\n        this.siftUp(this.heap.length - 1);\n    };\n    PriorityQueue.prototype.dequeue = function () {\n        if (this.empty()) {\n            throw new Error('dequeue called on empty priority queue.');\n        }\n        var t = this.heap[0];\n        this.swap(0, this.heap.length - 1);\n        this.heap.pop();\n        this.siftDown(0);\n        return t;\n    };\n    PriorityQueue.prototype.update = function (newT, index) {\n        var last = (index === this.heap.length - 1);\n        if (!last) {\n            this.swap(index, this.heap.length - 1);\n        }\n        this.heap.pop();\n        if (!last) {\n            if (this.siftUpIndex(index) !== -1) {\n                this.siftUp(index);\n            }\n            else if (this.siftDownIndex(index) !== -1) {\n                this.siftDown(index);\n            }\n        }\n        this.enqueue(newT);\n    };\n    PriorityQueue.prototype.empty = function () {\n        return this.heap.length === 0;\n    };\n    PriorityQueue.prototype.onIndexChanged = function (t, newIndex) {\n        if (this.indexObserver) {\n            this.indexObserver(t, newIndex);\n        }\n    };\n    PriorityQueue.prototype.getParentIndex = function (index) {\n        if (index === 0) {\n            return -1;\n        }\n        return Math.floor((index - 1) / 2);\n    };\n    PriorityQueue.prototype.getLeftChildIndex = function (index) {\n        var candidate = index * 2 + 1;\n        return candidate < this.heap.length ? candidate : -1;\n    };\n    PriorityQueue.prototype.getRightChildIndex = function (index) {\n        var candidate = index * 2 + 2;\n        return candidate < this.heap.length ? candidate : -1;\n    };\n    PriorityQueue.prototype.siftUpIndex = function (index) {\n        var parentIndex = this.getParentIndex(index);\n        if (parentIndex === -1) {\n            return -1;\n        }\n        if (this.compare(parentIndex, index) > 0) {\n            return parentIndex;\n        }\n        return -1;\n    };\n    PriorityQueue.prototype.siftUp = function (index) {\n        var siftIndex = this.siftUpIndex(index);\n        while (siftIndex !== -1) {\n            this.swap(index, siftIndex);\n            index = siftIndex;\n            siftIndex = this.siftUpIndex(index);\n        }\n    };\n    PriorityQueue.prototype.siftDownIndex = function (index) {\n        if (index >= this.heap.length) {\n            return -1;\n        }\n        var largestChildIndex = index;\n        var leftChildIndex = this.getLeftChildIndex(index);\n        if ((leftChildIndex !== -1) &&\n            (this.compare(leftChildIndex, largestChildIndex) < 0)) {\n            largestChildIndex = leftChildIndex;\n        }\n        var rightChildIndex = this.getRightChildIndex(index);\n        if ((rightChildIndex !== -1) &&\n            (this.compare(rightChildIndex, largestChildIndex) < 0)) {\n            largestChildIndex = rightChildIndex;\n        }\n        return (largestChildIndex === index) ? -1 : largestChildIndex;\n    };\n    PriorityQueue.prototype.siftDown = function (index) {\n        var siftIndex = this.siftDownIndex(index);\n        while (siftIndex !== -1) {\n            this.swap(index, siftIndex);\n            index = siftIndex;\n            siftIndex = this.siftDownIndex(index);\n        }\n    };\n    PriorityQueue.prototype.compare = function (aIndex, bIndex) {\n        return this.comparator(this.heap[aIndex], this.heap[bIndex]);\n    };\n    PriorityQueue.prototype.swap = function (a, b) {\n        var temp = this.heap[a];\n        this.heap[a] = this.heap[b];\n        this.heap[b] = temp;\n        this.onIndexChanged(this.heap[a], a);\n        this.onIndexChanged(this.heap[b], b);\n    };\n    return PriorityQueue;\n}());\nexports.PriorityQueue = PriorityQueue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/priority_queue.js\n// module id = 7//S\n// module chunks = 0","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_an-object.js\n// module id = 77Pl\n// module chunks = 0","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_global.js\n// module id = 7KvD\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar broadcast_util = require(\"../../broadcast_util\");\nvar BatchNormProgram = (function () {\n    function BatchNormProgram(xShape, meanShape, varianceShape, offsetShape, scaleShape, varianceEpsilon) {\n        this.outputShape = [];\n        this.supportsBroadcasting = true;\n        this.variableNames = ['x', 'mean', 'variance'];\n        broadcast_util.assertAndGetBroadcastShape(xShape, meanShape);\n        broadcast_util.assertAndGetBroadcastShape(xShape, varianceShape);\n        var offsetSnippet = '0.0';\n        if (offsetShape != null) {\n            broadcast_util.assertAndGetBroadcastShape(xShape, offsetShape);\n            this.variableNames.push('offset');\n            offsetSnippet = 'getOffsetAtOutCoords()';\n        }\n        var scaleSnippet = '1.0';\n        if (scaleShape != null) {\n            broadcast_util.assertAndGetBroadcastShape(xShape, scaleShape);\n            this.variableNames.push('scale');\n            scaleSnippet = 'getScaleAtOutCoords()';\n        }\n        this.outputShape = xShape;\n        this.userCode = \"\\n      void main() {\\n        float x = getXAtOutCoords();\\n        float mean = getMeanAtOutCoords();\\n        float variance = getVarianceAtOutCoords();\\n        float offset = \" + offsetSnippet + \";\\n        float scale = \" + scaleSnippet + \";\\n        float inv = scale / sqrt(variance + float(\" + varianceEpsilon + \"));\\n        setOutput((x - mean) * inv + offset);\\n      }\\n    \";\n    }\n    return BatchNormProgram;\n}());\nexports.BatchNormProgram = BatchNormProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/batchnorm_gpu.js\n// module id = 7pDe\n// module chunks = 0","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    var promise = Promise.resolve();\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_microtask.js\n// module id = 82Mu\n// module chunks = 0","module.exports = require('./_hide');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_redefine.js\n// module id = 880/\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = require(\"../math/ndarray\");\nvar util = require(\"../util\");\nvar dataset_1 = require(\"./dataset\");\nvar PARSING_IMAGE_CANVAS_HEIGHT_PX = 1000;\nfunction getXhrDatasetConfig(jsonConfigPath) {\n    return new Promise(function (resolve, reject) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', jsonConfigPath);\n        xhr.onload = function () {\n            resolve(JSON.parse(xhr.responseText));\n        };\n        xhr.onerror = function (error) {\n            reject(error);\n        };\n        xhr.send();\n    });\n}\nexports.getXhrDatasetConfig = getXhrDatasetConfig;\nvar XhrDataset = (function (_super) {\n    __extends(XhrDataset, _super);\n    function XhrDataset(xhrDatasetConfig) {\n        var _this = _super.call(this, xhrDatasetConfig.data.map(function (x) { return x.shape; })) || this;\n        _this.xhrDatasetConfig = xhrDatasetConfig;\n        return _this;\n    }\n    XhrDataset.prototype.getNDArray = function (info) {\n        var dataPromise = info.dataType === 'png' ?\n            parseTypedArrayFromPng(info, info.shape) :\n            parseTypedArrayFromBinary(info);\n        var inputSize = util.sizeFromShape(info.shape);\n        return dataPromise.then(function (data) {\n            var ndarrays = [];\n            for (var i = 0; i < data.length / inputSize; i++) {\n                var values = data.subarray(i * inputSize, (i + 1) * inputSize);\n                var ndarray = ndarray_1.NDArray.make(info.shape, { values: new Float32Array(values) }, 'float32');\n                ndarrays.push(ndarray);\n            }\n            return ndarrays;\n        });\n    };\n    XhrDataset.prototype.fetchData = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var promises = _this.xhrDatasetConfig.data.map(function (x) { return _this.getNDArray(x); });\n            Promise.all(promises).then(function (data) {\n                _this.dataset = data;\n                resolve();\n            });\n        });\n    };\n    return XhrDataset;\n}(dataset_1.InMemoryDataset));\nexports.XhrDataset = XhrDataset;\nfunction parseTypedArrayFromBinary(info) {\n    return new Promise(function (resolve, reject) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', info.path);\n        xhr.responseType = 'arraybuffer';\n        xhr.onload = function (event) {\n            var data = (info.dataType === 'float32') ?\n                new Float32Array(xhr.response) :\n                new Uint8Array(xhr.response);\n            resolve(data);\n        };\n        xhr.onerror = function (err) { return reject(err); };\n        xhr.send();\n    });\n}\nfunction parseGrayscaleImageData(data, result, resultOffset) {\n    var idx = resultOffset;\n    for (var i = 0; i < data.length; i += 4) {\n        result[idx++] = data[i];\n    }\n}\nfunction parseRGBImageData(data, result, resultOffset) {\n    var idx = resultOffset;\n    for (var i = 0; i < data.length; i += 4) {\n        result[idx] = data[i];\n        result[idx + 1] = data[i + 1];\n        result[idx + 2] = data[i + 2];\n        idx += 3;\n    }\n}\nfunction parseImage(img, shape) {\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var N = img.height;\n    var inputSize = util.sizeFromShape(shape);\n    var result = new Uint8Array(N * inputSize);\n    if (img.width !== shape[0] * shape[1]) {\n        throw new Error(\"Image width (\" + img.width + \") must be multiple of \" +\n            (\"rows*columns (\" + shape[0] + \"*\" + shape[1] + \") of the ndarray\"));\n    }\n    canvas.width = img.width;\n    canvas.height = PARSING_IMAGE_CANVAS_HEIGHT_PX;\n    var sx = 0;\n    var sWidth = canvas.width;\n    var sHeight = canvas.height;\n    var dx = 0;\n    var dy = 0;\n    var dWidth = sWidth;\n    var dHeight = sHeight;\n    var depth = shape[2];\n    var offset = 0;\n    var numPasses = Math.ceil(N / canvas.height);\n    for (var pass = 0; pass < numPasses; ++pass) {\n        var sy = pass * canvas.height;\n        if ((pass === numPasses - 1) && (N % canvas.height > 0)) {\n            canvas.height = N % canvas.height;\n            sHeight = canvas.height;\n            dHeight = sHeight;\n        }\n        ctx.drawImage(img, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n        var data = ctx.getImageData(0, 0, canvas.width, canvas.height).data;\n        (depth === 1) ? parseGrayscaleImageData(data, result, offset) :\n            parseRGBImageData(data, result, offset);\n        offset += canvas.height * inputSize;\n    }\n    return result;\n}\nfunction parseTypedArrayFromPng(info, shape) {\n    return new Promise(function (resolve, reject) {\n        var img = new Image();\n        img.setAttribute('crossOrigin', '');\n        img.onload = function () {\n            var result = parseImage(img, shape);\n            img.src = '';\n            img = null;\n            resolve(result);\n        };\n        img.src = info.path;\n    });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/data/xhr-dataset.js\n// module id = 8oyn\n// module chunks = 0","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-create.js\n// module id = 94VQ\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = require(\"../math/ndarray\");\nvar MANIFEST_FILE = 'manifest.json';\nvar CheckpointLoader = (function () {\n    function CheckpointLoader(urlPath) {\n        this.urlPath = urlPath;\n        if (this.urlPath.charAt(this.urlPath.length - 1) !== '/') {\n            this.urlPath += '/';\n        }\n    }\n    CheckpointLoader.prototype.loadManifest = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', _this.urlPath + MANIFEST_FILE);\n            xhr.onload = function () {\n                _this.checkpointManifest = JSON.parse(xhr.responseText);\n                resolve();\n            };\n            xhr.onerror = function (error) {\n                throw new Error(MANIFEST_FILE + \" not found at \" + _this.urlPath + \". \" + error);\n            };\n            xhr.send();\n        });\n    };\n    CheckpointLoader.prototype.getCheckpointManifest = function () {\n        var _this = this;\n        if (this.checkpointManifest == null) {\n            return new Promise(function (resolve, reject) {\n                _this.loadManifest().then(function () {\n                    resolve(_this.checkpointManifest);\n                });\n            });\n        }\n        return new Promise(function (resolve, reject) {\n            resolve(_this.checkpointManifest);\n        });\n    };\n    CheckpointLoader.prototype.getAllVariables = function () {\n        var _this = this;\n        if (this.variables != null) {\n            return new Promise(function (resolve, reject) {\n                resolve(_this.variables);\n            });\n        }\n        return new Promise(function (resolve, reject) {\n            _this.getCheckpointManifest().then(function (checkpointDefinition) {\n                var variableNames = Object.keys(_this.checkpointManifest);\n                var variablePromises = [];\n                for (var i = 0; i < variableNames.length; i++) {\n                    variablePromises.push(_this.getVariable(variableNames[i]));\n                }\n                Promise.all(variablePromises).then(function (variables) {\n                    _this.variables = {};\n                    for (var i = 0; i < variables.length; i++) {\n                        _this.variables[variableNames[i]] = variables[i];\n                    }\n                    resolve(_this.variables);\n                });\n            });\n        });\n    };\n    CheckpointLoader.prototype.getVariable = function (varName) {\n        var _this = this;\n        if (!(varName in this.checkpointManifest)) {\n            throw new Error('Cannot load non-existant variable ' + varName);\n        }\n        var variableRequestPromiseMethod = function (resolve, reject) {\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'arraybuffer';\n            var fname = _this.checkpointManifest[varName].filename;\n            xhr.open('GET', _this.urlPath + fname);\n            xhr.onload = function () {\n                if (xhr.status === 404) {\n                    throw new Error(\"Not found variable \" + varName);\n                }\n                var values = new Float32Array(xhr.response);\n                var ndarray = ndarray_1.NDArray.make(_this.checkpointManifest[varName].shape, { values: values });\n                resolve(ndarray);\n            };\n            xhr.onerror = function (error) {\n                throw new Error(\"Could not fetch variable \" + varName + \": \" + error);\n            };\n            xhr.send();\n        };\n        if (this.checkpointManifest == null) {\n            return new Promise(function (resolve, reject) {\n                _this.loadManifest().then(function () {\n                    new Promise(variableRequestPromiseMethod).then(resolve);\n                });\n            });\n        }\n        return new Promise(variableRequestPromiseMethod);\n    };\n    return CheckpointLoader;\n}());\nexports.CheckpointLoader = CheckpointLoader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/data/checkpoint_loader.js\n// module id = 9GMi\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"../util\");\nfunction assertParams(aShape, bShape, axis) {\n    var aRank = aShape.length;\n    var bRank = bShape.length;\n    util.assert(aShape.length === bShape.length, \"Error in concat\" + aRank + \"D: rank of x1 (\" + aRank + \") and x2 (\" + bRank + \") \" +\n        \"must be the same.\");\n    util.assert(axis >= 0 && axis < aRank, \"Error in concat\" + aRank + \"D: axis must be \" +\n        (\"between 0 and \" + (aRank - 1) + \".\"));\n    for (var i = 0; i < aRank; i++) {\n        util.assert((i === axis) || (aShape[i] === bShape[i]), \"Error in concat\" + aRank + \"D: Shape (\" + aShape + \") does not match \" +\n            (\"(\" + bShape + \") along the non-concatenated axis \" + i + \".\"));\n    }\n}\nexports.assertParams = assertParams;\nfunction computeOutShape(x1Shape, x2Shape, axis) {\n    util.assert(x1Shape.length === x2Shape.length, 'x1 and x2 should have the same rank.');\n    var outputShape = x1Shape.slice();\n    outputShape[axis] += x2Shape[axis];\n    return outputShape;\n}\nexports.computeOutShape = computeOutShape;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/concat_util.js\n// module id = 9RhS\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar matmul_1 = require(\"../types/matmul\");\nvar MatMulProgram = (function () {\n    function MatMulProgram(aShape, bShape, aOrient, bOrient) {\n        if (aOrient === void 0) { aOrient = matmul_1.MatrixOrientation.REGULAR; }\n        if (bOrient === void 0) { bOrient = matmul_1.MatrixOrientation.REGULAR; }\n        this.variableNames = ['matrixA', 'matrixB'];\n        var outerShapeA = (aOrient === matmul_1.MatrixOrientation.REGULAR) ? aShape[0] : aShape[1];\n        var outerShapeB = (bOrient === matmul_1.MatrixOrientation.REGULAR) ? bShape[1] : bShape[0];\n        this.outputShape = [outerShapeA, outerShapeB];\n        var sharedDim = (aOrient === matmul_1.MatrixOrientation.REGULAR ? aShape[1] : aShape[0]);\n        var aSnippetFromOffset = function (vec4Offset, indexVar) {\n            return (aOrient === matmul_1.MatrixOrientation.REGULAR) ?\n                \"aRow, \" + indexVar + \" + \" + vec4Offset :\n                indexVar + \" + \" + vec4Offset + \", aRow\";\n        };\n        var bSnippetFromOffset = function (vec4Offset, indexVar) {\n            return (bOrient === matmul_1.MatrixOrientation.REGULAR) ?\n                indexVar + \" + \" + vec4Offset + \", bCol\" :\n                \"bCol, \" + indexVar + \" + \" + vec4Offset;\n        };\n        var sharedDimNearestVec4 = Math.floor(sharedDim / 4) * 4;\n        var sharedDimVec4Remainder = sharedDim % 4;\n        this.userCode = \" float dotARowBCol(int aRow, int bCol) {\\n      float result = 0.0;\\n      for (int i = 0; i < \" + sharedDimNearestVec4 + \"; i += 4) {\\n        vec4 a = vec4(\\n          getMatrixA(\" + aSnippetFromOffset(0, 'i') + \"),\\n          getMatrixA(\" + aSnippetFromOffset(1, 'i') + \"),\\n          getMatrixA(\" + aSnippetFromOffset(2, 'i') + \"),\\n          getMatrixA(\" + aSnippetFromOffset(3, 'i') + \")\\n        );\\n        vec4 b = vec4(\\n          getMatrixB(\" + bSnippetFromOffset(0, 'i') + \"),\\n          getMatrixB(\" + bSnippetFromOffset(1, 'i') + \"),\\n          getMatrixB(\" + bSnippetFromOffset(2, 'i') + \"),\\n          getMatrixB(\" + bSnippetFromOffset(3, 'i') + \")\\n        );\\n\\n        result += dot(a, b);\\n      }\\n\\n      if (\" + (sharedDimVec4Remainder === 1) + \") {\\n        result += getMatrixA(\" + aSnippetFromOffset(0, sharedDimNearestVec4) + \") *\\n          getMatrixB(\" + bSnippetFromOffset(0, sharedDimNearestVec4) + \");\\n      } else if (\" + (sharedDimVec4Remainder === 2) + \") {\\n        vec2 a = vec2(\\n          getMatrixA(\" + aSnippetFromOffset(0, sharedDimNearestVec4) + \"),\\n          getMatrixA(\" + aSnippetFromOffset(1, sharedDimNearestVec4) + \")\\n        );\\n        vec2 b = vec2(\\n          getMatrixB(\" + bSnippetFromOffset(0, sharedDimNearestVec4) + \"),\\n          getMatrixB(\" + bSnippetFromOffset(1, sharedDimNearestVec4) + \")\\n        );\\n        result += dot(a, b);\\n      } else if (\" + (sharedDimVec4Remainder === 3) + \") {\\n        vec3 a = vec3(\\n          getMatrixA(\" + aSnippetFromOffset(0, sharedDimNearestVec4) + \"),\\n          getMatrixA(\" + aSnippetFromOffset(1, sharedDimNearestVec4) + \"),\\n          getMatrixA(\" + aSnippetFromOffset(2, sharedDimNearestVec4) + \")\\n        );\\n        vec3 b = vec3(\\n          getMatrixB(\" + bSnippetFromOffset(0, sharedDimNearestVec4) + \"),\\n          getMatrixB(\" + bSnippetFromOffset(1, sharedDimNearestVec4) + \"),\\n          getMatrixB(\" + bSnippetFromOffset(2, sharedDimNearestVec4) + \")\\n        );\\n        result += dot(a, b);\\n      }\\n\\n      return result;\\n    }\\n\\n    void main() {\\n      ivec2 resRC = getOutputCoords();\\n      setOutput(dotARowBCol(resRC.x, resRC.y));\\n    }\\n    \";\n    }\n    return MatMulProgram;\n}());\nexports.MatMulProgram = MatMulProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/mulmat_gpu.js\n// module id = 9V2y\n// module chunks = 0","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/define-property.js\n// module id = 9bBU\n// module chunks = 0","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/seedrandom/lib/xor4096.js\n// module id = 9g4f\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/get-iterator.js\n// module id = BO1k\n// module chunks = 0","import { Array1D, Array3D, Array4D, CheckpointLoader, NDArray, ENV, Scalar, Model } from 'deeplearn';\n\n\nconst Check_Points_Path = '/static/checkpoints';\n\n\ninterface VariableRecording {\n  [styleName: string]: Variables\n}\n\ninterface Variables {\n  [varName: string]: NDArray\n}\n\nexport class TransformNetwork implements Model {\n  varsRecording: VariableRecording = {};\n  currentStyle = '';\n  math = ENV.math;\n\n  get variables(): Variables {\n    return this.varsRecording[this.currentStyle];\n  }\n\n  timesScalar: NDArray = Scalar.new(150);\n  plusScalar: NDArray = Scalar.new(255. / 2);\n  epsilonScalar: NDArray = Scalar.new(1e-3);\n\n  async setStyle(styleName: string) {\n    this.currentStyle = styleName;\n    await this.load();\n  }\n\n  async load() {\n    if (this.varsRecording[this.currentStyle]) {\n      console.log(`${this.currentStyle} has been loaded.`);\n    } else {\n      const checkpointLoader = new CheckpointLoader(`${Check_Points_Path}/${this.currentStyle}/`);\n      this.varsRecording[this.currentStyle] = await checkpointLoader.getAllVariables();\n      console.log(`new style ${this.currentStyle} added.`);\n    }\n  }\n\n  predict(preprocessedInput: Array3D): Array3D {\n    const img = this.math.scope((keep, track) => {\n      const conv1 = this.convLayer(preprocessedInput, 1, true, 0);\n      const conv2 = this.convLayer(conv1, 2, true, 3);\n      const conv3 = this.convLayer(conv2, 2, true, 6);\n      const resid1 = this.residualBlock(conv3, 9);\n      const resid2 = this.residualBlock(resid1, 15);\n      const resid3 = this.residualBlock(resid2, 21);\n      const resid4 = this.residualBlock(resid3, 27);\n      const resid5 = this.residualBlock(resid4, 33);\n      const convT1 = this.convTransposeLayer(resid5, 64, 2, 39);\n      const convT2 = this.convTransposeLayer(convT1, 32, 2, 42);\n      const convT3 = this.convLayer(convT2, 1, false, 45);\n      const outTanh = this.math.tanh(convT3);\n      const scaled = this.math.scalarTimesArray(this.timesScalar, outTanh);\n      const shifted = this.math.scalarPlusArray(this.plusScalar, scaled);\n      const clamped = this.math.clip(shifted, 0, 255);\n      const normalized = this.math.divide(clamped, Scalar.new(255.)) as Array3D;\n\n      return normalized;\n    });\n\n    return img;\n  }\n\n  dispose() {\n    for (const styleName in this.varsRecording) {\n      for (const varName in this.varsRecording[styleName]) {\n        if (this.varsRecording[styleName].hasOwnProperty(varName)) {\n          this.varsRecording[styleName][varName].dispose();\n        }\n      }\n    }\n  }\n\n  convLayer(input: Array3D, strides: number, relu: boolean, varId: number): Array3D {\n    const y = this.math.conv2d(\n      input,\n      this.variables[TransformNetwork.varName(varId)] as Array4D,\n      null,\n      [strides, strides],\n      'same'\n    );\n\n    const y2 = this.instanceNorm(y, varId + 1);\n\n    return relu ? this.math.relu(y2) : y2;\n\n  }\n\n  convTransposeLayer(input: Array3D, numFilters: number, strides: number, varId: number): Array3D {\n    const [height, width] = input.shape;\n    const newRows = height * strides;\n    const newCols = width * strides;\n    const newShape: [number, number, number] = [newRows, newCols, numFilters];\n\n    const y = this.math.conv2dTranspose(input,\n      this.variables[TransformNetwork.varName(varId)] as Array4D,\n      newShape, [strides, strides], 'same');\n\n    const y2 = this.instanceNorm(y, varId + 1);\n\n    const y3 = this.math.relu(y2);\n\n    return y3;\n  }\n\n  residualBlock(input: Array3D, varId: number): Array3D {\n    const conv1 = this.convLayer(input, 1, true, varId);\n    const conv2 = this.convLayer(conv1, 1, false, varId + 3);\n    return this.math.addStrict(conv2, input);\n  }\n\n  instanceNorm(input: Array3D, varId: number): Array3D {\n    const [height, width, inDepth] = input.shape;\n    const moments = this.math.moments(input, [0, 1]);\n    const mu = moments.mean as Array3D;\n    const sigmaSq = moments.variance as Array3D;\n    const shift = this.variables[TransformNetwork.varName(varId)] as Array1D;\n    const scale = this.variables[TransformNetwork.varName(varId + 1)] as Array1D;\n    const epsilon = this.epsilonScalar;\n    const normalized = this.math.divide(\n      this.math.sub(input, mu),\n      this.math.sqrt(this.math.add(sigmaSq, epsilon))\n    );\n    const shifted = this.math.add(\n      this.math.multiply(scale, <NDArray>normalized),\n      shift\n    );\n    return shifted.as3D(height, width, inDepth);\n  }\n\n  static varName(varId: number): string {\n    if (varId === 0) {\n      return 'Variable';\n    }\n    else {\n      return 'Variable_' + varId.toString();\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/transform-network/network.ts","import Vue from 'vue';\nimport Component from 'vue-class-component';\nimport { TransformNetwork } from \"../../transform-network/network\";\nimport { Array3D, render_ndarray_gpu_util, gpgpu_util, GPGPUContext, ENV } from \"deeplearn\";\n\nconst math = ENV.math;\ndeclare const process: any;\n\n@Component({\n  name: 'style-transfer',\n  props: {\n    styleNames: {\n      type: Array,\n      default: () => [\n        'udnie',\n        'scream',\n        'la_muse',\n        'rain_princess',\n        'wave',\n        'wreck'\n      ]\n    },\n    transformNetwork: {\n      type: Object,\n      default: () => new TransformNetwork()\n    }\n  }\n})\nexport default class StyleTransferComponent extends Vue {\n\n  // $data\n  contentUrl = '';\n  styleUrl = '';\n  styleName = '';\n  startBtnLoading = false;\n\n  // $props\n  styleNames: string[];\n  transformNetwork: TransformNetwork;\n\n\n  uploadContent({ target }: Event) {\n    const files = (target as HTMLInputElement).files as FileList;\n    Vue.nextTick(() => {\n      this.contentUrl = URL.createObjectURL(files[0]);\n    });\n  }\n\n  async selectStyle(styleName: string) {\n    console.log(styleName);\n    Vue.nextTick(() => {\n      this.styleName = styleName;\n    });\n\n    let prefix = process.env.NODE_ENV === '\"production\"' ? '/fast-style-transfer-front-end/' : '/';\n    const response = await fetch(`${prefix}static/images/${styleName}.jpg`);\n    const blob = await response.blob();\n    Vue.nextTick(() => {\n      this.styleUrl = URL.createObjectURL(blob);\n    })\n  }\n\n  async startTransfer() {\n    this.startBtnLoading = true;\n    if (!(this.contentUrl && this.styleUrl)) {\n      this.$message.error('Please set Content or Style!');\n      this.startBtnLoading = false;\n      return;\n    }\n\n    Vue.nextTick(async () => {\n      await this.transformNetwork.setStyle(this.styleName);\n\n\n      await math.scope(async (keep, track) => {\n        const input = document.getElementById('transfer-content') as HTMLImageElement;\n        const preprocessed = track(Array3D.fromPixels(input) as Array3D);\n        const inferenceResult: Array3D = this.transformNetwork.predict(preprocessed);\n\n        const canvas = this.$refs.output as HTMLCanvasElement;\n        canvas.width = input.width;//inferenceResult.shape[0];\n        canvas.height = input.height;//inferenceResult.shape[1];\n\n        await renderToCanvas(inferenceResult, canvas as HTMLCanvasElement);\n      });\n\n      this.$message.info('Processing finished.');\n      this.startBtnLoading = false;\n    });\n  }\n}\n\nasync function renderToCanvas(a: Array3D, canvas: HTMLCanvasElement) {\n  const [height, width,] = a.shape;\n  const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n  const imageData = new ImageData(width, height);\n  const data = await a.data();\n  for (let i = 0; i < height * width; ++i) {\n    const j = i * 4;\n    const k = i * 3;\n    imageData.data[j] = Math.round(255 * data[k]);\n    imageData.data[j + 1] = Math.round(255 * data[k + 1]);\n    imageData.data[j + 2] = Math.round(255 * data[k + 2]);\n    imageData.data[j + 3] = 255;\n  }\n  ctx.putImageData(imageData, 0, 0);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/StyleTransfer/style-transfer.component.ts","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"style-transfer\"}},[_c('div',{staticClass:\"flex-container\"},[_c('div',{staticClass:\"box\"},[_c('h1',[_vm._v(\"Content\")]),_vm._v(\" \"),_c('input',{staticClass:\"content-input\",attrs:{\"type\":\"file\",\"accept\":\"image/*\"},on:{\"change\":_vm.uploadContent}}),_vm._v(\" \"),_c('div',[_c('img',{attrs:{\"id\":\"transfer-content\",\"src\":_vm.contentUrl,\"alt\":\"content\"}})])]),_vm._v(\" \"),_c('div',{staticClass:\"box\"},[_c('h1',[_vm._v(\"Style\")]),_vm._v(\" \"),_c('el-select',{attrs:{\"value\":_vm.styleName,\"placeholder\":\"Choose a style\"},on:{\"change\":_vm.selectStyle}},_vm._l((_vm.styleNames),function(name){return _c('el-option',{key:name,attrs:{\"label\":name,\"value\":name}})})),_vm._v(\" \"),_c('div',[_c('img',{attrs:{\"id\":\"transfer-style\",\"src\":_vm.styleUrl,\"alt\":\"style\"}})])],1)]),_vm._v(\" \"),_c('div',[_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.startBtnLoading},on:{\"click\":_vm.startTransfer}},[_vm._v(\"Start!\")])],1),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"output\"}},[_c('keep-alive',[_c('canvas',{key:'my-output',ref:\"output\",attrs:{\"id\":\"output-canvas\",\"width\":\"1\",\"height\":\"1\"}})])],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-42d264a4\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/StyleTransfer/style-transfer.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-42d264a4\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./style-transfer.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!ts-loader!./style-transfer.component.ts\"\nimport __vue_script__ from \"!!ts-loader!./style-transfer.component.ts\"/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-42d264a4\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./style-transfer.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/StyleTransfer/style-transfer.vue\n// module id = null\n// module chunks = ","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../environment\");\nvar util = require(\"../util\");\nvar rand_1 = require(\"./rand\");\nvar DType;\n(function (DType) {\n    DType[\"float32\"] = \"float32\";\n    DType[\"int32\"] = \"int32\";\n    DType[\"bool\"] = \"bool\";\n})(DType = exports.DType || (exports.DType = {}));\nvar NDArray = (function () {\n    function NDArray(shape, dtype, values, id, math) {\n        this.isDisposed = false;\n        this.math = math || environment_1.ENV.math;\n        this.size = util.sizeFromShape(shape);\n        if (values != null) {\n            util.assert(this.size === values.length, \"Constructing ndarray of shape (\" + this.size + \") should match the \" +\n                (\"length of values (\" + values.length + \")\"));\n        }\n        this.shape = shape;\n        this.dtype = dtype || 'float32';\n        var dim = this.shape.length;\n        if (dim < 2) {\n            this.strides = [];\n        }\n        else {\n            this.strides = new Array(dim - 1);\n            this.strides[dim - 2] = this.shape[dim - 1];\n            for (var i = dim - 3; i >= 0; --i) {\n                this.strides[i] = this.strides[i + 1] * this.shape[i + 1];\n            }\n        }\n        this.id = id;\n        if (this.id == null) {\n            this.id = NDArray.nextId++;\n            this.math.register(this);\n        }\n        if (values != null) {\n            this.math.write(this.id, values, this.dtype, this.shape);\n        }\n    }\n    NDArray.ones = function (shape, dtype) {\n        var values = makeOnesTypedArray(util.sizeFromShape(shape), dtype);\n        return NDArray.make(shape, { values: values }, dtype);\n    };\n    NDArray.zeros = function (shape, dtype) {\n        var values = makeZerosTypedArray(util.sizeFromShape(shape), dtype);\n        return NDArray.make(shape, { values: values }, dtype);\n    };\n    NDArray.onesLike = function (another) {\n        return NDArray.ones(another.shape, another.dtype);\n    };\n    NDArray.zerosLike = function (another) {\n        return NDArray.zeros(another.shape, another.dtype);\n    };\n    NDArray.like = function (another) {\n        var newValues = copyTypedArray(another.getValues(), another.dtype);\n        return NDArray.make(another.shape, { values: newValues }, another.dtype, another.math);\n    };\n    NDArray.make = function (shape, data, dtype, math) {\n        switch (shape.length) {\n            case 0:\n                return new Scalar(shape, dtype, data.values, data.id, math);\n            case 1:\n                return new Array1D(shape, dtype, data.values, data.id, math);\n            case 2:\n                return new Array2D(shape, dtype, data.values, data.id, math);\n            case 3:\n                return new Array3D(shape, dtype, data.values, data.id, math);\n            case 4:\n                return new Array4D(shape, dtype, data.values, data.id, math);\n            default:\n                return new NDArray(shape, dtype, data.values, data.id, math);\n        }\n    };\n    NDArray.fromPixels = function (pixels, numChannels, math) {\n        if (numChannels === void 0) { numChannels = 3; }\n        if (numChannels > 4) {\n            throw new Error('Cannot construct NDArray with more than 4 channels from pixels.');\n        }\n        var ndarrayData = {};\n        var shape = [pixels.height, pixels.width, numChannels];\n        math = math || environment_1.ENV.math;\n        var res = NDArray.make(shape, ndarrayData, 'int32', math);\n        math.writePixels(res.id, pixels, numChannels);\n        return res;\n    };\n    NDArray.prototype.reshape = function (newShape) {\n        this.throwIfDisposed();\n        newShape = util.inferFromImplicitShape(newShape, this.size);\n        if (util.arraysEqual(this.shape, newShape)) {\n            return this;\n        }\n        var data = { id: this.id };\n        util.assert(this.size === util.sizeFromShape(newShape), 'new shape and old shape must have the same number of elements.');\n        return NDArray.make(newShape, data, this.dtype, this.math);\n    };\n    NDArray.prototype.flatten = function () {\n        this.throwIfDisposed();\n        if (this instanceof Array1D) {\n            return this;\n        }\n        return this.as1D();\n    };\n    NDArray.prototype.asScalar = function () {\n        this.throwIfDisposed();\n        util.assert(this.size === 1, 'The array must have only 1 element.');\n        return this.reshape([]);\n    };\n    NDArray.prototype.as1D = function () {\n        this.throwIfDisposed();\n        return this.reshape([this.size]);\n    };\n    NDArray.prototype.as2D = function (rows, columns) {\n        this.throwIfDisposed();\n        return this.reshape([rows, columns]);\n    };\n    NDArray.prototype.as3D = function (rows, columns, depth) {\n        this.throwIfDisposed();\n        return this.reshape([rows, columns, depth]);\n    };\n    NDArray.prototype.as4D = function (rows, columns, depth, depth2) {\n        this.throwIfDisposed();\n        return this.reshape([rows, columns, depth, depth2]);\n    };\n    NDArray.prototype.asType = function (dtype) {\n        this.throwIfDisposed();\n        if (this.dtype === dtype) {\n            return this;\n        }\n        var vals = this.dataSync();\n        var newVals = toTypedArray(vals, dtype);\n        return NDArray.make(this.shape, { values: newVals }, dtype, this.math);\n    };\n    Object.defineProperty(NDArray.prototype, \"rank\", {\n        get: function () {\n            return this.shape.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NDArray.prototype.get = function () {\n        var locs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            locs[_i] = arguments[_i];\n        }\n        var index = locs[locs.length - 1];\n        for (var i = 0; i < locs.length - 1; ++i) {\n            index += this.strides[i] * locs[i];\n        }\n        return this.getValues()[index];\n    };\n    NDArray.prototype.add = function (value) {\n        var locs = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            locs[_i - 1] = arguments[_i];\n        }\n        this.set.apply(this, [this.get.apply(this, locs) + value].concat(locs));\n    };\n    NDArray.prototype.set = function (value) {\n        var locs = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            locs[_i - 1] = arguments[_i];\n        }\n        this.throwIfDisposed();\n        util.assert(locs.length === this.rank, \"The number of provided coordinates (\" + locs.length + \") must \" +\n            (\"match the rank (\" + this.rank + \")\"));\n        var index = locs.length > 0 ? locs[locs.length - 1] : 0;\n        for (var i = 0; i < locs.length - 1; ++i) {\n            index += this.strides[i] * locs[i];\n        }\n        var vals = this.getValues();\n        vals[index] = value;\n        this.math.write(this.id, vals, this.dtype, this.shape);\n    };\n    NDArray.prototype.val = function () {\n        var locs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            locs[_i] = arguments[_i];\n        }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.throwIfDisposed();\n                        return [4, this.data()];\n                    case 1:\n                        _a.sent();\n                        return [2, this.get.apply(this, locs)];\n                }\n            });\n        });\n    };\n    NDArray.prototype.locToIndex = function (locs) {\n        this.throwIfDisposed();\n        var index = locs[locs.length - 1];\n        for (var i = 0; i < locs.length - 1; ++i) {\n            index += this.strides[i] * locs[i];\n        }\n        return index;\n    };\n    NDArray.prototype.indexToLoc = function (index) {\n        this.throwIfDisposed();\n        var locs = new Array(this.shape.length);\n        for (var i = 0; i < locs.length - 1; ++i) {\n            locs[i] = Math.floor(index / this.strides[i]);\n            index -= locs[i] * this.strides[i];\n        }\n        locs[locs.length - 1] = index;\n        return locs;\n    };\n    NDArray.prototype.fill = function (value) {\n        this.throwIfDisposed();\n        var vals = this.getValues();\n        vals.fill(value);\n        this.math.write(this.id, vals, this.dtype, this.shape);\n    };\n    NDArray.prototype.getValues = function () {\n        return this.dataSync();\n    };\n    NDArray.prototype.getValuesAsync = function () {\n        return this.data();\n    };\n    NDArray.prototype.data = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.throwIfDisposed();\n                return [2, this.math.read(this.id)];\n            });\n        });\n    };\n    NDArray.prototype.dataSync = function () {\n        this.throwIfDisposed();\n        return this.math.readSync(this.id);\n    };\n    NDArray.prototype.dispose = function () {\n        this.isDisposed = true;\n        this.math.disposeData(this.id);\n    };\n    NDArray.prototype.equals = function (t) {\n        this.throwIfDisposed();\n        return this.dtype === t.dtype && util.arraysEqual(this.shape, t.shape) &&\n            util.arraysEqual(this.getValues(), t.getValues());\n    };\n    NDArray.rand = function (shape, randFunction, dtype) {\n        var size = util.sizeFromShape(shape);\n        var values = null;\n        if (dtype == null || dtype === 'float32') {\n            values = new Float32Array(size);\n        }\n        else if (dtype === 'int32') {\n            values = new Int32Array(size);\n        }\n        else if (dtype === 'bool') {\n            values = new Uint8Array(size);\n        }\n        else {\n            throw new Error(\"Unknown data type \" + dtype);\n        }\n        for (var i = 0; i < size; i++) {\n            values[i] = randFunction();\n        }\n        return NDArray.make(shape, { values: values }, dtype);\n    };\n    NDArray.randNormal = function (shape, mean, stdDev, dtype, seed) {\n        if (mean === void 0) { mean = 0; }\n        if (stdDev === void 0) { stdDev = 1; }\n        if (dtype != null && dtype === 'bool') {\n            throw new Error(\"Unsupported data type \" + dtype);\n        }\n        var randGauss = new rand_1.MPRandGauss(mean, stdDev, dtype, false, seed);\n        return NDArray.rand(shape, function () { return randGauss.nextValue(); }, dtype);\n    };\n    NDArray.randTruncatedNormal = function (shape, mean, stdDev, dtype, seed) {\n        if (mean === void 0) { mean = 0; }\n        if (stdDev === void 0) { stdDev = 1; }\n        if (dtype != null && dtype === 'bool') {\n            throw new Error(\"Unsupported data type \" + dtype);\n        }\n        var randGauss = new rand_1.MPRandGauss(mean, stdDev, dtype, true, seed);\n        return NDArray.rand(shape, function () { return randGauss.nextValue(); }, dtype);\n    };\n    NDArray.randUniform = function (shape, a, b, dtype) {\n        return NDArray.rand(shape, function () { return util.randUniform(a, b); }, dtype);\n    };\n    NDArray.prototype.throwIfDisposed = function () {\n        if (this.isDisposed) {\n            throw new Error(\"NDArray is disposed.\");\n        }\n    };\n    NDArray.nextId = 0;\n    return NDArray;\n}());\nexports.NDArray = NDArray;\nvar Scalar = (function (_super) {\n    __extends(Scalar, _super);\n    function Scalar() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Scalar.new = function (value, dtype) {\n        var values = [value];\n        return new Scalar([], dtype, toTypedArray(values, dtype));\n    };\n    Scalar.prototype.get = function () {\n        return this.getValues()[0];\n    };\n    Scalar.prototype.val = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, this.data()];\n                    case 1:\n                        _a.sent();\n                        return [2, this.get()];\n                }\n            });\n        });\n    };\n    Scalar.prototype.add = function (value) {\n        this.getValues()[0] += value;\n    };\n    Scalar.prototype.asType = function (dtype) {\n        return _super.prototype.asType.call(this, dtype);\n    };\n    Scalar.prototype.locToIndex = function (loc) {\n        return 0;\n    };\n    Scalar.prototype.indexToLoc = function (index) {\n        return [];\n    };\n    return Scalar;\n}(NDArray));\nexports.Scalar = Scalar;\nvar Array1D = (function (_super) {\n    __extends(Array1D, _super);\n    function Array1D() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Array1D.new = function (values, dtype) {\n        if (!instanceofTypedArray(values)) {\n            var inferredShape = util.inferShape(values);\n            util.assert(inferredShape.length === 1, \"Error constructing Array1D. Shape of values \" + inferredShape + \" is \" +\n                \"not 1 dimensional.\");\n        }\n        return new Array1D([values.length], dtype, toTypedArray(values, dtype));\n    };\n    Array1D.prototype.get = function (i) {\n        return this.getValues()[i];\n    };\n    Array1D.prototype.val = function (i) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, this.data()];\n                    case 1:\n                        _a.sent();\n                        return [2, this.get(i)];\n                }\n            });\n        });\n    };\n    Array1D.prototype.add = function (value, i) {\n        this.getValues()[i] += value;\n    };\n    Array1D.prototype.locToIndex = function (loc) {\n        return loc[0];\n    };\n    Array1D.prototype.indexToLoc = function (index) {\n        return [index];\n    };\n    Array1D.prototype.asType = function (dtype) {\n        return _super.prototype.asType.call(this, dtype);\n    };\n    Array1D.ones = function (shape, dtype) {\n        return NDArray.ones(shape, dtype);\n    };\n    Array1D.zeros = function (shape, dtype) {\n        return NDArray.zeros(shape, dtype);\n    };\n    Array1D.randNormal = function (shape, mean, stdDev, dtype, seed) {\n        if (mean === void 0) { mean = 0; }\n        if (stdDev === void 0) { stdDev = 1; }\n        if (dtype != null && dtype === 'bool') {\n            throw new Error(\"Unsupported data type \" + dtype);\n        }\n        var randGauss = new rand_1.MPRandGauss(mean, stdDev, dtype, false, seed);\n        return NDArray.rand(shape, function () { return randGauss.nextValue(); }, dtype);\n    };\n    Array1D.randTruncatedNormal = function (shape, mean, stdDev, dtype, seed) {\n        if (mean === void 0) { mean = 0; }\n        if (stdDev === void 0) { stdDev = 1; }\n        if (dtype != null && dtype === 'bool') {\n            throw new Error(\"Unsupported data type \" + dtype);\n        }\n        var randGauss = new rand_1.MPRandGauss(mean, stdDev, dtype, true, seed);\n        return NDArray.rand(shape, function () { return randGauss.nextValue(); }, dtype);\n    };\n    Array1D.randUniform = function (shape, a, b, dtype) {\n        return NDArray.rand(shape, function () { return util.randUniform(a, b); }, dtype);\n    };\n    return Array1D;\n}(NDArray));\nexports.Array1D = Array1D;\nvar Array2D = (function (_super) {\n    __extends(Array2D, _super);\n    function Array2D(shape, dtype, values, id, math) {\n        var _this = this;\n        util.assert(shape.length === 2, 'Shape should be of length 2');\n        _this = _super.call(this, shape, dtype, values, id, math) || this;\n        _this.stride0 = _this.strides[0];\n        return _this;\n    }\n    Array2D.new = function (shape, values, dtype) {\n        if (!instanceofTypedArray(values)) {\n            var inferredShape = util.inferShape(values);\n            if (inferredShape.length > 1) {\n                util.assertShapesMatch(shape, inferredShape, \"Error when constructing Array2D. Shape of values \" +\n                    (inferredShape + \" does not match the provided shape \") +\n                    (shape + \". \"));\n            }\n        }\n        return new Array2D(shape, dtype, toTypedArray(values, dtype));\n    };\n    Array2D.prototype.get = function (i, j) {\n        return this.getValues()[this.stride0 * i + j];\n    };\n    Array2D.prototype.add = function (value, i, j) {\n        this.getValues()[this.stride0 * i + j] += value;\n    };\n    Array2D.prototype.val = function (i, j) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, this.data()];\n                    case 1:\n                        _a.sent();\n                        return [2, this.get(i, j)];\n                }\n            });\n        });\n    };\n    Array2D.prototype.locToIndex = function (locs) {\n        return this.stride0 * locs[0] + locs[1];\n    };\n    Array2D.prototype.indexToLoc = function (index) {\n        return [Math.floor(index / this.stride0), index % this.stride0];\n    };\n    Array2D.prototype.asType = function (dtype) {\n        return _super.prototype.asType.call(this, dtype);\n    };\n    Array2D.ones = function (shape, dtype) {\n        return NDArray.ones(shape, dtype);\n    };\n    Array2D.zeros = function (shape, dtype) {\n        return NDArray.zeros(shape, dtype);\n    };\n    Array2D.randNormal = function (shape, mean, stdDev, dtype, seed) {\n        if (mean === void 0) { mean = 0; }\n        if (stdDev === void 0) { stdDev = 1; }\n        if (dtype != null && dtype === 'bool') {\n            throw new Error(\"Unsupported data type \" + dtype);\n        }\n        var randGauss = new rand_1.MPRandGauss(mean, stdDev, dtype, false, seed);\n        return NDArray.rand(shape, function () { return randGauss.nextValue(); }, dtype);\n    };\n    Array2D.randTruncatedNormal = function (shape, mean, stdDev, dtype, seed) {\n        if (mean === void 0) { mean = 0; }\n        if (stdDev === void 0) { stdDev = 1; }\n        if (dtype != null && dtype === 'bool') {\n            throw new Error(\"Unsupported data type \" + dtype);\n        }\n        var randGauss = new rand_1.MPRandGauss(mean, stdDev, dtype, true, seed);\n        return NDArray.rand(shape, function () { return randGauss.nextValue(); }, dtype);\n    };\n    Array2D.randUniform = function (shape, a, b, dtype) {\n        return NDArray.rand(shape, function () { return util.randUniform(a, b); }, dtype);\n    };\n    return Array2D;\n}(NDArray));\nexports.Array2D = Array2D;\nvar Array3D = (function (_super) {\n    __extends(Array3D, _super);\n    function Array3D(shape, dtype, values, id, math) {\n        var _this = this;\n        util.assert(shape.length === 3, 'Shape should be of length 3');\n        _this = _super.call(this, shape, dtype, values, id, math) || this;\n        _this.stride0 = _this.strides[0];\n        _this.stride1 = _this.strides[1];\n        return _this;\n    }\n    Array3D.new = function (shape, values, dtype) {\n        if (!instanceofTypedArray(values)) {\n            var inferredShape = util.inferShape(values);\n            if (inferredShape.length > 1) {\n                util.assertShapesMatch(shape, inferredShape, \"Error when constructing Array3D. Shape of values \" +\n                    (inferredShape + \" does not match the provided shape \") +\n                    (shape + \". \"));\n            }\n        }\n        return new Array3D(shape, dtype, toTypedArray(values, dtype));\n    };\n    Array3D.prototype.get = function (i, j, k) {\n        return this.getValues()[this.stride0 * i + this.stride1 * j + k];\n    };\n    Array3D.prototype.val = function (i, j, k) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, this.data()];\n                    case 1:\n                        _a.sent();\n                        return [2, this.get(i, j, k)];\n                }\n            });\n        });\n    };\n    Array3D.prototype.add = function (value, i, j, k) {\n        this.getValues()[this.stride0 * i + this.stride1 * j + k] += value;\n    };\n    Array3D.prototype.locToIndex = function (locs) {\n        return this.stride0 * locs[0] + this.stride1 * locs[1] + locs[2];\n    };\n    Array3D.prototype.indexToLoc = function (index) {\n        var i = Math.floor(index / this.stride0);\n        index -= i * this.stride0;\n        return [i, Math.floor(index / this.stride1), index % this.stride1];\n    };\n    Array3D.prototype.asType = function (dtype) {\n        return _super.prototype.asType.call(this, dtype);\n    };\n    Array3D.ones = function (shape, dtype) {\n        return NDArray.ones(shape, dtype);\n    };\n    Array3D.zeros = function (shape, dtype) {\n        return NDArray.zeros(shape, dtype);\n    };\n    Array3D.randNormal = function (shape, mean, stdDev, dtype, seed) {\n        if (mean === void 0) { mean = 0; }\n        if (stdDev === void 0) { stdDev = 1; }\n        if (dtype != null && dtype === 'bool') {\n            throw new Error(\"Unsupported data type \" + dtype);\n        }\n        var randGauss = new rand_1.MPRandGauss(mean, stdDev, dtype, false, seed);\n        return NDArray.rand(shape, function () { return randGauss.nextValue(); }, dtype);\n    };\n    Array3D.randTruncatedNormal = function (shape, mean, stdDev, dtype, seed) {\n        if (mean === void 0) { mean = 0; }\n        if (stdDev === void 0) { stdDev = 1; }\n        if (dtype != null && dtype === 'bool') {\n            throw new Error(\"Unsupported data type \" + dtype);\n        }\n        var randGauss = new rand_1.MPRandGauss(mean, stdDev, dtype, true, seed);\n        return NDArray.rand(shape, function () { return randGauss.nextValue(); }, dtype);\n    };\n    Array3D.randUniform = function (shape, a, b, dtype) {\n        return NDArray.rand(shape, function () { return util.randUniform(a, b); }, dtype);\n    };\n    return Array3D;\n}(NDArray));\nexports.Array3D = Array3D;\nvar Array4D = (function (_super) {\n    __extends(Array4D, _super);\n    function Array4D(shape, dtype, values, id, math) {\n        var _this = this;\n        util.assert(shape.length === 4, 'Shape should be of length 4');\n        _this = _super.call(this, shape, dtype, values, id, math) || this;\n        _this.stride0 = _this.strides[0];\n        _this.stride1 = _this.strides[1];\n        _this.stride2 = _this.strides[2];\n        return _this;\n    }\n    Array4D.new = function (shape, values, dtype) {\n        if (!instanceofTypedArray(values)) {\n            var inferredShape = util.inferShape(values);\n            if (inferredShape.length > 1) {\n                util.assertShapesMatch(shape, inferredShape, \"Error when constructing Array4D. Shape of values \" +\n                    (inferredShape + \" does not match the provided shape \") +\n                    (shape + \". \"));\n            }\n        }\n        return new Array4D(shape, dtype, toTypedArray(values, dtype));\n    };\n    Array4D.prototype.get = function (i, j, k, l) {\n        return this.getValues()[this.stride0 * i + this.stride1 * j + this.stride2 * k + l];\n    };\n    Array4D.prototype.val = function (i, j, k, l) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, this.data()];\n                    case 1:\n                        _a.sent();\n                        return [2, this.get(i, j, k, l)];\n                }\n            });\n        });\n    };\n    Array4D.prototype.add = function (value, i, j, k, l) {\n        this.getValues()[this.stride0 * i + this.stride1 * j + this.stride2 * k + l] += value;\n    };\n    Array4D.prototype.locToIndex = function (locs) {\n        return this.stride0 * locs[0] + this.stride1 * locs[1] +\n            this.stride2 * locs[2] + locs[3];\n    };\n    Array4D.prototype.indexToLoc = function (index) {\n        var i = Math.floor(index / this.stride0);\n        index -= i * this.stride0;\n        var j = Math.floor(index / this.stride1);\n        index -= j * this.stride1;\n        return [i, j, Math.floor(index / this.stride2), index % this.stride2];\n    };\n    Array4D.prototype.asType = function (dtype) {\n        return _super.prototype.asType.call(this, dtype);\n    };\n    Array4D.ones = function (shape, dtype) {\n        return NDArray.ones(shape, dtype);\n    };\n    Array4D.zeros = function (shape, dtype) {\n        return NDArray.zeros(shape, dtype);\n    };\n    Array4D.randNormal = function (shape, mean, stdDev, dtype, seed) {\n        if (mean === void 0) { mean = 0; }\n        if (stdDev === void 0) { stdDev = 1; }\n        if (dtype != null && dtype === 'bool') {\n            throw new Error(\"Unsupported data type \" + dtype);\n        }\n        var randGauss = new rand_1.MPRandGauss(mean, stdDev, dtype, false, seed);\n        return NDArray.rand(shape, function () { return randGauss.nextValue(); }, dtype);\n    };\n    Array4D.randTruncatedNormal = function (shape, mean, stdDev, dtype, seed) {\n        if (mean === void 0) { mean = 0; }\n        if (stdDev === void 0) { stdDev = 1; }\n        if (dtype != null && dtype === 'bool') {\n            throw new Error(\"Unsupported data type \" + dtype);\n        }\n        var randGauss = new rand_1.MPRandGauss(mean, stdDev, dtype, true, seed);\n        return NDArray.rand(shape, function () { return randGauss.nextValue(); }, dtype);\n    };\n    Array4D.randUniform = function (shape, a, b, dtype) {\n        return NDArray.rand(shape, function () { return util.randUniform(a, b); }, dtype);\n    };\n    return Array4D;\n}(NDArray));\nexports.Array4D = Array4D;\nfunction copyTypedArray(array, dtype) {\n    if (dtype == null || dtype === 'float32') {\n        return new Float32Array(array);\n    }\n    else if (dtype === 'int32') {\n        var vals = new Int32Array(array.length);\n        for (var i = 0; i < vals.length; ++i) {\n            var val = array[i];\n            if (util.isValNaN(val, 'int32')) {\n                vals[i] = util.getNaN('int32');\n            }\n            else {\n                vals[i] = val;\n            }\n        }\n        return vals;\n    }\n    else if (dtype === 'bool') {\n        var bool = new Uint8Array(array.length);\n        for (var i = 0; i < bool.length; ++i) {\n            var val = array[i];\n            if (util.isValNaN(val, 'bool')) {\n                bool[i] = util.getNaN('bool');\n            }\n            else if (Math.round(val) !== 0) {\n                bool[i] = 1;\n            }\n        }\n        return bool;\n    }\n    else {\n        throw new Error(\"Unknown data type \" + dtype);\n    }\n}\nfunction instanceofTypedArray(a) {\n    return a instanceof Float32Array || a instanceof Int32Array ||\n        a instanceof Uint8Array;\n}\nfunction noConversionNeeded(a, dtype) {\n    return (a instanceof Float32Array && dtype === 'float32') ||\n        (a instanceof Int32Array && dtype === 'int32') ||\n        (a instanceof Uint8Array && dtype === 'bool');\n}\nfunction toTypedArray(a, dtype) {\n    if (noConversionNeeded(a, dtype)) {\n        return a;\n    }\n    if (Array.isArray(a)) {\n        a = util.flatten(a);\n    }\n    return copyTypedArray(a, dtype);\n}\nfunction makeZerosTypedArray(size, dtype) {\n    if (dtype == null || dtype === 'float32') {\n        return new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        return new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        return new Uint8Array(size);\n    }\n    else {\n        throw new Error(\"Unknown data type \" + dtype);\n    }\n}\nfunction makeOnesTypedArray(size, dtype) {\n    var array = makeZerosTypedArray(size, dtype);\n    for (var i = 0; i < array.length; i++) {\n        array[i] = 1;\n    }\n    return array;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/ndarray.js\n// module id = BozM\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/define-property.js\n// module id = C4MV\n// module chunks = 0","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value);\n            if (domain) domain.exit();\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.promise.js\n// module id = CXw9\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"../../util\");\nvar graph_util = require(\"../graph_util\");\nvar op_1 = require(\"./op\");\nvar Subtract = (function (_super) {\n    __extends(Subtract, _super);\n    function Subtract(t1, t2, outTensor) {\n        var _this = _super.call(this) || this;\n        _this.t1 = t1;\n        _this.t2 = t2;\n        _this.outTensor = outTensor;\n        util.assert(util.sizeFromShape(t1.shape) === 1 ||\n            util.sizeFromShape(t2.shape) === 1 ||\n            util.arraysEqual(t1.shape, t2.shape), 'One of t1 or t2 must be a scalar, or t1 and t2 must have ' +\n            'the same shape');\n        return _this;\n    }\n    Subtract.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var t1 = inferenceArrays.get(this.t1);\n        var t2 = inferenceArrays.get(this.t2);\n        math.scope(function (keep) {\n            var result;\n            if (util.isScalarShape(t1.shape)) {\n                result = math.scalarMinusArray(t1, t2);\n            }\n            else if (util.isScalarShape(t2.shape)) {\n                result = math.arrayMinusScalar(t1, t2);\n            }\n            else {\n                result = math.subtract(t1, t2);\n            }\n            inferenceArrays.set(_this.outTensor, keep(result));\n        });\n    };\n    Subtract.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var dy = gradientArrays.get(this.outTensor);\n        math.scope(function () {\n            if (graph_util.shouldBackProp(_this.t1)) {\n                if (util.isScalarShape(_this.t1.shape)) {\n                    var sum = math.sum(dy);\n                    gradientArrays.add(_this.t1, sum);\n                }\n                else {\n                    gradientArrays.add(_this.t1, math.clone(dy));\n                }\n            }\n            if (graph_util.shouldBackProp(_this.t2)) {\n                if (util.isScalarShape(_this.t2.shape)) {\n                    var sum = math.sum(dy);\n                    var negSum = math.neg(sum);\n                    gradientArrays.add(_this.t2, negSum);\n                }\n                else {\n                    gradientArrays.add(_this.t2, math.neg(dy));\n                }\n            }\n        });\n    };\n    Subtract.prototype.dispose = function () {\n        if (this.dySizeScalar != null) {\n            this.dySizeScalar.dispose();\n        }\n    };\n    return Subtract;\n}(op_1.Operation));\nexports.Subtract = Subtract;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/ops/subtract.js\n// module id = CsGD\n// module chunks = 0","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_has.js\n// module id = D2L2\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Copy2DProgram = (function () {\n    function Copy2DProgram(srcNumCols, destNumCols) {\n        this.variableNames = ['source'];\n        this.outputShape = null;\n        this.userCode = \"\\n      uniform ivec2 sourceStart;\\n      uniform ivec2 destStart;\\n\\n      void main() {\\n        ivec2 destCoords = getOutputCoords() - destStart;\\n        int index = destCoords.x * \" + destNumCols + \" + destCoords.y;\\n        int r = index / \" + srcNumCols + \";\\n        ivec2 sourceCoords = sourceStart + ivec2(r, index - r * \" + srcNumCols + \");\\n        setOutput(getSource(sourceCoords.x, sourceCoords.y));\\n      }\\n    \";\n    }\n    Copy2DProgram.prototype.getCustomSetupFunc = function (sourceStart, destStart, destSize) {\n        return function (gpgpu, webGLProgram) {\n            gpgpu.setOutputMatrixWriteRegion(destStart[0], destSize[0], destStart[1], destSize[1]);\n            var sourceStartCRLoc = gpgpu.getUniformLocation(webGLProgram, 'sourceStart');\n            gpgpu.gl.uniform2i(sourceStartCRLoc, sourceStart[0], sourceStart[1]);\n            var destStartCRLoc = gpgpu.getUniformLocation(webGLProgram, 'destStart');\n            gpgpu.gl.uniform2i(destStartCRLoc, destStart[0], destStart[1]);\n        };\n    };\n    return Copy2DProgram;\n}());\nexports.Copy2DProgram = Copy2DProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/copy_gpu.js\n// module id = Di7A\n// module chunks = 0","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-step.js\n// module id = EGZi\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar seedrandom = require(\"seedrandom\");\nvar MPRandGauss = (function () {\n    function MPRandGauss(mean, stdDeviation, dtype, truncated, seed) {\n        this.mean = mean;\n        this.stdDev = stdDeviation;\n        this.dtype = dtype;\n        this.nextVal = NaN;\n        this.truncated = truncated;\n        if (this.truncated) {\n            this.upper = this.mean + this.stdDev * 2;\n            this.lower = this.mean - this.stdDev * 2;\n        }\n        var seedValue = seed ? seed : Math.random();\n        this.random = seedrandom.alea(seedValue.toString());\n    }\n    MPRandGauss.prototype.nextValue = function () {\n        if (!isNaN(this.nextVal)) {\n            var value = this.nextVal;\n            this.nextVal = NaN;\n            return value;\n        }\n        var resultX, resultY;\n        var isValid = false;\n        while (!isValid) {\n            var v1 = void 0, v2 = void 0, s = void 0;\n            do {\n                v1 = 2 * this.random() - 1;\n                v2 = 2 * this.random() - 1;\n                s = v1 * v1 + v2 * v2;\n            } while (s >= 1 || s === 0);\n            var mul = Math.sqrt(-2.0 * Math.log(s) / s);\n            resultX = this.mean + this.stdDev * v1 * mul;\n            resultY = this.mean + this.stdDev * v2 * mul;\n            if (!this.truncated || this.isValidTruncated(resultX)) {\n                isValid = true;\n            }\n        }\n        if (!this.truncated || this.isValidTruncated(resultY)) {\n            this.nextVal = this.convertValue(resultY);\n        }\n        return this.convertValue(resultX);\n    };\n    MPRandGauss.prototype.convertValue = function (value) {\n        if (this.dtype == null || this.dtype === 'float32') {\n            return value;\n        }\n        return Math.round(value);\n    };\n    MPRandGauss.prototype.isValidTruncated = function (value) {\n        return value <= this.upper && value >= this.lower;\n    };\n    return MPRandGauss;\n}());\nexports.MPRandGauss = MPRandGauss;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/rand.js\n// module id = EHtm\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar UnaryOpProgram = (function () {\n    function UnaryOpProgram(aShape, opSnippet) {\n        this.variableNames = ['A'];\n        this.outputShape = aShape;\n        this.userCode = \"\\n      float unaryOperation(float x) {\\n        \" + opSnippet + \"\\n      }\\n\\n      void main() {\\n        float x = getAAtOutCoords();\\n        float y = unaryOperation(x);\\n\\n        setOutput(y);\\n      }\\n    \";\n    }\n    return UnaryOpProgram;\n}());\nexports.UnaryOpProgram = UnaryOpProgram;\nexports.CHECK_NAN_SNIPPET = \"\\n  if (isNaN(x)) {\\n    return x;\\n  }\\n\";\nexports.ABS = \"\\n  return abs(x);\\n\";\nexports.RELU = exports.CHECK_NAN_SNIPPET + \"\\n  return (x < 0.0) ? 0.0 : x;\\n\";\nexports.ELU = \"\\n  return (x >= 0.0) ? x : (exp(x) - 1.0);\\n\";\nexports.ELU_DER = \"\\n  return (x >= 0.0) ? 1.0 : exp(x);\\n\";\nexports.SELU = \"\\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\\n  // see: https://arxiv.org/abs/1706.02515\\n  float scaleAlpha = 1.7580993408473768599402175208123;\\n  float scale = 1.0507009873554804934193349852946;\\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\\n\";\nfunction LEAKY_RELU(alpha) {\n    return \"\\n    return (x >= 0.0) ? x : \" + alpha + \" * x;\\n  \";\n}\nexports.LEAKY_RELU = LEAKY_RELU;\nfunction STEP(alpha) {\n    if (alpha === void 0) { alpha = 0.0; }\n    return exports.CHECK_NAN_SNIPPET + (\"\\n    return x > 0.0 ? 1.0 : float(\" + alpha + \");\\n  \");\n}\nexports.STEP = STEP;\nexports.NEG = \"\\n  return -x;\\n\";\nexports.CEIL = \"\\n  return ceil(x);\\n\";\nexports.FLOOR = \"\\n  return floor(x);\\n\";\nexports.EXP = \"\\n  return exp(x);\\n\";\nexports.LOG = \"\\n  return log(x);\\n\";\nexports.SQRT = exports.CHECK_NAN_SNIPPET + \"\\n  return sqrt(x);\\n\";\nexports.SIGMOID = \"\\n  return 1.0 / (1.0 + exp(-1.0 * x));\\n\";\nexports.SIN = exports.CHECK_NAN_SNIPPET + \"\\n  return sin(x);\\n\";\nexports.COS = exports.CHECK_NAN_SNIPPET + \"\\n  return cos(x);\\n\";\nexports.TAN = \"\\n  return tan(x);\\n\";\nexports.ASIN = exports.CHECK_NAN_SNIPPET + \"\\n  return asin(x);\\n\";\nexports.ACOS = exports.CHECK_NAN_SNIPPET + \"\\n  return acos(x);\\n\";\nexports.ATAN = exports.CHECK_NAN_SNIPPET + \"\\n  return atan(x);\\n\";\nexports.SINH = \"\\n  float e2x = exp(x);\\n  return (e2x - 1.0 / e2x) / 2.0;\\n\";\nexports.COSH = \"\\n  float e2x = exp(-x);\\n  return (e2x + 1.0 / e2x) / 2.0;\\n\";\nexports.TANH = \"\\n  float e2x = exp(-2.0 * abs(x));\\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\\n\";\nexports.SQUARE = \"\\n  return x * x;\\n\";\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/unaryop_gpu.js\n// module id = Emi9\n// module chunks = 0","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.promise.finally.js\n// module id = EqBC\n// module chunks = 0","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_is-object.js\n// module id = EqjI\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar KERNEL_METHODS = {\n    MatMul: function (backend, config) {\n        return backend.matMul(config.inputs.a, config.inputs.b, config.args.aOrientation, config.args.bOrientation);\n    },\n    Clone: function (backend, config) {\n        return backend.clone(config.inputs.x);\n    },\n    Slice1D: function (backend, config) {\n        return backend.slice1D(config.inputs.x, config.args.begin, config.args.size);\n    },\n    Slice2D: function (backend, config) {\n        return backend.slice2D(config.inputs.x, config.args.begin, config.args.size);\n    },\n    Slice3D: function (backend, config) {\n        return backend.slice3D(config.inputs.x, config.args.begin, config.args.size);\n    },\n    Slice4D: function (backend, config) {\n        return backend.slice4D(config.inputs.x, config.args.begin, config.args.size);\n    },\n    Concat1D: function (backend, config) {\n        return backend.concat1D(config.inputs.a, config.inputs.b);\n    },\n    Concat2D: function (backend, config) {\n        return backend.concat2D(config.inputs.a, config.inputs.b, config.args.axis);\n    },\n    Concat3D: function (backend, config) {\n        return backend.concat3D(config.inputs.a, config.inputs.b, config.args.axis);\n    },\n    Concat4D: function (backend, config) {\n        return backend.concat4D(config.inputs.a, config.inputs.b, config.args.axis);\n    },\n    Neg: function (backend, config) {\n        return backend.neg(config.inputs.x);\n    },\n    Add: function (backend, config) {\n        return backend.add(config.inputs.a, config.inputs.b);\n    },\n    Sub: function (backend, config) {\n        return backend.subtract(config.inputs.a, config.inputs.b);\n    },\n    Mul: function (backend, config) {\n        return backend.multiply(config.inputs.a, config.inputs.b);\n    },\n    Div: function (backend, config) {\n        return backend.divide(config.inputs.a, config.inputs.b);\n    },\n    Sum: function (backend, config) {\n        return backend.sum(config.inputs.x, config.args.axes);\n    },\n    ArgMax: function (backend, config) {\n        return backend.argMax(config.inputs.x, config.args.axes);\n    },\n    ArgMin: function (backend, config) {\n        return backend.argMin(config.inputs.x, config.args.axes);\n    },\n    Equal: function (backend, config) {\n        return backend.equal(config.inputs.a, config.inputs.b);\n    },\n    TopKValues: function (backend, config) {\n        return backend.topKValues(config.inputs.x, config.args.k);\n    },\n    TopKIndices: function (backend, config) {\n        return backend.topKIndices(config.inputs.x, config.args.k);\n    },\n    Min: function (backend, config) {\n        return backend.min(config.inputs.x, config.args.axes);\n    },\n    Max: function (backend, config) {\n        return backend.max(config.inputs.x, config.args.axes);\n    },\n    Ceil: function (backend, config) {\n        return backend.ceil(config.inputs.x);\n    },\n    Floor: function (backend, config) {\n        return backend.floor(config.inputs.x);\n    },\n    Pow: function (backend, config) {\n        return backend.pow(config.inputs.a, config.inputs.b);\n    },\n    Exp: function (backend, config) {\n        return backend.exp(config.inputs.x);\n    },\n    Log: function (backend, config) {\n        return backend.log(config.inputs.x);\n    },\n    Sqrt: function (backend, config) {\n        return backend.sqrt(config.inputs.x);\n    },\n    Square: function (backend, config) {\n        return backend.square(config.inputs.x);\n    },\n    Relu: function (backend, config) {\n        return backend.relu(config.inputs.x);\n    },\n    LeakyRelu: function (backend, config) {\n        return backend.leakyRelu(config.inputs.x, config.args.alpha);\n    },\n    PReLU: function (backend, config) {\n        return backend.prelu(config.inputs.x, config.inputs.alpha);\n    },\n    PReLUDer: function (backend, config) {\n        return backend.preluDer(config.inputs.x, config.inputs.alpha);\n    },\n    Elu: function (backend, config) {\n        return backend.elu(config.inputs.x);\n    },\n    EluDer: function (backend, config) {\n        return backend.eluDer(config.inputs.x);\n    },\n    Selu: function (backend, config) {\n        return backend.selu(config.inputs.x);\n    },\n    Abs: function (backend, config) {\n        return backend.abs(config.inputs.x);\n    },\n    Sigmoid: function (backend, config) {\n        return backend.sigmoid(config.inputs.x);\n    },\n    Step: function (backend, config) {\n        return backend.step(config.inputs.x, config.args.alpha);\n    },\n    Sin: function (backend, config) {\n        return backend.sin(config.inputs.x);\n    },\n    Cos: function (backend, config) {\n        return backend.cos(config.inputs.x);\n    },\n    Tan: function (backend, config) {\n        return backend.tan(config.inputs.x);\n    },\n    Asin: function (backend, config) {\n        return backend.asin(config.inputs.x);\n    },\n    Acos: function (backend, config) {\n        return backend.acos(config.inputs.x);\n    },\n    Atan: function (backend, config) {\n        return backend.atan(config.inputs.x);\n    },\n    Sinh: function (backend, config) {\n        return backend.sinh(config.inputs.x);\n    },\n    Cosh: function (backend, config) {\n        return backend.cosh(config.inputs.x);\n    },\n    Tanh: function (backend, config) {\n        return backend.tanh(config.inputs.x);\n    },\n    Clip: function (backend, config) {\n        return backend.clip(config.inputs.x, config.args.min, config.args.max);\n    },\n    Transpose: function (backend, config) {\n        return backend.transpose(config.inputs.x, config.args.perm);\n    },\n    Tile: function (backend, config) {\n        return backend.tile(config.inputs.x, config.args.reps);\n    },\n    Conv2D: function (backend, config) {\n        return backend.conv2d(config.inputs.x, config.inputs.filter, config.inputs.bias, config.args.convInfo);\n    },\n    Conv2DDerInput: function (backend, config) {\n        return backend.conv2dDerInput(config.inputs.dy, config.inputs.filter, config.args.convInfo);\n    },\n    Conv2DDerFilter: function (backend, config) {\n        return backend.conv2dDerFilter(config.inputs.x, config.inputs.dy, config.args.convInfo);\n    },\n    Conv2DDerBias: function (backend, config) {\n        return backend.conv2dDerBias(config.inputs.dy);\n    },\n    DepthwiseConv2D: function (backend, config) {\n        return backend.depthwiseConv2D(config.inputs.x, config.inputs.filter, config.args.convInfo);\n    },\n    MaxPool: function (backend, config) {\n        return backend.maxPool(config.inputs.x, config.args.convInfo);\n    },\n    MaxPoolBackprop: function (backend, config) {\n        return backend.maxPoolBackprop(config.inputs.dy, config.inputs.x, config.args.convInfo);\n    },\n    AvgPool: function (backend, config) {\n        return backend.avgPool(config.inputs.x, config.args.convInfo);\n    },\n    MinPool: function (backend, config) {\n        return backend.minPool(config.inputs.x, config.args.convInfo);\n    },\n    ResizeBilinear3D: function (backend, config) {\n        return backend.resizeBilinear3D(config.inputs.x, config.args.newShape2D, config.args.alignCorners);\n    },\n    BatchNorm3D: function (backend, config) {\n        return backend.batchNormalization3D(config.inputs.x, config.inputs.mean, config.inputs.variance, config.args.varianceEpsilon, config.inputs.scale, config.inputs.offset);\n    },\n    BatchNorm2D: function (backend, config) {\n        return backend.batchNormalization2D(config.inputs.x, config.inputs.mean, config.inputs.variance, config.args.varianceEpsilon, config.inputs.scale, config.inputs.offset);\n    },\n    Multinomial: function (backend, config) {\n        return backend.multinomial(config.inputs.probs, config.args.numSamples, config.args.seed);\n    },\n    OneHot: function (backend, config) {\n        return backend.oneHot(config.inputs.indices, config.args.depth, config.args.onValue, config.args.offValue);\n    }\n};\nfunction executeKernel(backend, kernelName, config) {\n    return KERNEL_METHODS[kernelName](backend, config);\n}\nexports.executeKernel = executeKernel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/kernel_registry.js\n// module id = FHsp\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TensorArrayMapBase = (function () {\n    function TensorArrayMapBase() {\n        this.dict = {};\n    }\n    TensorArrayMapBase.prototype.get = function (tensor, skipChecks) {\n        if (skipChecks === void 0) { skipChecks = false; }\n        if (!skipChecks && this.dict[tensor.id] === undefined) {\n            throw new Error(\"tensor \" + tensor.id + \" not in array map.\");\n        }\n        var nda = this.dict[tensor.id];\n        if (!skipChecks && nda === null) {\n            throw new Error(\"tensor \" + tensor.id + \" has null array.\");\n        }\n        return nda;\n    };\n    TensorArrayMapBase.prototype.delete = function (tensor) {\n        delete this.dict[tensor.id];\n    };\n    TensorArrayMapBase.prototype.nullify = function (tensor) {\n        this.dict[tensor.id] = null;\n    };\n    TensorArrayMapBase.prototype.disposeArray = function (tensor) {\n        if (this.dict[tensor.id] === undefined) {\n            return;\n        }\n        var nda = this.dict[tensor.id];\n        if (nda === null) {\n            return;\n        }\n        nda.dispose();\n        this.dict[tensor.id] = null;\n    };\n    TensorArrayMapBase.prototype.size = function () {\n        return Object.keys(this.dict).length;\n    };\n    TensorArrayMapBase.prototype.dispose = function () {\n        var _this = this;\n        Object.keys(this.dict).forEach(function (tensorID) {\n            var nda = _this.dict[+tensorID];\n            if (nda) {\n                nda.dispose();\n            }\n        });\n        this.dict = {};\n    };\n    TensorArrayMapBase.prototype.hasNullArray = function (tensor) {\n        if (this.dict[tensor.id] === undefined) {\n            throw new Error(\"tensor \" + tensor.id + \" not in array map.\");\n        }\n        return this.dict[tensor.id] === null;\n    };\n    return TensorArrayMapBase;\n}());\nexports.TensorArrayMapBase = TensorArrayMapBase;\nvar TensorArrayMap = (function (_super) {\n    __extends(TensorArrayMap, _super);\n    function TensorArrayMap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TensorArrayMap.prototype.set = function (tensor, array) {\n        this.dict[tensor.id] = array;\n    };\n    return TensorArrayMap;\n}(TensorArrayMapBase));\nexports.TensorArrayMap = TensorArrayMap;\nvar SummedTensorArrayMap = (function (_super) {\n    __extends(SummedTensorArrayMap, _super);\n    function SummedTensorArrayMap(math) {\n        var _this = _super.call(this) || this;\n        _this.math = math;\n        return _this;\n    }\n    SummedTensorArrayMap.prototype.add = function (tensor, array) {\n        if (this.dict[tensor.id] == null) {\n            this.dict[tensor.id] = this.math.keep(array);\n        }\n        else {\n            var oldValue = this.get(tensor);\n            var newValue = this.math.keep(this.math.addStrict(oldValue, array));\n            this.dict[tensor.id] = newValue;\n            oldValue.dispose();\n        }\n    };\n    return SummedTensorArrayMap;\n}(TensorArrayMapBase));\nexports.SummedTensorArrayMap = SummedTensorArrayMap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/tensor_array_map.js\n// module id = FSI1\n// module chunks = 0","var core = module.exports = { version: '2.5.3' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_core.js\n// module id = FeBl\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = require(\"../../math/ndarray\");\nvar tensor_array_map_1 = require(\"../tensor_array_map\");\nvar optimizer_1 = require(\"./optimizer\");\nvar AdamOptimizer = (function (_super) {\n    __extends(AdamOptimizer, _super);\n    function AdamOptimizer(learningRate, beta1, beta2, specifiedVariableList) {\n        var _this = _super.call(this, learningRate, specifiedVariableList) || this;\n        _this.learningRate = learningRate;\n        _this.beta1 = beta1;\n        _this.beta2 = beta2;\n        _this.firstMoment = new tensor_array_map_1.TensorArrayMap();\n        _this.secondMoment = new tensor_array_map_1.TensorArrayMap();\n        _this.eps = ndarray_1.Scalar.new(1e-8);\n        _this.b1 = ndarray_1.Scalar.new(_this.beta1);\n        _this.b2 = ndarray_1.Scalar.new(_this.beta2);\n        _this.accB1 = ndarray_1.Scalar.new(_this.beta1);\n        _this.accB2 = ndarray_1.Scalar.new(_this.beta2);\n        return _this;\n    }\n    AdamOptimizer.prototype.beforeBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        _super.prototype.beforeBatch.call(this, math, batchSize, runtime, activationArrayMap, gradientArrayMap);\n        if (this.firstMoment.size() === 0) {\n            this.variableNodes.forEach(function (node) {\n                _this.firstMoment.set(node.output, ndarray_1.NDArray.zeros(node.output.shape));\n            });\n        }\n        if (this.secondMoment.size() === 0) {\n            this.variableNodes.forEach(function (node) {\n                _this.secondMoment.set(node.output, ndarray_1.NDArray.zeros(node.output.shape));\n            });\n        }\n    };\n    AdamOptimizer.prototype.afterBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        math.scope(function (keep) {\n            _this.variableNodes.forEach(function (node) {\n                var oldVariable = activationArrayMap.get(node.output);\n                var gradient = _this.variableGradients.get(node.output);\n                var oldFirstMoment = _this.firstMoment.get(node.output);\n                var oldSecondMoment = _this.secondMoment.get(node.output);\n                var newFirstMoment = math.scaledArrayAdd(_this.b1, oldFirstMoment, math.subtract(_this.one, _this.b1), gradient);\n                var gradientSquare = math.multiply(gradient, gradient);\n                var newSecondMoment = math.scaledArrayAdd(_this.b2, oldSecondMoment, math.subtract(_this.one, _this.b2), gradientSquare);\n                var biasCorrectedFirstMoment = math.divide(newFirstMoment, math.subtract(_this.one, _this.accB1));\n                var biasCorrectedSecondMoment = math.divide(newSecondMoment, math.subtract(_this.one, _this.accB2));\n                var variable = math.scaledArrayAdd(_this.c, math.divide(biasCorrectedFirstMoment, math.add(math.sqrt(biasCorrectedSecondMoment), _this.eps)), _this.one, oldVariable);\n                activationArrayMap.set(node.output, keep(variable));\n                node.data = variable;\n                _this.firstMoment.set(node.output, keep(newFirstMoment));\n                _this.secondMoment.set(node.output, keep(newSecondMoment));\n                oldVariable.dispose();\n                gradient.dispose();\n                oldFirstMoment.dispose();\n                oldSecondMoment.dispose();\n            });\n            var oldAccB1 = _this.accB1;\n            var oldAccB2 = _this.accB2;\n            _this.accB1 = keep(math.multiply(_this.accB1, _this.b1));\n            _this.accB2 = keep(math.multiply(_this.accB2, _this.b2));\n            oldAccB1.dispose();\n            oldAccB2.dispose();\n        });\n        this.variableGradients.dispose();\n        this.variableGradients = new tensor_array_map_1.TensorArrayMap();\n    };\n    AdamOptimizer.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.firstMoment.dispose();\n        this.secondMoment.dispose();\n        this.eps.dispose();\n        this.b1.dispose();\n        this.b2.dispose();\n        this.accB1.dispose();\n        this.accB2.dispose();\n    };\n    return AdamOptimizer;\n}(optimizer_1.Optimizer));\nexports.AdamOptimizer = AdamOptimizer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/optimizers/adam_optimizer.js\n// module id = FjvL\n// module chunks = 0","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/seedrandom/index.js\n// module id = H/Ud\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isMobile() {\n    var a = navigator.userAgent || navigator.vendor || window.opera;\n    return /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i\n        .test(a) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i\n            .test(a.substr(0, 4));\n}\nexports.isMobile = isMobile;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/device_util.js\n// module id = H24h\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar conv_util = require(\"../../math/conv_util\");\nvar util = require(\"../../util\");\nvar op_1 = require(\"./op\");\nvar MaxPool = (function (_super) {\n    __extends(MaxPool, _super);\n    function MaxPool(xTensor, yTensor, fieldSize, stride, pad) {\n        if (stride === void 0) { stride = 1; }\n        var _this = _super.call(this) || this;\n        _this.xTensor = xTensor;\n        _this.yTensor = yTensor;\n        _this.fieldSize = fieldSize;\n        _this.stride = stride;\n        if (pad != null) {\n            _this.pad = pad;\n        }\n        else {\n            _this.pad = conv_util.computeDefaultPad(xTensor.shape, _this.fieldSize, _this.stride);\n        }\n        util.assert(util.isInt(_this.pad), \"The zero padding (\" + _this.pad + \") must be an integer. Change the \" +\n            \"stride and/or zero pad parameters\");\n        return _this;\n    }\n    MaxPool.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x = inferenceArrays.get(this.xTensor);\n        math.scope(function (keep) {\n            inferenceArrays.set(_this.yTensor, keep(math.maxPool(x, _this.fieldSize, _this.stride, _this.pad)));\n        });\n    };\n    MaxPool.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var x = inferenceArrays.get(this.xTensor);\n        var dy = gradientArrays.get(this.yTensor);\n        math.scope(function () {\n            gradientArrays.add(_this.xTensor, math.maxPoolBackprop(dy, x, _this.fieldSize, _this.stride, _this.pad));\n        });\n    };\n    return MaxPool;\n}(op_1.Operation));\nexports.MaxPool = MaxPool;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/ops/max_pool.js\n// module id = HHSQ\n// module chunks = 0","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-keys-internal.js\n// module id = Ibhu\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SumTypesMap;\n(function (SumTypesMap) {\n    SumTypesMap[\"float32\"] = \"float32\";\n    SumTypesMap[\"int32\"] = \"int32\";\n    SumTypesMap[\"bool\"] = \"int32\";\n})(SumTypesMap = exports.SumTypesMap || (exports.SumTypesMap = {}));\nvar UpcastInt32AndMap;\n(function (UpcastInt32AndMap) {\n    UpcastInt32AndMap[\"float32\"] = \"float32\";\n    UpcastInt32AndMap[\"int32\"] = \"int32\";\n    UpcastInt32AndMap[\"bool\"] = \"int32\";\n})(UpcastInt32AndMap = exports.UpcastInt32AndMap || (exports.UpcastInt32AndMap = {}));\nvar UpcastBoolAndMap;\n(function (UpcastBoolAndMap) {\n    UpcastBoolAndMap[\"float32\"] = \"float32\";\n    UpcastBoolAndMap[\"int32\"] = \"int32\";\n    UpcastBoolAndMap[\"bool\"] = \"bool\";\n})(UpcastBoolAndMap = exports.UpcastBoolAndMap || (exports.UpcastBoolAndMap = {}));\nvar UpcastFloat32AndMap;\n(function (UpcastFloat32AndMap) {\n    UpcastFloat32AndMap[\"float32\"] = \"float32\";\n    UpcastFloat32AndMap[\"int32\"] = \"float32\";\n    UpcastFloat32AndMap[\"bool\"] = \"float32\";\n})(UpcastFloat32AndMap = exports.UpcastFloat32AndMap || (exports.UpcastFloat32AndMap = {}));\nvar upcastTypeMap = {\n    float32: UpcastFloat32AndMap,\n    int32: UpcastInt32AndMap,\n    bool: UpcastBoolAndMap\n};\nfunction upcastType(typeA, typeB) {\n    return upcastTypeMap[typeA][typeB];\n}\nexports.upcastType = upcastType;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/types.js\n// module id = KCc1\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = require(\"../../math/ndarray\");\nvar tensor_array_map_1 = require(\"../tensor_array_map\");\nvar sgd_optimizer_1 = require(\"./sgd_optimizer\");\nvar MomentumOptimizer = (function (_super) {\n    __extends(MomentumOptimizer, _super);\n    function MomentumOptimizer(learningRate, momentum, specifiedVariableList) {\n        var _this = _super.call(this, learningRate, specifiedVariableList) || this;\n        _this.learningRate = learningRate;\n        _this.momentum = momentum;\n        _this.variableVelocities = new tensor_array_map_1.TensorArrayMap();\n        _this.m = ndarray_1.Scalar.new(_this.momentum);\n        return _this;\n    }\n    MomentumOptimizer.prototype.beforeBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        _super.prototype.beforeBatch.call(this, math, batchSize, runtime, activationArrayMap, gradientArrayMap);\n        if (this.variableVelocities.size() === 0) {\n            this.variableNodes.forEach(function (node) {\n                _this.variableVelocities.set(node.output, ndarray_1.NDArray.zeros(node.output.shape));\n            });\n        }\n    };\n    MomentumOptimizer.prototype.afterBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        math.scope(function (keep) {\n            _this.variableNodes.forEach(function (node) {\n                var oldVariable = activationArrayMap.get(node.output);\n                var gradient = _this.variableGradients.get(node.output);\n                var oldVelocity = _this.variableVelocities.get(node.output);\n                var velocity = math.scaledArrayAdd(_this.m, oldVelocity, _this.one, gradient);\n                var variable = math.scaledArrayAdd(_this.c, velocity, _this.one, oldVariable);\n                _this.variableVelocities.set(node.output, keep(velocity));\n                activationArrayMap.set(node.output, keep(variable));\n                node.data = variable;\n                oldVariable.dispose();\n                oldVelocity.dispose();\n            });\n        });\n        this.variableGradients.dispose();\n        this.variableGradients = new tensor_array_map_1.TensorArrayMap();\n    };\n    MomentumOptimizer.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.m.dispose();\n        this.variableVelocities.dispose();\n    };\n    MomentumOptimizer.prototype.setMomentum = function (momentum) {\n        this.momentum = momentum;\n    };\n    return MomentumOptimizer;\n}(sgd_optimizer_1.SGDOptimizer));\nexports.MomentumOptimizer = MomentumOptimizer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/optimizers/momentum_optimizer.js\n// module id = KFeC\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar concat_util = require(\"../../concat_util\");\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar ConcatProgram = (function () {\n    function ConcatProgram(aShape, bShape, axis) {\n        this.variableNames = ['A', 'B'];\n        this.outputShape = [];\n        var yAxes = ['yR', 'yC', 'yD', 'yW'];\n        var concatAxis = yAxes[axis];\n        this.outputShape = concat_util.computeOutShape(aShape, bShape, axis);\n        var dType = shader_compiler_1.getCoordsDataType(aShape.length);\n        var unpackSnippet = getUnpack(aShape.length);\n        var sampleCoords = getSampleCoords(aShape.length);\n        this.userCode = \"\\n      void main() {\\n        \" + dType + \" coords = getOutputCoords();\\n        \" + unpackSnippet + \"\\n\\n        float value = 0.0;\\n        if (\" + concatAxis + \" < \" + aShape[axis] + \") {\\n          value = getA(\" + sampleCoords + \");\\n        } else {\\n          \" + concatAxis + \" -= \" + aShape[axis] + \";\\n          value = getB(\" + sampleCoords + \");\\n        }\\n\\n        setOutput(value);\\n      }\\n    \";\n    }\n    return ConcatProgram;\n}());\nexports.ConcatProgram = ConcatProgram;\nfunction getSampleCoords(rank) {\n    if (rank === 1) {\n        return 'yR';\n    }\n    else if (rank === 2) {\n        return 'yR, yC';\n    }\n    else if (rank === 3) {\n        return 'yR, yC, yD';\n    }\n    else if (rank === 4) {\n        return 'yR, yC, yD, yW';\n    }\n    else {\n        throw Error(\"Concat for rank \" + rank + \" is not yet supported\");\n    }\n}\nfunction getUnpack(rank) {\n    var res = rank === 1 ? 'int yR = coords;' : 'int yR = coords.x;';\n    if (rank > 1) {\n        res += '\\nint yC = coords.y;';\n    }\n    if (rank > 2) {\n        res += '\\nint yD = coords.z;';\n    }\n    if (rank > 3) {\n        res += '\\nint yW = coords.w;';\n    }\n    if (rank > 4) {\n        throw Error(\"Concat for rank \" + rank + \" is not yet supported\");\n    }\n    return res;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/concat_gpu.js\n// module id = KOOB\n// module chunks = 0","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_task.js\n// module id = L42u\n// module chunks = 0","module.exports = function() {\r\n\tthrow new Error(\"define cannot be used indirect\");\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-define.js\n// module id = LGuY\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graph_util = require(\"../graph_util\");\nvar op_1 = require(\"./op\");\nvar LinearCombination = (function (_super) {\n    __extends(LinearCombination, _super);\n    function LinearCombination(x1Tensor, x2Tensor, c1Tensor, c2Tensor, outTensor) {\n        var _this = _super.call(this) || this;\n        _this.x1Tensor = x1Tensor;\n        _this.x2Tensor = x2Tensor;\n        _this.c1Tensor = c1Tensor;\n        _this.c2Tensor = c2Tensor;\n        _this.outTensor = outTensor;\n        return _this;\n    }\n    LinearCombination.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x1 = inferenceArrays.get(this.x1Tensor);\n        var x2 = inferenceArrays.get(this.x2Tensor);\n        var c1 = inferenceArrays.get(this.c1Tensor).asScalar();\n        var c2 = inferenceArrays.get(this.c2Tensor).asScalar();\n        math.scope(function (keep) {\n            inferenceArrays.set(_this.outTensor, keep(math.scaledArrayAdd(c1, x1, c2, x2)));\n        });\n    };\n    LinearCombination.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var x1 = inferenceArrays.get(this.x1Tensor);\n        var x2 = inferenceArrays.get(this.x2Tensor);\n        var c1 = inferenceArrays.get(this.c1Tensor);\n        var c2 = inferenceArrays.get(this.c2Tensor);\n        var dy = gradientArrays.get(this.outTensor);\n        math.scope(function () {\n            if (graph_util.shouldBackProp(_this.x1Tensor)) {\n                gradientArrays.add(_this.x1Tensor, math.scalarTimesArray(c1, dy));\n            }\n            if (graph_util.shouldBackProp(_this.x2Tensor)) {\n                gradientArrays.add(_this.x2Tensor, math.scalarTimesArray(c2, dy));\n            }\n            if (graph_util.shouldBackProp(_this.c1Tensor)) {\n                var dotProduct1 = math.elementWiseMul(x1, dy);\n                gradientArrays.add(_this.c1Tensor, math.sum(dotProduct1));\n            }\n            if (graph_util.shouldBackProp(_this.c2Tensor)) {\n                var dotProduct2 = math.elementWiseMul(x2, dy);\n                gradientArrays.add(_this.c2Tensor, math.sum(dotProduct2));\n            }\n        });\n    };\n    return LinearCombination;\n}(op_1.Operation));\nexports.LinearCombination = LinearCombination;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/ops/linear_combination.js\n// module id = LUqz\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"../util\");\nfunction assertParamsValid(input, begin, size) {\n    util.assert(input.rank === begin.length, \"Error in slice\" + input.rank + \"D: Length of begin \" + begin + \" must \" +\n        (\"match the rank of the array (\" + input.rank + \").\"));\n    util.assert(input.rank === size.length, \"Error in slice\" + input.rank + \"D: Length of size \" + size + \" must \" +\n        (\"match the rank of the array (\" + input.rank + \").\"));\n    for (var i = 0; i < input.rank; ++i) {\n        util.assert(begin[i] + size[i] <= input.shape[i], \"Error in slice\" + input.rank + \"D: begin[\" + i + \"] + size[\" + i + \"] \" +\n            (\"(\" + (begin[i] + size[i]) + \") would overflow input.shape[\" + i + \"] (\" + input.shape[i] + \")\"));\n    }\n}\nexports.assertParamsValid = assertParamsValid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/slice_util.js\n// module id = LWEw\n// module chunks = 0","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../../../environment\");\nvar tex_util = require(\"./tex_util\");\nvar webgl_util = require(\"./webgl_util\");\nfunction getWebGLContextAttributes() {\n    return {\n        alpha: false,\n        antialias: false,\n        premultipliedAlpha: false,\n        preserveDrawingBuffer: false,\n        depth: false,\n        stencil: false,\n        failIfMajorPerformanceCaveat: true\n    };\n}\nexports.getWebGLContextAttributes = getWebGLContextAttributes;\nfunction createWebGLContext(canvas) {\n    var attributes = getWebGLContextAttributes();\n    var gl;\n    if (canvas != null) {\n        gl = webgl_util.createWebGLRenderingContextFromCanvas(canvas, attributes);\n    }\n    else {\n        gl = webgl_util.createWebGLRenderingContext(attributes);\n    }\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.DEPTH_TEST); });\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.STENCIL_TEST); });\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.BLEND); });\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.DITHER); });\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.POLYGON_OFFSET_FILL); });\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.SAMPLE_COVERAGE); });\n    webgl_util.callAndCheck(gl, function () { return gl.enable(gl.SCISSOR_TEST); });\n    webgl_util.callAndCheck(gl, function () { return gl.enable(gl.CULL_FACE); });\n    webgl_util.callAndCheck(gl, function () { return gl.cullFace(gl.BACK); });\n    return gl;\n}\nexports.createWebGLContext = createWebGLContext;\nfunction createVertexShader(gl) {\n    var vertexShaderSource = \"\\n    precision highp float;\\n    attribute vec3 clipSpacePos;\\n    attribute vec2 uv;\\n    varying vec2 resultUV;\\n\\n    void main() {\\n      gl_Position = vec4(clipSpacePos, 1);\\n      resultUV = uv;\\n    }\";\n    return webgl_util.createVertexShader(gl, vertexShaderSource);\n}\nexports.createVertexShader = createVertexShader;\nfunction createVertexBuffer(gl) {\n    var vertexArray = new Float32Array([-1, 1, 0, 0, 1, -1, -1, 0, 0, 0, 1, 1, 0, 1, 1, 1, -1, 0, 1, 0]);\n    return webgl_util.createStaticVertexBuffer(gl, vertexArray);\n}\nexports.createVertexBuffer = createVertexBuffer;\nfunction createIndexBuffer(gl) {\n    var triangleVertexIndices = new Uint16Array([0, 1, 2, 2, 1, 3]);\n    return webgl_util.createStaticIndexBuffer(gl, triangleVertexIndices);\n}\nexports.createIndexBuffer = createIndexBuffer;\nfunction getTextureInternalFormat(gl, numChannels) {\n    if (!environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED')) {\n        return gl.RGBA;\n    }\n    if (environment_1.ENV.get('WEBGL_VERSION') === 2) {\n        if (numChannels === 4) {\n            return gl.RGBA32F;\n        }\n        return gl.R32F;\n    }\n    return gl.RGBA;\n}\nfunction getTextureFormat(gl, numChannels) {\n    if (!environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED')) {\n        return gl.RGBA;\n    }\n    if (environment_1.ENV.get('WEBGL_VERSION') === 2) {\n        if (numChannels === 4) {\n            return gl.RGBA;\n        }\n        return gl.RED;\n    }\n    return gl.RGBA;\n}\nfunction getTextureType(gl) {\n    if (!environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED')) {\n        return gl.UNSIGNED_BYTE;\n    }\n    return gl.FLOAT;\n}\nfunction createAndConfigureTexture(gl, width, height, numChannels) {\n    webgl_util.validateTextureSize(gl, width, height);\n    var texture = webgl_util.createTexture(gl);\n    var tex2d = gl.TEXTURE_2D;\n    var internalFormat = getTextureInternalFormat(gl, numChannels);\n    var format = getTextureFormat(gl, numChannels);\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(tex2d, texture); });\n    webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE); });\n    webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE); });\n    webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_MIN_FILTER, gl.NEAREST); });\n    webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_MAG_FILTER, gl.NEAREST); });\n    webgl_util.callAndCheck(gl, function () { return gl.texImage2D(tex2d, 0, internalFormat, width, height, 0, format, getTextureType(gl), null); });\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\n    return texture;\n}\nfunction createMatrixTexture(gl, rows, columns) {\n    var _a = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns), width = _a[0], height = _a[1];\n    var numChannels = 1;\n    return createAndConfigureTexture(gl, width, height, numChannels);\n}\nexports.createMatrixTexture = createMatrixTexture;\nfunction createColorMatrixTexture(gl, rows, columns) {\n    var _a = tex_util.getColorMatrixTextureShapeWidthHeight(rows, columns), width = _a[0], height = _a[1];\n    var numChannels = 4;\n    return createAndConfigureTexture(gl, width, height, numChannels);\n}\nexports.createColorMatrixTexture = createColorMatrixTexture;\nfunction createPackedMatrixTexture(gl, rows, columns) {\n    var _a = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns), width = _a[0], height = _a[1];\n    var numChannels = 4;\n    return createAndConfigureTexture(gl, width, height, numChannels);\n}\nexports.createPackedMatrixTexture = createPackedMatrixTexture;\nfunction bindVertexProgramAttributeStreams(gl, program, vertexBuffer, attribLocations) {\n    var posOffset = 0;\n    var uvOffset = 3 * 4;\n    var stride = (3 * 4) + (2 * 4);\n    webgl_util.callAndCheck(gl, function () { return gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer); });\n    webgl_util.bindVertexBufferToProgramAttribute(gl, program, 'clipSpacePos', vertexBuffer, 3, stride, posOffset, attribLocations);\n    webgl_util.bindVertexBufferToProgramAttribute(gl, program, 'uv', vertexBuffer, 2, stride, uvOffset, attribLocations);\n}\nexports.bindVertexProgramAttributeStreams = bindVertexProgramAttributeStreams;\nfunction uploadPixelDataToTexture(gl, texture, pixels) {\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, texture); });\n    webgl_util.callAndCheck(gl, function () { return gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, pixels); });\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\n}\nexports.uploadPixelDataToTexture = uploadPixelDataToTexture;\nfunction uploadDataToTexture(gl, texture, width, height, data, numChannels) {\n    var textureFormat = getTextureFormat(gl, numChannels);\n    webgl_util.validateTextureSize(gl, width, height);\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, texture); });\n    webgl_util.callAndCheck(gl, function () { return gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, width, height, textureFormat, getTextureType(gl), data); });\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\n}\nfunction uploadMatrixToTexture(gl, texture, rows, columns, matrix, numChannels) {\n    var _a = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns), w = _a[0], h = _a[1];\n    var unpackedArray;\n    if (environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED')) {\n        var channelsPerTexture = numChannels === 1 ? webgl_util.getChannelsPerTexture() : numChannels;\n        if (channelsPerTexture === 1) {\n            unpackedArray = matrix;\n        }\n        else {\n            unpackedArray =\n                new Float32Array(tex_util.getUnpackedArraySizeFromMatrixSize(matrix.length, channelsPerTexture));\n            tex_util.encodeMatrixToUnpackedArray(matrix, unpackedArray, channelsPerTexture);\n        }\n    }\n    else {\n        unpackedArray = tex_util.encodeFloatArray(matrix);\n    }\n    uploadDataToTexture(gl, texture, w, h, unpackedArray, numChannels);\n}\nexports.uploadMatrixToTexture = uploadMatrixToTexture;\nfunction uploadMatrixToPackedTexture(gl, texture, rows, columns, matrix) {\n    var _a = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns), w = _a[0], h = _a[1];\n    var packedRGBA = new Float32Array(tex_util.getPackedRGBAArraySizeFromMatrixShape(rows, columns));\n    tex_util.encodeMatrixToPackedRGBA(matrix, rows, columns, packedRGBA);\n    var numChannels = 4;\n    uploadDataToTexture(gl, texture, w, h, packedRGBA, numChannels);\n}\nexports.uploadMatrixToPackedTexture = uploadMatrixToPackedTexture;\nfunction getDownloadTargetArrayBuffer(rows, columns, channelsPerTexture) {\n    var isFloatTexture = environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED');\n    var downloadTarget;\n    if (isFloatTexture) {\n        downloadTarget =\n            new Float32Array(tex_util.getUnpackedArraySizeFromMatrixSize(rows * columns, channelsPerTexture));\n    }\n    else {\n        downloadTarget = new Uint8Array(rows * columns * channelsPerTexture);\n    }\n    return downloadTarget;\n}\nfunction decodeDownloadTargetArrayBuffer(downloadTarget, rows, columns, channelsPerPixel) {\n    var isFloatTexture = environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED');\n    if (isFloatTexture) {\n        var matrix = new Float32Array(rows * columns);\n        tex_util.decodeMatrixFromUnpackedArray(downloadTarget, matrix, channelsPerPixel);\n        return matrix;\n    }\n    else {\n        return tex_util.decodeToFloatArray(downloadTarget);\n    }\n}\nfunction downloadMatrixFromOutputTextureAsync(gl, getBufferSubDataAsyncExtension, rows, columns) {\n    return __awaiter(this, void 0, void 0, function () {\n        var gl2, channelsPerPixel, downloadTarget, bufferSizeBytes, buffer;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    gl2 = gl;\n                    channelsPerPixel = 4;\n                    downloadTarget = getDownloadTargetArrayBuffer(rows, columns, channelsPerPixel);\n                    bufferSizeBytes = downloadTarget instanceof Float32Array ?\n                        downloadTarget.length * 4 :\n                        downloadTarget;\n                    buffer = gl.createBuffer();\n                    webgl_util.callAndCheck(gl, function () { return gl.bindBuffer(gl2.PIXEL_PACK_BUFFER, buffer); });\n                    webgl_util.callAndCheck(gl, function () { return gl.bufferData(gl2.PIXEL_PACK_BUFFER, bufferSizeBytes, gl.STATIC_DRAW); });\n                    webgl_util.callAndCheck(gl, function () {\n                        return gl2.readPixels(0, 0, columns, rows, gl.RGBA, getTextureType(gl), 0);\n                    });\n                    return [4, getBufferSubDataAsyncExtension.getBufferSubDataAsync(gl2.PIXEL_PACK_BUFFER, 0, downloadTarget)];\n                case 1:\n                    _a.sent();\n                    return [2, decodeDownloadTargetArrayBuffer(downloadTarget, rows, columns, channelsPerPixel)];\n            }\n        });\n    });\n}\nexports.downloadMatrixFromOutputTextureAsync = downloadMatrixFromOutputTextureAsync;\nfunction downloadMatrixFromOutputTexture(gl, rows, columns) {\n    var _a = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns), w = _a[0], h = _a[1];\n    var channelsPerPixel = 4;\n    var downloadTarget = getDownloadTargetArrayBuffer(rows, columns, channelsPerPixel);\n    webgl_util.callAndCheck(gl, function () { return gl.readPixels(0, 0, w, h, gl.RGBA, getTextureType(gl), downloadTarget); });\n    return decodeDownloadTargetArrayBuffer(downloadTarget, rows, columns, channelsPerPixel);\n}\nexports.downloadMatrixFromOutputTexture = downloadMatrixFromOutputTexture;\nfunction downloadMatrixFromRGBAColorTexture(gl, rows, columns, channels) {\n    var size = rows * columns * 4;\n    var downloadTarget = new Uint8Array(size);\n    webgl_util.callAndCheck(gl, function () { return gl.readPixels(0, 0, columns, rows, gl.RGBA, gl.UNSIGNED_BYTE, downloadTarget); });\n    var packedRGBA = new Float32Array(size);\n    for (var i = 0; i < downloadTarget.length; i++) {\n        packedRGBA[i] = downloadTarget[i];\n    }\n    var matrix = new Float32Array(rows * columns * channels);\n    tex_util.decodeMatrixFromUnpackedColorRGBAArray(packedRGBA, matrix, channels);\n    return matrix;\n}\nexports.downloadMatrixFromRGBAColorTexture = downloadMatrixFromRGBAColorTexture;\nfunction downloadMatrixFromPackedOutputTexture(gl, rows, columns) {\n    var _a = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns), w = _a[0], h = _a[1];\n    var packedRGBA = new Float32Array(tex_util.getPackedRGBAArraySizeFromMatrixShape(rows, columns));\n    webgl_util.callAndCheck(gl, function () { return gl.readPixels(0, 0, w, h, gl.RGBA, getTextureType(gl), packedRGBA); });\n    var matrix = new Float32Array(rows * columns);\n    return tex_util.decodeMatrixFromPackedRGBA(packedRGBA, rows, columns, matrix);\n}\nexports.downloadMatrixFromPackedOutputTexture = downloadMatrixFromPackedOutputTexture;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/gpgpu_util.js\n// module id = LbFW\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar TileProgram = (function () {\n    function TileProgram(aShape, reps) {\n        this.variableNames = ['A'];\n        var outputShape = new Array(aShape.length);\n        for (var i = 0; i < outputShape.length; i++) {\n            outputShape[i] = aShape[i] * reps[i];\n        }\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        var dtype = shader_compiler_1.getCoordsDataType(this.rank);\n        var sourceCoords = getSourceCoords(aShape);\n        this.userCode = \"\\n      void main() {\\n        \" + dtype + \" resRC = getOutputCoords();\\n        setOutput(getA(\" + sourceCoords + \"));\\n      }\\n    \";\n    }\n    return TileProgram;\n}());\nexports.TileProgram = TileProgram;\nfunction getSourceCoords(aShape) {\n    var rank = aShape.length;\n    if (rank > 4) {\n        throw Error(\"Tile for rank \" + rank + \" is not yet supported\");\n    }\n    if (rank === 1) {\n        return \"imod(resRC, \" + aShape[0] + \")\";\n    }\n    var currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n    var sourceCoords = [];\n    for (var i = 0; i < aShape.length; i++) {\n        sourceCoords.push(\"imod(\" + currentCoords[i] + \", \" + aShape[i] + \")\");\n    }\n    return sourceCoords.join();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/tile_gpu.js\n// module id = M0xE\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar broadcast_util = require(\"../../broadcast_util\");\nexports.ADD = 'return a + b;';\nexports.SUB = 'return a - b;';\nexports.MUL = 'return a * b;';\nexports.DIV = 'return a / b;';\nexports.POW = \"\\n  return (round(mod(b, 2.0)) == 0 || round(mod(b, 2.0)) == 2) ?\\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\\n\";\nexports.EQUAL = \"\\n  if (isNaN(a)) return a;\\n  if (isNaN(b)) return b;\\n  return float(a == b);\\n\";\nexports.PRELU = \"\\n  return (a >= 0.0) ? a : b * a;\\n\";\nexports.PRELU_DER = \"\\n  return (a > 0.0) ? 1.0 : ((a < 0.0) ? b : a);\\n\";\nvar BinaryOpProgram = (function () {\n    function BinaryOpProgram(op, aShape, bShape) {\n        this.variableNames = ['A', 'B'];\n        this.supportsBroadcasting = true;\n        this.outputShape =\n            broadcast_util.assertAndGetBroadcastShape(aShape, bShape);\n        this.userCode = \"\\n      float binaryOperation(float a, float b) {\\n        \" + op + \"\\n      }\\n\\n      void main() {\\n        float a = getAAtOutCoords();\\n        float b = getBAtOutCoords();\\n        setOutput(binaryOperation(a, b));\\n      }\\n    \";\n    }\n    return BinaryOpProgram;\n}());\nexports.BinaryOpProgram = BinaryOpProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/binaryop_gpu.js\n// module id = M1+U\n// module chunks = 0","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iobject.js\n// module id = MU5D\n// module chunks = 0","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_is-array-iter.js\n// module id = Mhyx\n// module chunks = 0","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-primitive.js\n// module id = MmMw\n// module chunks = 0","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_for-of.js\n// module id = NWt+\n// module chunks = 0","module.exports = true;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_library.js\n// module id = O4g8\n// module chunks = 0","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_dom-create.js\n// module id = ON07\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"../util\");\nfunction computePool2DInfo(inShape, filterSize, strides, pad, dataFormat) {\n    if (dataFormat === void 0) { dataFormat = 'channelsLast'; }\n    var _a = parseTupleParam(filterSize), filterHeight = _a[0], filterWidth = _a[1];\n    var filterShape;\n    if (dataFormat === 'channelsLast') {\n        filterShape = [filterHeight, filterWidth, inShape[3], inShape[3]];\n    }\n    else if (dataFormat === 'channelsFirst') {\n        filterShape = [filterHeight, filterWidth, inShape[1], inShape[1]];\n    }\n    else {\n        throw new Error(\"Unknown dataFormat \" + dataFormat);\n    }\n    return computeConv2DInfo(inShape, filterShape, strides, pad, false, dataFormat);\n}\nexports.computePool2DInfo = computePool2DInfo;\nfunction computeConv2DInfo(inShape, filterShape, strides, pad, depthwise, dataFormat) {\n    if (depthwise === void 0) { depthwise = false; }\n    if (dataFormat === void 0) { dataFormat = 'channelsLast'; }\n    var _a = [-1, -1, -1, -1], batchSize = _a[0], inHeight = _a[1], inWidth = _a[2], inChannels = _a[3];\n    if (dataFormat === 'channelsLast') {\n        batchSize = inShape[0], inHeight = inShape[1], inWidth = inShape[2], inChannels = inShape[3];\n    }\n    else if (dataFormat === 'channelsFirst') {\n        batchSize = inShape[0], inChannels = inShape[1], inHeight = inShape[2], inWidth = inShape[3];\n    }\n    else {\n        throw new Error(\"Unknown dataFormat \" + dataFormat);\n    }\n    var filterHeight = filterShape[0], filterWidth = filterShape[1], filterChannels = filterShape[3];\n    var _b = parseTupleParam(strides), strideHeight = _b[0], strideWidth = _b[1];\n    var _c = getPadAndOutInfo(pad, inHeight, inWidth, strideHeight, strideWidth, filterHeight, filterWidth), padInfo = _c.padInfo, outHeight = _c.outHeight, outWidth = _c.outWidth;\n    var outChannels = depthwise ? filterChannels * inChannels : filterChannels;\n    var outShape;\n    if (dataFormat === 'channelsFirst') {\n        outShape = [batchSize, outChannels, outHeight, outWidth];\n    }\n    else if (dataFormat === 'channelsLast') {\n        outShape = [batchSize, outHeight, outWidth, outChannels];\n    }\n    return {\n        batchSize: batchSize,\n        dataFormat: dataFormat,\n        inHeight: inHeight,\n        inWidth: inWidth,\n        inChannels: inChannels,\n        outHeight: outHeight,\n        outWidth: outWidth,\n        outChannels: outChannels,\n        padInfo: padInfo,\n        strideHeight: strideHeight,\n        strideWidth: strideWidth,\n        filterHeight: filterHeight,\n        filterWidth: filterWidth,\n        inShape: inShape,\n        outShape: outShape,\n        filterShape: filterShape\n    };\n}\nexports.computeConv2DInfo = computeConv2DInfo;\nfunction computeOutputShape3D(inShape, fieldSize, outDepth, stride, zeroPad) {\n    if (zeroPad == null) {\n        zeroPad = computeDefaultPad(inShape, fieldSize, stride);\n    }\n    var inputRows = inShape[0];\n    var inputCols = inShape[1];\n    var outputRows = (inputRows - fieldSize + 2 * zeroPad) / stride + 1;\n    util.assert(util.isInt(outputRows), \"The output # of rows (\" + outputRows + \") must be an integer. Change the \" +\n        \"stride and/or zero pad parameters\");\n    var outputCols = (inputCols - fieldSize + 2 * zeroPad) / stride + 1;\n    util.assert(util.isInt(outputCols), \"The output # of columns (\" + outputCols + \") must be an integer. Change \" +\n        \"the stride and/or zero pad parameters\");\n    return [outputRows, outputCols, outDepth];\n}\nexports.computeOutputShape3D = computeOutputShape3D;\nfunction computeDefaultPad(inputShape, fieldSize, stride) {\n    return Math.floor((inputShape[0] * (stride - 1) - stride + fieldSize) / 2);\n}\nexports.computeDefaultPad = computeDefaultPad;\nfunction computeWeightsShape4D(inputDepth, outputDepth, filterHeight, filterWidth) {\n    return [filterHeight, filterWidth, inputDepth, outputDepth];\n}\nexports.computeWeightsShape4D = computeWeightsShape4D;\nfunction computeDilatedRC(rc, origStride) {\n    var rowsDilated = (rc[0] - 1) * origStride + 1;\n    var colsDilated = (rc[1] - 1) * origStride + 1;\n    return [rowsDilated, colsDilated];\n}\nexports.computeDilatedRC = computeDilatedRC;\nfunction parseTupleParam(param) {\n    return typeof param === 'number' ? [param, param] : param;\n}\nfunction getPadAndOutInfo(pad, inHeight, inWidth, strideHeight, strideWidth, filterHeight, filterWidth) {\n    var padInfo;\n    var outHeight;\n    var outWidth;\n    if (typeof pad === 'number') {\n        padInfo = { top: pad, bottom: pad, left: pad, right: pad };\n        var outShape = computeOutputShape3D([inHeight, inWidth, 1], filterHeight, 1, strideHeight, pad);\n        outHeight = outShape[0];\n        outWidth = outShape[1];\n    }\n    else if (pad === 'same') {\n        outHeight = Math.ceil(inHeight / strideHeight);\n        outWidth = Math.ceil(inWidth / strideWidth);\n        var padAlongHeight = (outHeight - 1) * strideHeight + filterHeight - inHeight;\n        var padAlongWidth = (outWidth - 1) * strideWidth + filterWidth - inWidth;\n        var top_1 = Math.floor(padAlongHeight / 2);\n        var bottom = padAlongHeight - top_1;\n        var left = Math.floor(padAlongWidth / 2);\n        var right = padAlongWidth - left;\n        padInfo = { top: top_1, bottom: bottom, left: left, right: right };\n    }\n    else if (pad === 'valid') {\n        padInfo = { top: 0, bottom: 0, left: 0, right: 0 };\n        outHeight = Math.ceil((inHeight - filterHeight + 1) / strideHeight);\n        outWidth = Math.ceil((inWidth - filterWidth + 1) / strideWidth);\n    }\n    else {\n        throw Error(\"Unknown padding parameter: \" + pad);\n    }\n    return { padInfo: padInfo, outHeight: outHeight, outWidth: outWidth };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/conv_util.js\n// module id = P58p\n// module chunks = 0","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gpo.js\n// module id = PzxK\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"../../util\");\nvar graph_util = require(\"../graph_util\");\nvar op_1 = require(\"./op\");\nvar Multiply = (function (_super) {\n    __extends(Multiply, _super);\n    function Multiply(x1Tensor, x2Tensor, yTensor) {\n        var _this = _super.call(this) || this;\n        _this.x1Tensor = x1Tensor;\n        _this.x2Tensor = x2Tensor;\n        _this.yTensor = yTensor;\n        util.assert(util.sizeFromShape(x1Tensor.shape) === 1 ||\n            util.sizeFromShape(x2Tensor.shape) === 1 ||\n            util.arraysEqual(x1Tensor.shape, x2Tensor.shape), 'One of t1 or t2 must be a scalar, or t1 and t2 must have ' +\n            'the same shape');\n        return _this;\n    }\n    Multiply.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var t1 = inferenceArrays.get(this.x1Tensor);\n        var t2 = inferenceArrays.get(this.x2Tensor);\n        math.scope(function (keep) {\n            var result;\n            if (util.isScalarShape(t1.shape)) {\n                result = math.scalarTimesArray(t1, t2);\n            }\n            else if (util.isScalarShape(t2.shape)) {\n                result = math.scalarTimesArray(t2, t1);\n            }\n            else {\n                result = math.elementWiseMul(t1, t2);\n            }\n            inferenceArrays.set(_this.yTensor, keep(result));\n        });\n    };\n    Multiply.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var x1 = inferenceArrays.get(this.x1Tensor);\n        var x2 = inferenceArrays.get(this.x2Tensor);\n        var dy = gradientArrays.get(this.yTensor);\n        math.scope(function () {\n            if (graph_util.shouldBackProp(_this.x1Tensor)) {\n                if (util.isScalarShape(_this.x1Tensor.shape)) {\n                    var mul = math.elementWiseMul(dy, x2);\n                    gradientArrays.add(_this.x1Tensor, math.sum(mul));\n                }\n                else if (util.isScalarShape(x2.shape)) {\n                    gradientArrays.add(_this.x1Tensor, math.scalarTimesArray(x2, dy));\n                }\n                else {\n                    gradientArrays.add(_this.x1Tensor, math.elementWiseMul(x2, dy));\n                }\n            }\n            if (graph_util.shouldBackProp(_this.x2Tensor)) {\n                if (util.isScalarShape(_this.x2Tensor.shape)) {\n                    var mul = math.elementWiseMul(dy, x1);\n                    gradientArrays.add(_this.x2Tensor, math.sum(mul));\n                }\n                else if (util.isScalarShape(x1.shape)) {\n                    gradientArrays.add(_this.x2Tensor, math.scalarTimesArray(x1, dy));\n                }\n                else {\n                    gradientArrays.add(_this.x2Tensor, math.elementWiseMul(x1, dy));\n                }\n            }\n        });\n    };\n    return Multiply;\n}(op_1.Operation));\nexports.Multiply = Multiply;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/ops/multiply.js\n// module id = QLAB\n// module chunks = 0","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-length.js\n// module id = QRG4\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar op_1 = require(\"./op\");\nvar ArgMax = (function (_super) {\n    __extends(ArgMax, _super);\n    function ArgMax(xTensor, yTensor) {\n        var _this = _super.call(this) || this;\n        _this.xTensor = xTensor;\n        _this.yTensor = yTensor;\n        return _this;\n    }\n    ArgMax.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x = inferenceArrays.get(this.xTensor);\n        math.scope(function (keep) {\n            inferenceArrays.set(_this.yTensor, keep(math.argMax(x)));\n        });\n    };\n    ArgMax.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        throw new Error('ArgMax backprop unimplemented');\n    };\n    return ArgMax;\n}(op_1.Operation));\nexports.ArgMax = ArgMax;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/ops/argmax.js\n// module id = QtZe\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Conv2DDerFilterProgram = (function () {\n    function Conv2DDerFilterProgram(convInfo) {\n        this.variableNames = ['x', 'dy'];\n        this.outputShape = convInfo.filterShape;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int wR = coords.x;\\n        int wC = coords.y;\\n        int d1 = coords.z;\\n        int d2 = coords.w;\\n\\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n\\n        for (int b = 0; b < \" + convInfo.batchSize + \"; b++) {\\n          for (int yR = 0; yR < \" + convInfo.outHeight + \"; yR++) {\\n            int xR = wR + yR * \" + strideHeight + \" - \" + padTop + \";\\n\\n            if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n              continue;\\n            }\\n\\n            for (int yC = 0; yC < \" + convInfo.outWidth + \"; yC++) {\\n              int xC = wC + yC * \" + strideWidth + \" - \" + padLeft + \";\\n\\n              if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n                continue;\\n              }\\n\\n              float dyValue = getDy(b, yR, yC, d2);\\n              float xValue = getX(b, xR, xC, d1);\\n              dotProd += (xValue * dyValue);\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return Conv2DDerFilterProgram;\n}());\nexports.Conv2DDerFilterProgram = Conv2DDerFilterProgram;\nvar Conv2DDerInputProgram = (function () {\n    function Conv2DDerInputProgram(convInfo) {\n        this.variableNames = ['dy', 'W'];\n        this.outputShape = convInfo.inShape;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var padTop = filterHeight - 1 - convInfo.padInfo.top;\n        var padLeft = filterWidth - 1 - convInfo.padInfo.left;\n        this.userCode = \"\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d1 = coords[3];\\n\\n        ivec2 dyCorner = coords.yz - pads;\\n        int dyRCorner = dyCorner.x;\\n        int dyCCorner = dyCorner.y;\\n\\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          float dyR = float(dyRCorner + wR) / \" + strideHeight + \".0;\\n\\n          if (dyR < 0.0 || dyR >= \" + convInfo.outHeight + \".0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          int wRPerm = \" + filterHeight + \" - 1 - wR;\\n\\n          for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n            float dyC = float(dyCCorner + wC) / \" + strideWidth + \".0;\\n\\n            if (dyC < 0.0 || dyC >= \" + convInfo.outWidth + \".0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            int wCPerm = \" + filterWidth + \" - 1 - wC;\\n\\n            for (int d2 = 0; d2 < \" + convInfo.outChannels + \"; d2++) {\\n              float xValue = getDy(batch, idyR, idyC, d2);\\n              float wValue = getW(wRPerm, wCPerm, d1, d2);\\n              dotProd += xValue * wValue;\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return Conv2DDerInputProgram;\n}());\nexports.Conv2DDerInputProgram = Conv2DDerInputProgram;\nvar Conv2DDerBiasProgram = (function () {\n    function Conv2DDerBiasProgram(yShape) {\n        this.variableNames = ['dy'];\n        var batchSize = yShape[0], yNumRows = yShape[1], yNumCols = yShape[2], outputDepth = yShape[3];\n        this.outputShape = [outputDepth];\n        this.userCode = \"\\n      void main() {\\n        int d2 = getOutputCoords();\\n\\n        float derBias = 0.0;\\n        for (int b = 0; b < \" + batchSize + \"; b++) {\\n          for (int yR = 0; yR < \" + yNumRows + \"; yR++) {\\n            for (int yC = 0; yC < \" + yNumCols + \"; yC++) {\\n              derBias += getDy(b, yR, yC, d2);\\n            }\\n          }\\n        }\\n        setOutput(derBias);\\n      }\\n    \";\n    }\n    return Conv2DDerBiasProgram;\n}());\nexports.Conv2DDerBiasProgram = Conv2DDerBiasProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/conv_backprop_gpu.js\n// module id = QwX8\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_cof.js\n// module id = R9M2\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = require(\"../../math/ndarray\");\nvar tensor_array_map_1 = require(\"../tensor_array_map\");\nvar optimizer_1 = require(\"./optimizer\");\nvar AdadeltaOptimizer = (function (_super) {\n    __extends(AdadeltaOptimizer, _super);\n    function AdadeltaOptimizer(learningRate, gamma, specifiedVariableList) {\n        var _this = _super.call(this, learningRate, specifiedVariableList) || this;\n        _this.learningRate = learningRate;\n        _this.gamma = gamma;\n        _this.accumulatedSquaredGradients = new tensor_array_map_1.TensorArrayMap();\n        _this.accumulatedUpdates = new tensor_array_map_1.TensorArrayMap();\n        _this.eps = ndarray_1.Scalar.new(1e-6);\n        _this.g = ndarray_1.Scalar.new(_this.gamma);\n        return _this;\n    }\n    AdadeltaOptimizer.prototype.beforeBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        _super.prototype.beforeBatch.call(this, math, batchSize, runtime, activationArrayMap, gradientArrayMap);\n        if (this.accumulatedSquaredGradients.size() === 0) {\n            this.variableNodes.forEach(function (node) {\n                _this.accumulatedSquaredGradients.set(node.output, ndarray_1.NDArray.zeros(node.output.shape));\n                _this.accumulatedUpdates.set(node.output, ndarray_1.NDArray.zeros(node.output.shape));\n            });\n        }\n    };\n    AdadeltaOptimizer.prototype.afterBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        math.scope(function (keep) {\n            _this.variableNodes.forEach(function (node) {\n                var oldVariable = activationArrayMap.get(node.output);\n                var gradient = _this.variableGradients.get(node.output);\n                var oldCache = _this.accumulatedSquaredGradients.get(node.output);\n                var oldUpdates = _this.accumulatedUpdates.get(node.output);\n                var gradientSquare = math.multiply(gradient, gradient);\n                var cache = math.scaledArrayAdd(_this.g, oldCache, math.subtract(_this.one, _this.g), gradientSquare);\n                var updates = math.multiply(math.divide(math.sqrt(math.add(oldUpdates, _this.eps)), math.sqrt(math.add(oldCache, _this.eps))), gradient);\n                var variable = math.scaledArrayAdd(_this.c, updates, _this.one, oldVariable);\n                var updateSquare = math.multiply(updates, updates);\n                var newUpdates = math.scaledArrayAdd(_this.g, oldUpdates, math.subtract(_this.one, _this.g), updateSquare);\n                _this.accumulatedSquaredGradients.set(node.output, keep(cache));\n                _this.accumulatedUpdates.set(node.output, keep(newUpdates));\n                activationArrayMap.set(node.output, keep(variable));\n                node.data = variable;\n                oldVariable.dispose();\n                oldCache.dispose();\n                oldUpdates.dispose();\n            });\n        });\n        this.variableGradients.dispose();\n        this.variableGradients = new tensor_array_map_1.TensorArrayMap();\n    };\n    AdadeltaOptimizer.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.eps.dispose();\n        this.g.dispose();\n        this.accumulatedSquaredGradients.dispose();\n        this.accumulatedUpdates.dispose();\n    };\n    return AdadeltaOptimizer;\n}(optimizer_1.Optimizer));\nexports.AdadeltaOptimizer = AdadeltaOptimizer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/optimizers/adadelta_optimizer.js\n// module id = ROF2\n// module chunks = 0","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_html.js\n// module id = RPLV\n// module chunks = 0","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_classof.js\n// module id = RY/4\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"../../util\");\nvar graph_util = require(\"../graph_util\");\nvar op_1 = require(\"./op\");\nvar Add = (function (_super) {\n    __extends(Add, _super);\n    function Add(x1Tensor, x2Tensor, yTensor) {\n        var _this = _super.call(this) || this;\n        _this.x1Tensor = x1Tensor;\n        _this.x2Tensor = x2Tensor;\n        _this.yTensor = yTensor;\n        util.assert(util.sizeFromShape(x1Tensor.shape) === 1 ||\n            util.sizeFromShape(x2Tensor.shape) === 1 ||\n            util.arraysEqual(x1Tensor.shape, x2Tensor.shape) ||\n            (x1Tensor.shape.length === 2 && x2Tensor.shape.length === 1 &&\n                x1Tensor.shape[1] === x2Tensor.shape[0]) ||\n            (x1Tensor.shape.length === 1 && x2Tensor.shape.length === 2 &&\n                x1Tensor.shape[0] === x2Tensor.shape[1]), 'One of t1 or t2 must be a scalar, or t1 and t2 must have ' +\n            'the same shape, ' +\n            'or one of them can be broadcasted (2D and 1D).');\n        return _this;\n    }\n    Add.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x1 = inferenceArrays.get(this.x1Tensor);\n        var x2 = inferenceArrays.get(this.x2Tensor);\n        math.scope(function (keep) {\n            var result;\n            if (util.isScalarShape(x1.shape)) {\n                result = math.scalarPlusArray(x1, x2);\n            }\n            else if (util.isScalarShape(x2.shape)) {\n                result = math.scalarPlusArray(x2, x1);\n            }\n            else {\n                result = math.add(x1, x2);\n            }\n            inferenceArrays.set(_this.yTensor, keep(result));\n        });\n    };\n    Add.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var dy = gradientArrays.get(this.yTensor);\n        math.scope(function () {\n            if (graph_util.shouldBackProp(_this.x1Tensor)) {\n                if (_this.x1Tensor.shape.length === 1 &&\n                    _this.x2Tensor.shape.length === 2 &&\n                    _this.x1Tensor.shape[0] === _this.x2Tensor.shape[1]) {\n                    var sum = math.sum(dy, 0);\n                    gradientArrays.add(_this.x1Tensor, sum);\n                }\n                else if (util.isScalarShape(_this.x1Tensor.shape)) {\n                    var sum = math.sum(dy);\n                    gradientArrays.add(_this.x1Tensor, sum);\n                }\n                else {\n                    gradientArrays.add(_this.x1Tensor, math.clone(dy));\n                }\n            }\n            if (graph_util.shouldBackProp(_this.x2Tensor)) {\n                if (_this.x1Tensor.shape.length === 2 &&\n                    _this.x2Tensor.shape.length === 1 &&\n                    _this.x1Tensor.shape[1] === _this.x2Tensor.shape[0]) {\n                    var sum = math.sum(dy, 0);\n                    gradientArrays.add(_this.x2Tensor, sum);\n                }\n                else if (util.isScalarShape(_this.x2Tensor.shape)) {\n                    var sum = math.sum(dy);\n                    gradientArrays.add(_this.x2Tensor, sum);\n                }\n                else {\n                    gradientArrays.add(_this.x2Tensor, math.clone(dy));\n                }\n            }\n        });\n    };\n    Add.prototype.dispose = function () {\n        if (this.dySizeScalar != null) {\n            this.dySizeScalar.dispose();\n        }\n    };\n    return Add;\n}(op_1.Operation));\nexports.Add = Add;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/ops/add.js\n// module id = Rx9u\n// module chunks = 0","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_fails.js\n// module id = S82l\n// module chunks = 0","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_ie8-dom-define.js\n// module id = SfB7\n// module chunks = 0","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime.js\n// module id = SldL\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar SliceProgram = (function () {\n    function SliceProgram(destSize) {\n        this.variableNames = ['source'];\n        this.outputShape = destSize;\n        this.rank = destSize.length;\n        var dtype = shader_compiler_1.getCoordsDataType(this.rank);\n        var sourceCoords = getCoords(this.rank);\n        this.userCode = \"\\n      uniform \" + dtype + \" start;\\n\\n      void main() {\\n        \" + dtype + \" sourceLoc = start + getOutputCoords();\\n        setOutput(getSource(\" + sourceCoords + \"));\\n      }\\n    \";\n    }\n    SliceProgram.prototype.getCustomSetupFunc = function (start) {\n        var _this = this;\n        if (start.length !== this.rank) {\n            throw Error(\"The rank (\" + this.rank + \") of the program must match the \" +\n                (\"length of start (\" + start.length + \")\"));\n        }\n        return function (gpgpu, webGLProgram) {\n            if (_this.startLoc == null) {\n                _this.startLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'start');\n                if (_this.startLoc == null) {\n                    return;\n                }\n            }\n            if (_this.rank === 1) {\n                gpgpu.gl.uniform1i(_this.startLoc, start[0]);\n            }\n            else if (_this.rank === 2) {\n                gpgpu.gl.uniform2i(_this.startLoc, start[0], start[1]);\n            }\n            else if (_this.rank === 3) {\n                gpgpu.gl.uniform3i(_this.startLoc, start[0], start[1], start[2]);\n            }\n            else if (_this.rank === 4) {\n                gpgpu.gl.uniform4i(_this.startLoc, start[0], start[1], start[2], start[3]);\n            }\n            else {\n                throw Error(\"Slicing for rank \" + _this.rank + \" is not yet supported\");\n            }\n        };\n    };\n    return SliceProgram;\n}());\nexports.SliceProgram = SliceProgram;\nfunction getCoords(rank) {\n    if (rank === 1) {\n        return 'sourceLoc';\n    }\n    else if (rank === 2) {\n        return 'sourceLoc.x, sourceLoc.y';\n    }\n    else if (rank === 3) {\n        return 'sourceLoc.x, sourceLoc.y, sourceLoc.z';\n    }\n    else if (rank === 4) {\n        return 'sourceLoc.x, sourceLoc.y, sourceLoc.z, sourceLoc.w';\n    }\n    else {\n        throw Error(\"Slicing for rank \" + rank + \" is not yet supported\");\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/slice_gpu.js\n// module id = SumV\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = require(\"../../math/ndarray\");\nvar tensor_array_map_1 = require(\"../tensor_array_map\");\nvar optimizer_1 = require(\"./optimizer\");\nvar RMSPropOptimizer = (function (_super) {\n    __extends(RMSPropOptimizer, _super);\n    function RMSPropOptimizer(learningRate, gamma, specifiedVariableList) {\n        var _this = _super.call(this, learningRate, specifiedVariableList) || this;\n        _this.learningRate = learningRate;\n        _this.gamma = gamma;\n        _this.accumulatedSquaredGradients = new tensor_array_map_1.TensorArrayMap();\n        _this.eps = ndarray_1.Scalar.new(1e-6);\n        _this.g = ndarray_1.Scalar.new(_this.gamma);\n        return _this;\n    }\n    RMSPropOptimizer.prototype.beforeBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        _super.prototype.beforeBatch.call(this, math, batchSize, runtime, activationArrayMap, gradientArrayMap);\n        if (this.accumulatedSquaredGradients.size() === 0) {\n            this.variableNodes.forEach(function (node) {\n                _this.accumulatedSquaredGradients.set(node.output, ndarray_1.NDArray.zeros(node.output.shape));\n            });\n        }\n    };\n    RMSPropOptimizer.prototype.afterBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        math.scope(function (keep) {\n            _this.variableNodes.forEach(function (node) {\n                var oldVariable = activationArrayMap.get(node.output);\n                var gradient = _this.variableGradients.get(node.output);\n                var oldCache = _this.accumulatedSquaredGradients.get(node.output);\n                var gradientSquare = math.multiply(gradient, gradient);\n                var cache = math.scaledArrayAdd(_this.g, oldCache, math.subtract(_this.one, _this.g), gradientSquare);\n                var variable = math.scaledArrayAdd(_this.c, math.divide(gradient, math.add(math.sqrt(cache), _this.eps)), _this.one, oldVariable);\n                _this.accumulatedSquaredGradients.set(node.output, keep(cache));\n                activationArrayMap.set(node.output, keep(variable));\n                node.data = variable;\n                oldVariable.dispose();\n                oldCache.dispose();\n            });\n        });\n        this.variableGradients.dispose();\n        this.variableGradients = new tensor_array_map_1.TensorArrayMap();\n    };\n    RMSPropOptimizer.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.eps.dispose();\n        this.g.dispose();\n        this.accumulatedSquaredGradients.dispose();\n    };\n    return RMSPropOptimizer;\n}(optimizer_1.Optimizer));\nexports.RMSPropOptimizer = RMSPropOptimizer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/optimizers/rmsprop_optimizer.js\n// module id = T9Dr\n// module chunks = 0","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-iobject.js\n// module id = TcQ7\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"../../util\");\nvar op_1 = require(\"./op\");\nvar Reshape = (function (_super) {\n    __extends(Reshape, _super);\n    function Reshape(xTensor, yTensor) {\n        var _this = _super.call(this) || this;\n        _this.xTensor = xTensor;\n        _this.yTensor = yTensor;\n        var xSize = util.sizeFromShape(xTensor.shape);\n        var ySize = util.sizeFromShape(yTensor.shape);\n        util.assert(xSize === ySize, \"The input size (\" + xSize + \") and output size (\" + ySize + \") must match\");\n        return _this;\n    }\n    Reshape.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x = inferenceArrays.get(this.xTensor);\n        var clone = math.clone(x);\n        math.scope(function (keep) {\n            inferenceArrays.set(_this.yTensor, keep(clone.reshape(_this.yTensor.shape)));\n        });\n    };\n    Reshape.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var dy = gradientArrays.get(this.yTensor);\n        var clone = math.clone(dy);\n        math.scope(function () {\n            gradientArrays.add(_this.xTensor, clone.reshape(_this.xTensor.shape));\n        });\n    };\n    return Reshape;\n}(op_1.Operation));\nexports.Reshape = Reshape;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/ops/reshape.js\n// module id = Tu3E\n// module chunks = 0","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.promise');\nrequire('../modules/es7.promise.finally');\nrequire('../modules/es7.promise.try');\nmodule.exports = require('../modules/_core').Promise;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/promise.js\n// module id = U5ju\n// module chunks = 0","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-integer.js\n// module id = UuGF\n// module chunks = 0","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = data.toString();\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/seedrandom/lib/alea.js\n// module id = VOQS\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MAX_TEXTURE_SIZE = null;\nvar util = require(\"../../../util\");\nvar environment_1 = require(\"../../../environment\");\nfunction createWebGLRenderingContext(attributes) {\n    var canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    return createWebGLRenderingContextFromCanvas(canvas, attributes);\n}\nexports.createWebGLRenderingContext = createWebGLRenderingContext;\nfunction createWebGLRenderingContextFromCanvas(canvas, attributes) {\n    var gl;\n    var webglVersion = environment_1.ENV.get('WEBGL_VERSION');\n    if (webglVersion === 2) {\n        gl = canvas.getContext('webgl2', attributes);\n    }\n    else if (webglVersion === 1) {\n        gl = (canvas.getContext('webgl', attributes) ||\n            canvas.getContext('experimental-webgl', attributes));\n    }\n    if (webglVersion === 0 || gl == null) {\n        throw new Error('This browser does not support WebGL.');\n    }\n    return gl;\n}\nexports.createWebGLRenderingContextFromCanvas = createWebGLRenderingContextFromCanvas;\nfunction callAndCheck(gl, func) {\n    var returnValue = func();\n    checkWebGLError(gl);\n    return returnValue;\n}\nexports.callAndCheck = callAndCheck;\nvar webGLDebugErrorCheckingEnabled = false;\nfunction enableDebugWebGLErrorChecking(enabled) {\n    webGLDebugErrorCheckingEnabled = enabled;\n}\nexports.enableDebugWebGLErrorChecking = enableDebugWebGLErrorChecking;\nfunction checkWebGLError(gl) {\n    if (webGLDebugErrorCheckingEnabled) {\n        var error = gl.getError();\n        if (error !== gl.NO_ERROR) {\n            throw new Error('WebGL Error: ' + getWebGLErrorMessage(gl, error));\n        }\n    }\n}\nexports.checkWebGLError = checkWebGLError;\nfunction getWebGLErrorMessage(gl, status) {\n    switch (status) {\n        case gl.NO_ERROR:\n            return 'NO_ERROR';\n        case gl.INVALID_ENUM:\n            return 'INVALID_ENUM';\n        case gl.INVALID_VALUE:\n            return 'INVALID_VALUE';\n        case gl.INVALID_OPERATION:\n            return 'INVALID_OPERATION';\n        case gl.INVALID_FRAMEBUFFER_OPERATION:\n            return 'INVALID_FRAMEBUFFER_OPERATION';\n        case gl.OUT_OF_MEMORY:\n            return 'OUT_OF_MEMORY';\n        case gl.CONTEXT_LOST_WEBGL:\n            return 'CONTEXT_LOST_WEBGL';\n        default:\n            return \"Unknown error code \" + status;\n    }\n}\nexports.getWebGLErrorMessage = getWebGLErrorMessage;\nfunction getExtensionOrThrow(gl, extensionName) {\n    return throwIfNull(gl, function () { return gl.getExtension(extensionName); }, 'Extension \"' + extensionName + '\" not supported on this browser.');\n}\nexports.getExtensionOrThrow = getExtensionOrThrow;\nfunction createVertexShader(gl, vertexShaderSource) {\n    var vertexShader = throwIfNull(gl, function () { return gl.createShader(gl.VERTEX_SHADER); }, 'Unable to create vertex WebGLShader.');\n    callAndCheck(gl, function () { return gl.shaderSource(vertexShader, vertexShaderSource); });\n    callAndCheck(gl, function () { return gl.compileShader(vertexShader); });\n    if (gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS) === false) {\n        console.log(gl.getShaderInfoLog(vertexShader));\n        throw new Error('Failed to compile vertex shader.');\n    }\n    return vertexShader;\n}\nexports.createVertexShader = createVertexShader;\nfunction createFragmentShader(gl, fragmentShaderSource) {\n    var fragmentShader = throwIfNull(gl, function () { return gl.createShader(gl.FRAGMENT_SHADER); }, 'Unable to create fragment WebGLShader.');\n    callAndCheck(gl, function () { return gl.shaderSource(fragmentShader, fragmentShaderSource); });\n    callAndCheck(gl, function () { return gl.compileShader(fragmentShader); });\n    if (gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS) === false) {\n        logShaderSourceAndInfoLog(fragmentShaderSource, gl.getShaderInfoLog(fragmentShader));\n        throw new Error('Failed to compile fragment shader.');\n    }\n    return fragmentShader;\n}\nexports.createFragmentShader = createFragmentShader;\nvar lineNumberRegex = /ERROR: [0-9]+:([0-9]+):/g;\nfunction logShaderSourceAndInfoLog(shaderSource, shaderInfoLog) {\n    var lineNumberRegexResult = lineNumberRegex.exec(shaderInfoLog);\n    if (lineNumberRegexResult == null) {\n        console.log(\"Couldn't parse line number in error: \" + shaderInfoLog);\n        console.log(shaderSource);\n        return;\n    }\n    var lineNumber = +lineNumberRegexResult[1];\n    var shaderLines = shaderSource.split('\\n');\n    var pad = shaderLines.length.toString().length + 2;\n    var linesWithLineNumbers = shaderLines.map(function (line, lineNumber) {\n        return util.rightPad((lineNumber + 1).toString(), pad) + line;\n    });\n    var maxLineLength = 0;\n    for (var i = 0; i < linesWithLineNumbers.length; i++) {\n        maxLineLength = Math.max(linesWithLineNumbers[i].length, maxLineLength);\n    }\n    var beforeErrorLines = linesWithLineNumbers.slice(0, lineNumber - 1);\n    var errorLine = linesWithLineNumbers.slice(lineNumber - 1, lineNumber);\n    var afterErrorLines = linesWithLineNumbers.slice(lineNumber);\n    console.log(beforeErrorLines.join('\\n'));\n    console.log(shaderInfoLog.split('\\n')[0]);\n    console.log(\"%c \" + util.rightPad(errorLine[0], maxLineLength), 'border:1px solid red; background-color:#e3d2d2; color:#a61717');\n    console.log(afterErrorLines.join('\\n'));\n}\nfunction createProgram(gl) {\n    return throwIfNull(gl, function () { return gl.createProgram(); }, 'Unable to create WebGLProgram.');\n}\nexports.createProgram = createProgram;\nfunction linkProgram(gl, program) {\n    callAndCheck(gl, function () { return gl.linkProgram(program); });\n    if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n        console.log(gl.getProgramInfoLog(program));\n        throw new Error('Failed to link vertex and fragment shaders.');\n    }\n}\nexports.linkProgram = linkProgram;\nfunction validateProgram(gl, program) {\n    callAndCheck(gl, function () { return gl.validateProgram(program); });\n    if (gl.getProgramParameter(program, gl.VALIDATE_STATUS) === false) {\n        console.log(gl.getProgramInfoLog(program));\n        throw new Error('Shader program validation failed.');\n    }\n}\nexports.validateProgram = validateProgram;\nfunction createStaticVertexBuffer(gl, data) {\n    var buffer = throwIfNull(gl, function () { return gl.createBuffer(); }, 'Unable to create WebGLBuffer');\n    callAndCheck(gl, function () { return gl.bindBuffer(gl.ARRAY_BUFFER, buffer); });\n    callAndCheck(gl, function () { return gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW); });\n    return buffer;\n}\nexports.createStaticVertexBuffer = createStaticVertexBuffer;\nfunction createStaticIndexBuffer(gl, data) {\n    var buffer = throwIfNull(gl, function () { return gl.createBuffer(); }, 'Unable to create WebGLBuffer');\n    callAndCheck(gl, function () { return gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer); });\n    callAndCheck(gl, function () { return gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, gl.STATIC_DRAW); });\n    return buffer;\n}\nexports.createStaticIndexBuffer = createStaticIndexBuffer;\nfunction queryMaxTextureSize(gl) {\n    if (MAX_TEXTURE_SIZE != null) {\n        return MAX_TEXTURE_SIZE;\n    }\n    MAX_TEXTURE_SIZE =\n        callAndCheck(gl, function () { return gl.getParameter(gl.MAX_TEXTURE_SIZE); });\n    return MAX_TEXTURE_SIZE;\n}\nexports.queryMaxTextureSize = queryMaxTextureSize;\nfunction getChannelsPerTexture() {\n    if (!environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED')) {\n        return 4;\n    }\n    if (environment_1.ENV.get('WEBGL_VERSION') === 2) {\n        return 1;\n    }\n    return 4;\n}\nexports.getChannelsPerTexture = getChannelsPerTexture;\nfunction createTexture(gl) {\n    return throwIfNull(gl, function () { return gl.createTexture(); }, 'Unable to create WebGLTexture.');\n}\nexports.createTexture = createTexture;\nfunction validateTextureSize(gl, width, height) {\n    var maxTextureSize = queryMaxTextureSize(gl);\n    if ((width <= 0) || (height <= 0)) {\n        var requested = \"[\" + width + \"x\" + height + \"]\";\n        throw new Error('Requested texture size ' + requested + ' is invalid.');\n    }\n    if ((width > maxTextureSize) || (height > maxTextureSize)) {\n        var requested = \"[\" + width + \"x\" + height + \"]\";\n        var max = \"[\" + maxTextureSize + \"x\" + maxTextureSize + \"]\";\n        throw new Error('Requested texture size ' + requested +\n            ' greater than WebGL maximum on this browser / GPU ' + max + '.');\n    }\n}\nexports.validateTextureSize = validateTextureSize;\nfunction createFramebuffer(gl) {\n    return throwIfNull(gl, function () { return gl.createFramebuffer(); }, 'Unable to create WebGLFramebuffer.');\n}\nexports.createFramebuffer = createFramebuffer;\nfunction bindVertexBufferToProgramAttribute(gl, program, attribute, buffer, arrayEntriesPerItem, itemStrideInBytes, itemOffsetInBytes, attribLocations) {\n    var loc = -1;\n    if ((attribLocations != null) && (attribute in attribLocations)) {\n        loc = attribLocations[attribute];\n    }\n    else {\n        loc = gl.getAttribLocation(program, attribute);\n    }\n    if (loc === -1) {\n        return;\n    }\n    callAndCheck(gl, function () { return gl.bindBuffer(gl.ARRAY_BUFFER, buffer); });\n    callAndCheck(gl, function () { return gl.vertexAttribPointer(loc, arrayEntriesPerItem, gl.FLOAT, false, itemStrideInBytes, itemOffsetInBytes); });\n    callAndCheck(gl, function () { return gl.enableVertexAttribArray(loc); });\n}\nexports.bindVertexBufferToProgramAttribute = bindVertexBufferToProgramAttribute;\nfunction bindTextureUnit(gl, texture, textureUnit) {\n    validateTextureUnit(gl, textureUnit);\n    callAndCheck(gl, function () { return gl.activeTexture(gl.TEXTURE0 + textureUnit); });\n    callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, texture); });\n}\nexports.bindTextureUnit = bindTextureUnit;\nfunction unbindTextureUnit(gl, textureUnit) {\n    validateTextureUnit(gl, textureUnit);\n    callAndCheck(gl, function () { return gl.activeTexture(gl.TEXTURE0 + textureUnit); });\n    callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\n}\nexports.unbindTextureUnit = unbindTextureUnit;\nfunction getProgramUniformLocationOrThrow(gl, program, uniformName) {\n    return throwIfNull(gl, function () { return gl.getUniformLocation(program, uniformName); }, 'uniform \"' + uniformName + '\" not present in program.');\n}\nexports.getProgramUniformLocationOrThrow = getProgramUniformLocationOrThrow;\nfunction bindTextureToProgramUniformSampler(gl, program, texture, uniformSamplerLocation, textureUnit) {\n    callAndCheck(gl, function () { return bindTextureUnit(gl, texture, textureUnit); });\n    callAndCheck(gl, function () { return gl.uniform1i(uniformSamplerLocation, textureUnit); });\n}\nexports.bindTextureToProgramUniformSampler = bindTextureToProgramUniformSampler;\nfunction bindCanvasToFramebuffer(gl) {\n    callAndCheck(gl, function () { return gl.bindFramebuffer(gl.FRAMEBUFFER, null); });\n    callAndCheck(gl, function () { return gl.viewport(0, 0, gl.canvas.width, gl.canvas.height); });\n    callAndCheck(gl, function () { return gl.scissor(0, 0, gl.canvas.width, gl.canvas.height); });\n}\nexports.bindCanvasToFramebuffer = bindCanvasToFramebuffer;\nfunction bindColorTextureToFramebuffer(gl, texture, framebuffer) {\n    callAndCheck(gl, function () { return gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer); });\n    callAndCheck(gl, function () { return gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0); });\n}\nexports.bindColorTextureToFramebuffer = bindColorTextureToFramebuffer;\nfunction unbindColorTextureFromFramebuffer(gl, framebuffer) {\n    callAndCheck(gl, function () { return gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer); });\n    callAndCheck(gl, function () { return gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, null, 0); });\n}\nexports.unbindColorTextureFromFramebuffer = unbindColorTextureFromFramebuffer;\nfunction validateFramebuffer(gl) {\n    var status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n    if (status !== gl.FRAMEBUFFER_COMPLETE) {\n        throw new Error('Error binding framebuffer: ' + getFramebufferErrorMessage(gl, status));\n    }\n}\nexports.validateFramebuffer = validateFramebuffer;\nfunction getFramebufferErrorMessage(gl, status) {\n    switch (status) {\n        case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n            return 'FRAMEBUFFER_INCOMPLETE_ATTACHMENT';\n        case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n            return 'FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT';\n        case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n            return 'FRAMEBUFFER_INCOMPLETE_DIMENSIONS';\n        case gl.FRAMEBUFFER_UNSUPPORTED:\n            return 'FRAMEBUFFER_UNSUPPORTED';\n        default:\n            return \"unknown error \" + status;\n    }\n}\nexports.getFramebufferErrorMessage = getFramebufferErrorMessage;\nfunction throwIfNull(gl, returnTOrNull, failureMessage) {\n    var tOrNull = callAndCheck(gl, function () { return returnTOrNull(); });\n    if (tOrNull == null) {\n        throw new Error(failureMessage);\n    }\n    return tOrNull;\n}\nfunction validateTextureUnit(gl, textureUnit) {\n    var maxTextureUnit = gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS - 1;\n    var glTextureUnit = textureUnit + gl.TEXTURE0;\n    if (glTextureUnit < gl.TEXTURE0 || glTextureUnit > maxTextureUnit) {\n        var textureUnitRange = \"[gl.TEXTURE0, gl.TEXTURE\" + maxTextureUnit + \"]\";\n        throw new Error(\"textureUnit must be in \" + textureUnitRange + \".\");\n    }\n}\nfunction getTextureShapeFromLogicalShape(gl, logShape) {\n    if (logShape.length !== 2) {\n        var squeezeResult = util.squeezeShape(logShape);\n        logShape = squeezeResult.newShape;\n    }\n    var maxTexSize = queryMaxTextureSize(gl);\n    var size = util.sizeFromShape(logShape);\n    if (logShape.length <= 1 && size <= maxTexSize) {\n        return [size, 1];\n    }\n    else if (logShape.length === 2 && logShape[0] <= maxTexSize &&\n        logShape[1] <= maxTexSize) {\n        return logShape;\n    }\n    else if (logShape.length === 3 && logShape[0] <= maxTexSize &&\n        logShape[1] * logShape[2] <= maxTexSize) {\n        return [logShape[0], logShape[1] * logShape[2]];\n    }\n    else if (logShape.length === 4 && logShape[0] <= maxTexSize &&\n        logShape[1] * logShape[2] * logShape[3] <= maxTexSize) {\n        return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n    }\n    else {\n        return util.sizeToSquarishShape(size);\n    }\n}\nexports.getTextureShapeFromLogicalShape = getTextureShapeFromLogicalShape;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/webgl_util.js\n// module id = WQ8k\n// module chunks = 0","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_property-desc.js\n// module id = X8DO\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graph_util = require(\"../graph_util\");\nvar op_1 = require(\"./op\");\nvar Exp = (function (_super) {\n    __extends(Exp, _super);\n    function Exp(xTensor, yTensor) {\n        var _this = _super.call(this) || this;\n        _this.xTensor = xTensor;\n        _this.yTensor = yTensor;\n        return _this;\n    }\n    Exp.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x = inferenceArrays.get(this.xTensor);\n        math.scope(function (keep) {\n            inferenceArrays.set(_this.yTensor, keep(math.exp(x)));\n        });\n    };\n    Exp.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var y = inferenceArrays.get(this.yTensor);\n        var dy = gradientArrays.get(this.yTensor);\n        math.scope(function () {\n            if (graph_util.shouldBackProp(_this.xTensor)) {\n                gradientArrays.add(_this.xTensor, math.elementWiseMul(y, dy));\n            }\n        });\n    };\n    return Exp;\n}(op_1.Operation));\nexports.Exp = Exp;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/ops/exp.js\n// module id = XGXz\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MultinomialProgram = (function () {\n    function MultinomialProgram(batchSize, numOutcomes, numSamples) {\n        this.variableNames = ['probs'];\n        this.outputShape = [batchSize, numSamples];\n        this.userCode = \"\\n      uniform float seed;\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n\\n        float r = random(seed);\\n        float cdf = 0.0;\\n\\n        for (int i = 0; i < \" + (numOutcomes - 1) + \"; i++) {\\n          cdf += getProbs(batch, i);\\n\\n          if (r < cdf) {\\n            setOutput(float(i));\\n            return;\\n          }\\n        }\\n\\n        // If no other event happened, last event happened.\\n        setOutput(float(\" + (numOutcomes - 1) + \"));\\n      }\\n    \";\n    }\n    MultinomialProgram.prototype.getCustomSetupFunc = function (seed) {\n        var _this = this;\n        return function (gpgpu, webGLProgram) {\n            if (_this.seedLoc == null) {\n                _this.seedLoc = gpgpu.getUniformLocation(webGLProgram, 'seed');\n            }\n            gpgpu.gl.uniform1f(_this.seedLoc, seed);\n        };\n    };\n    return MultinomialProgram;\n}());\nexports.MultinomialProgram = MultinomialProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/multinomial_gpu.js\n// module id = XZBy\n// module chunks = 0","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.is-iterable');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/is-iterable.js\n// module id = Xd32\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = require(\"../math/ndarray\");\nvar util = require(\"../util\");\nvar STATS_SAMPLE_PERCENTAGE = 0.1;\nvar InMemoryDataset = (function () {\n    function InMemoryDataset(dataShapes) {\n        this.dataShapes = dataShapes;\n        this.normalizationInfo = {};\n    }\n    InMemoryDataset.prototype.getDataShape = function (dataIndex) {\n        return this.dataShapes[dataIndex];\n    };\n    InMemoryDataset.prototype.getData = function () {\n        return this.dataset;\n    };\n    InMemoryDataset.prototype.getStats = function () {\n        var _this = this;\n        if (this.dataset == null) {\n            throw new Error('Data is null.');\n        }\n        return this.dataset.map(function (d) { return _this.getStatsForData(d); });\n    };\n    InMemoryDataset.prototype.getStatsForData = function (data) {\n        var inputMin = Number.POSITIVE_INFINITY;\n        var inputMax = Number.NEGATIVE_INFINITY;\n        var exampleIndices = data.map(function (example, i) { return i; });\n        util.shuffle(exampleIndices);\n        exampleIndices =\n            exampleIndices.slice(exampleIndices.length * STATS_SAMPLE_PERCENTAGE);\n        for (var i = 0; i < exampleIndices.length; i++) {\n            var inputValues = data[exampleIndices[i]].getValues();\n            for (var j = 0; j < inputValues.length; j++) {\n                inputMin = Math.min(inputMin, inputValues[j]);\n                inputMax = Math.max(inputMax, inputValues[j]);\n            }\n        }\n        return {\n            inputMin: inputMin,\n            inputMax: inputMax,\n            exampleCount: data.length,\n            shape: data[0].shape,\n        };\n    };\n    InMemoryDataset.prototype.normalizeExamplesToRange = function (examples, curLowerBounds, curUpperBounds, newLowerBounds, newUpperBounds) {\n        var curBoundsIsPerDimension = (curUpperBounds instanceof Float32Array &&\n            curLowerBounds instanceof Float32Array);\n        var newBoundsIsPerDimension = (newLowerBounds instanceof Float32Array &&\n            newUpperBounds instanceof Float32Array);\n        var inputSize = util.sizeFromShape(examples[0].shape);\n        var newExamples = [];\n        examples.forEach(function (example) {\n            var inputValues = example.getValues();\n            var normalizedValues = new Float32Array(inputSize);\n            for (var j = 0; j < inputSize; j++) {\n                var curLowerBound = curBoundsIsPerDimension ?\n                    curLowerBounds[j] :\n                    curLowerBounds;\n                var curUpperBound = curBoundsIsPerDimension ?\n                    curUpperBounds[j] :\n                    curUpperBounds;\n                var curRange = curUpperBound - curLowerBound;\n                var newLowerBound = newBoundsIsPerDimension ?\n                    newLowerBounds[j] :\n                    newLowerBounds;\n                var newUpperBound = newBoundsIsPerDimension ?\n                    newUpperBounds[j] :\n                    newUpperBounds;\n                var newRange = newUpperBound - newLowerBound;\n                if (curRange === 0) {\n                    normalizedValues[j] = newLowerBound;\n                }\n                else {\n                    normalizedValues[j] = newLowerBound +\n                        newRange * (inputValues[j] - curLowerBound) / curRange;\n                }\n            }\n            newExamples.push(ndarray_1.NDArray.make(example.shape, { values: normalizedValues }, 'float32'));\n        });\n        return newExamples;\n    };\n    InMemoryDataset.prototype.computeBounds = function (dataIndex) {\n        var _this = this;\n        if (this.dataset == null) {\n            throw new Error('Data is null.');\n        }\n        var size = util.sizeFromShape(this.dataset[dataIndex][0].shape);\n        this.normalizationInfo[dataIndex] = {\n            isNormalized: false,\n            minValues: new Float32Array(size),\n            maxValues: new Float32Array(size)\n        };\n        for (var i = 0; i < size; i++) {\n            this.normalizationInfo[dataIndex].minValues[i] = Number.POSITIVE_INFINITY;\n            this.normalizationInfo[dataIndex].maxValues[i] = Number.NEGATIVE_INFINITY;\n        }\n        this.dataset[dataIndex].forEach(function (example) {\n            var inputValues = example.getValues();\n            for (var k = 0; k < size; k++) {\n                _this.normalizationInfo[dataIndex].minValues[k] = Math.min(_this.normalizationInfo[dataIndex].minValues[k], inputValues[k]);\n                _this.normalizationInfo[dataIndex].maxValues[k] = Math.max(_this.normalizationInfo[dataIndex].maxValues[k], inputValues[k]);\n            }\n        });\n    };\n    InMemoryDataset.prototype.normalizeWithinBounds = function (dataIndex, lowerBound, upperBound) {\n        if (this.dataset == null) {\n            throw new Error('Data is null.');\n        }\n        if (dataIndex >= this.dataset.length) {\n            throw new Error('dataIndex out of bounds.');\n        }\n        if (this.normalizationInfo[dataIndex] == null) {\n            this.computeBounds(dataIndex);\n        }\n        var curLowerBounds;\n        var curUpperBounds;\n        if (this.normalizationInfo[dataIndex].isNormalized) {\n            curLowerBounds = this.normalizationInfo[dataIndex].lowerBound;\n            curUpperBounds = this.normalizationInfo[dataIndex].upperBound;\n        }\n        else {\n            curLowerBounds = this.normalizationInfo[dataIndex].minValues;\n            curUpperBounds = this.normalizationInfo[dataIndex].maxValues;\n        }\n        this.dataset[dataIndex] = this.normalizeExamplesToRange(this.dataset[dataIndex], curLowerBounds, curUpperBounds, lowerBound, upperBound);\n        this.normalizationInfo[dataIndex].isNormalized = true;\n        this.normalizationInfo[dataIndex].lowerBound = lowerBound;\n        this.normalizationInfo[dataIndex].upperBound = upperBound;\n    };\n    InMemoryDataset.prototype.isNormalized = function (dataIndex) {\n        return this.normalizationInfo != null &&\n            this.normalizationInfo[dataIndex].isNormalized;\n    };\n    InMemoryDataset.prototype.removeNormalization = function (dataIndex) {\n        if (this.dataset == null) {\n            throw new Error('Training or test data is null.');\n        }\n        if (!this.isNormalized(dataIndex)) {\n            return;\n        }\n        this.dataset[dataIndex] = this.normalizeExamplesToRange(this.dataset[dataIndex], this.normalizationInfo[dataIndex].lowerBound, this.normalizationInfo[dataIndex].upperBound, this.normalizationInfo[dataIndex].minValues, this.normalizationInfo[dataIndex].maxValues);\n        this.normalizationInfo[dataIndex].isNormalized = false;\n    };\n    InMemoryDataset.prototype.unnormalizeExamples = function (examples, dataIndex) {\n        if (!this.isNormalized(dataIndex)) {\n            return examples;\n        }\n        return this.normalizeExamplesToRange(examples, this.normalizationInfo[dataIndex].lowerBound, this.normalizationInfo[dataIndex].upperBound, this.normalizationInfo[dataIndex].minValues, this.normalizationInfo[dataIndex].maxValues);\n    };\n    InMemoryDataset.prototype.dispose = function () {\n        if (this.dataset == null) {\n            return;\n        }\n        for (var i = 0; i < this.dataset.length; i++) {\n            for (var j = 0; j < this.dataset[i].length; j++) {\n                this.dataset[i][j].dispose();\n            }\n        }\n        this.dataset = [];\n    };\n    return InMemoryDataset;\n}());\nexports.InMemoryDataset = InMemoryDataset;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/data/dataset.js\n// module id = Xkia\n// module chunks = 0","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/regenerator/index.js\n// module id = Xxa5\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar OneHotProgram = (function () {\n    function OneHotProgram(numIndices, depth, onValue, offValue) {\n        this.variableNames = ['indices'];\n        this.outputShape = [numIndices, depth];\n        this.userCode = \"\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int index = round(getIndices(coords.x));\\n        setOutput(mix(float(\" + offValue + \"), float(\" + onValue + \"),\\n                      float(index == coords.y)));\\n      }\\n    \";\n    }\n    OneHotProgram.prototype.getCustomSetupFunc = function (seed) {\n        var _this = this;\n        return function (gpgpu, webGLProgram) {\n            if (_this.seedLoc == null) {\n                _this.seedLoc = gpgpu.getUniformLocation(webGLProgram, 'seed');\n            }\n            gpgpu.gl.uniform1f(_this.seedLoc, seed);\n        };\n    };\n    return OneHotProgram;\n}());\nexports.OneHotProgram = OneHotProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/onehot_gpu.js\n// module id = Y78X\n// module chunks = 0","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-create.js\n// module id = Yobk\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar seedrandom = require(\"seedrandom\");\nvar environment_1 = require(\"../../environment\");\nvar util = require(\"../../util\");\nvar broadcast_util = require(\"../broadcast_util\");\nvar concat_util = require(\"../concat_util\");\nvar math_1 = require(\"../math\");\nvar ndarray_1 = require(\"../ndarray\");\nvar types = require(\"../types\");\nvar types_1 = require(\"../types\");\nvar axis_util = require(\"./../axis_util\");\nvar matmul_1 = require(\"./types/matmul\");\nvar MathBackendCPU = (function () {\n    function MathBackendCPU() {\n        this.data = {};\n    }\n    MathBackendCPU.prototype.dispose = function () { };\n    MathBackendCPU.prototype.write = function (id, values, dtype, shape) {\n        this.data[id] = values;\n    };\n    MathBackendCPU.prototype.writePixels = function (id, pixels, numChannels) {\n        var vals;\n        if (pixels instanceof ImageData) {\n            vals = pixels.data;\n        }\n        else if (pixels instanceof HTMLCanvasElement) {\n            vals = pixels.getContext('2d')\n                .getImageData(0, 0, pixels.width, pixels.height)\n                .data;\n        }\n        else if (pixels instanceof HTMLImageElement ||\n            pixels instanceof HTMLVideoElement) {\n            var canvas = document.createElement('canvas');\n            canvas.width = pixels.width;\n            canvas.height = pixels.height;\n            canvas.getContext('2d').drawImage(pixels, 0, 0, canvas.width, canvas.height);\n            vals = canvas.getContext('2d')\n                .getImageData(0, 0, canvas.width, canvas.height)\n                .data;\n        }\n        else {\n            throw new Error(\"pixels is of unknown type: \" + pixels.constructor.name);\n        }\n        var values;\n        if (numChannels === 4) {\n            values = new Int32Array(vals);\n        }\n        else {\n            var numPixels = pixels.width * pixels.height;\n            values = new Int32Array(numPixels * numChannels);\n            for (var i = 0; i < numPixels; i++) {\n                for (var channel = 0; channel < numChannels; ++channel) {\n                    values[i * numChannels + channel] = vals[i * 4 + channel];\n                }\n            }\n        }\n        this.data[id] = values;\n    };\n    MathBackendCPU.prototype.read = function (id) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.throwIfNoData(id);\n                return [2, this.data[id]];\n            });\n        });\n    };\n    MathBackendCPU.prototype.readSync = function (id) {\n        this.throwIfNoData(id);\n        return this.data[id];\n    };\n    MathBackendCPU.prototype.disposeData = function (id) {\n        delete this.data[id];\n    };\n    MathBackendCPU.prototype.time = function (query) {\n        return __awaiter(this, void 0, void 0, function () {\n            var start;\n            return __generator(this, function (_a) {\n                start = performance.now();\n                query();\n                return [2, performance.now() - start];\n            });\n        });\n    };\n    MathBackendCPU.prototype.throwIfNoData = function (id) {\n        if (!(id in this.data)) {\n            throw new Error(\"No data found for NDArray with id \" + id + \". \" +\n                \"Use dl.ENV.math instead of constructing your own NDArrayMath. \" +\n                \"If you need to construct your own math, make sure this array is \" +\n                \"allocated after the math construction\");\n        }\n    };\n    MathBackendCPU.prototype.clone = function (x) {\n        return ndarray_1.NDArray.make(x.shape, { values: new Float32Array(x.getValues()) });\n    };\n    MathBackendCPU.prototype.slice1D = function (x, begin, size) {\n        var newVals = x.getValues().slice(begin, begin + size);\n        return ndarray_1.Array1D.new(newVals);\n    };\n    MathBackendCPU.prototype.slice2D = function (x, begin, size) {\n        var result = ndarray_1.Array2D.zeros(size);\n        var startI = begin[0], startJ = begin[1];\n        for (var i = 0; i < size[0]; ++i) {\n            for (var j = 0; j < size[1]; ++j) {\n                var val = x.get(i + startI, j + startJ);\n                result.set(val, i, j);\n            }\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.slice3D = function (x, begin, size) {\n        var result = ndarray_1.Array3D.zeros(size);\n        var startI = begin[0], startJ = begin[1], startK = begin[2];\n        for (var i = 0; i < size[0]; ++i) {\n            for (var j = 0; j < size[1]; ++j) {\n                for (var k = 0; k < size[2]; ++k) {\n                    var val = x.get(i + startI, j + startJ, k + startK);\n                    result.set(val, i, j, k);\n                }\n            }\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.slice4D = function (x, begin, size) {\n        var result = ndarray_1.Array4D.zeros(size);\n        var startI = begin[0], startJ = begin[1], startK = begin[2], startL = begin[3];\n        for (var i = 0; i < size[0]; ++i) {\n            for (var j = 0; j < size[1]; ++j) {\n                for (var k = 0; k < size[2]; ++k) {\n                    for (var l = 0; l < size[3]; ++l) {\n                        var val = x.get(i + startI, j + startJ, k + startK, l + startL);\n                        result.set(val, i, j, k, l);\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.concat1D = function (a, b) {\n        var outShape = concat_util.computeOutShape(a.shape, b.shape, 0);\n        var result = ndarray_1.Array1D.zeros(outShape);\n        var aVals = a.getValues();\n        var bVals = b.getValues();\n        var vals = result.getValues();\n        vals.set(aVals, 0);\n        vals.set(bVals, a.size);\n        return result;\n    };\n    MathBackendCPU.prototype.concat2D = function (a, b, axis) {\n        var outShape = concat_util.computeOutShape(a.shape, b.shape, axis);\n        var result = ndarray_1.Array2D.zeros(outShape);\n        if (axis === 0) {\n            var aVals = a.getValues();\n            var bVals = b.getValues();\n            var vals = result.getValues();\n            vals.set(aVals, 0);\n            vals.set(bVals, a.size);\n            return result;\n        }\n        for (var i = 0; i < outShape[0]; ++i) {\n            for (var j = 0; j < outShape[1]; ++j) {\n                var index = [i, j];\n                var value = void 0;\n                if (index[axis] < a.shape[axis]) {\n                    value = a.get(i, j);\n                }\n                else {\n                    index[axis] -= a.shape[axis];\n                    var i2 = index[0], j2 = index[1];\n                    value = b.get(i2, j2);\n                }\n                result.set(value, i, j);\n            }\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.concat3D = function (a, b, axis) {\n        var outShape = concat_util.computeOutShape(a.shape, b.shape, axis);\n        var result = ndarray_1.Array3D.zeros(outShape);\n        if (axis === 0) {\n            var aVals = a.getValues();\n            var bVals = b.getValues();\n            var vals = result.getValues();\n            vals.set(aVals, 0);\n            vals.set(bVals, a.size);\n            return result;\n        }\n        for (var i = 0; i < outShape[0]; ++i) {\n            for (var j = 0; j < outShape[1]; ++j) {\n                for (var k = 0; k < outShape[2]; ++k) {\n                    var index = [i, j, k];\n                    var value = void 0;\n                    if (index[axis] < a.shape[axis]) {\n                        value = a.get(i, j, k);\n                    }\n                    else {\n                        index[axis] -= a.shape[axis];\n                        var i2 = index[0], j2 = index[1], k2 = index[2];\n                        value = b.get(i2, j2, k2);\n                    }\n                    result.set(value, i, j, k);\n                }\n            }\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.concat4D = function (a, b, axis) {\n        var outShape = concat_util.computeOutShape(a.shape, b.shape, axis);\n        var result = ndarray_1.Array4D.zeros(outShape);\n        if (axis === 0) {\n            var aVals = a.getValues();\n            var bVals = b.getValues();\n            var vals = result.getValues();\n            vals.set(aVals, 0);\n            vals.set(bVals, a.size);\n            return result;\n        }\n        for (var i = 0; i < outShape[0]; ++i) {\n            for (var j = 0; j < outShape[1]; ++j) {\n                for (var k = 0; k < outShape[2]; ++k) {\n                    for (var l = 0; l < outShape[3]; ++l) {\n                        var index = [i, j, k, l];\n                        var value = void 0;\n                        if (index[axis] < a.shape[axis]) {\n                            value = a.get(i, j, k, l);\n                        }\n                        else {\n                            index[axis] -= a.shape[axis];\n                            var i2 = index[0], j2 = index[1], k2 = index[2], l2 = index[3];\n                            value = b.get(i2, j2, k2, l2);\n                        }\n                        result.set(value, i, j, k, l);\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.neg = function (x) {\n        return this.multiply(ndarray_1.Scalar.new(-1), x);\n    };\n    MathBackendCPU.prototype.add = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, types.upcastType(a.dtype, b.dtype), function (aValue, bValue) { return aValue + bValue; });\n    };\n    MathBackendCPU.prototype.subtract = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, types.upcastType(a.dtype, b.dtype), function (aValue, bValue) { return aValue - bValue; });\n    };\n    MathBackendCPU.prototype.pow = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, a.dtype, function (aValue, bValue) { return Math.pow(aValue, bValue); });\n    };\n    MathBackendCPU.prototype.matMul = function (a, b, aOrientation, bOrientation) {\n        if (aOrientation === void 0) { aOrientation = matmul_1.MatrixOrientation.REGULAR; }\n        if (bOrientation === void 0) { bOrientation = matmul_1.MatrixOrientation.REGULAR; }\n        var sharedDim = (aOrientation === matmul_1.MatrixOrientation.REGULAR) ? a.shape[1] : a.shape[0];\n        var leftDim = (aOrientation === matmul_1.MatrixOrientation.REGULAR) ? a.shape[0] : a.shape[1];\n        var rightDim = (bOrientation === matmul_1.MatrixOrientation.REGULAR) ? b.shape[1] : b.shape[0];\n        var normalGetter = function (matrix, i, j) {\n            return matrix.get(i, j);\n        };\n        var transposedGetter = function (matrix, i, j) {\n            return matrix.get(j, i);\n        };\n        var aGetter = (aOrientation === matmul_1.MatrixOrientation.REGULAR) ?\n            normalGetter :\n            transposedGetter;\n        var bGetter = (bOrientation === matmul_1.MatrixOrientation.REGULAR) ?\n            normalGetter :\n            transposedGetter;\n        var values = new Float32Array(leftDim * rightDim);\n        var index = 0;\n        for (var i = 0; i < leftDim; ++i) {\n            for (var j = 0; j < rightDim; ++j) {\n                var sum = 0;\n                for (var k = 0; k < sharedDim; ++k) {\n                    sum += aGetter(a, i, k) * bGetter(b, k, j);\n                }\n                values[index++] = sum;\n            }\n        }\n        return ndarray_1.Array2D.new([leftDim, rightDim], values);\n    };\n    MathBackendCPU.prototype.multiply = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, types.upcastType(a.dtype, b.dtype), function (aValue, bValue) { return aValue * bValue; });\n    };\n    MathBackendCPU.prototype.divide = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, 'float32', function (aValue, bValue) { return aValue / bValue; });\n    };\n    MathBackendCPU.prototype.sum = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('sum', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var resultDtype = types_1.SumTypesMap[x.dtype];\n        var result = ndarray_1.NDArray.zeros(outShape, resultDtype);\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = result.getValues();\n        var aVals = x.getValues();\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var sum = 0;\n            for (var j = 0; j < reduceSize; ++j) {\n                sum += aVals[offset + j];\n            }\n            vals[i] = sum;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.argMin = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('argMin', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var result = ndarray_1.NDArray.zeros(outShape, 'int32');\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = result.getValues();\n        var aVals = x.getValues();\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var min = aVals[offset];\n            var minIndex = 0;\n            for (var j = 0; j < reduceSize; ++j) {\n                var value = aVals[offset + j];\n                if (isNaN(value)) {\n                    minIndex = util.NAN_INT32;\n                    break;\n                }\n                if (value < min) {\n                    min = value;\n                    minIndex = j;\n                }\n            }\n            vals[i] = minIndex;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.argMax = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('argMax', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var result = ndarray_1.NDArray.zeros(outShape, 'int32');\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = result.getValues();\n        var aVals = x.getValues();\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var max = aVals[offset];\n            var maxIndex = 0;\n            for (var j = 0; j < reduceSize; ++j) {\n                var value = aVals[offset + j];\n                if (isNaN(value)) {\n                    maxIndex = util.NAN_INT32;\n                    break;\n                }\n                if (value > max) {\n                    max = value;\n                    maxIndex = j;\n                }\n            }\n            vals[i] = maxIndex;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.equal = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, 'bool', function (aVal, bVal) {\n            if (util.isValNaN(aVal, a.dtype) || util.isValNaN(bVal, b.dtype)) {\n                return util.getNaN('bool');\n            }\n            else {\n                return (aVal === bVal) ? 1 : 0;\n            }\n        });\n    };\n    MathBackendCPU.prototype.topKValues = function (x, k) {\n        return this.topK(x, k).values;\n    };\n    MathBackendCPU.prototype.topKIndices = function (x, k) {\n        return this.topK(x, k).indices;\n    };\n    MathBackendCPU.prototype.topK = function (x, k) {\n        var values = x.getValues();\n        var valuesAndIndices = [];\n        for (var i = 0; i < values.length; i++) {\n            valuesAndIndices.push({ value: values[i], index: i });\n        }\n        valuesAndIndices.sort(function (a, b) {\n            return b.value - a.value;\n        });\n        var topkValues = util.getTypedArrayFromDType(x.dtype, k);\n        var topkIndices = new Int32Array(k);\n        for (var i = 0; i < k; i++) {\n            topkValues[i] = valuesAndIndices[i].value;\n            topkIndices[i] = valuesAndIndices[i].index;\n        }\n        return {\n            values: ndarray_1.Array1D.new(topkValues),\n            indices: ndarray_1.Array1D.new(topkIndices)\n        };\n    };\n    MathBackendCPU.prototype.min = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('min', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var result = ndarray_1.NDArray.zeros(outShape, x.dtype);\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = result.getValues();\n        var aVals = x.getValues();\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var min = aVals[0];\n            for (var j = 0; j < reduceSize; ++j) {\n                var value = aVals[offset + j];\n                if (isNaN(value)) {\n                    min = Number.NaN;\n                    break;\n                }\n                if (value < min) {\n                    min = value;\n                }\n            }\n            vals[i] = min;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.max = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('max', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var result = ndarray_1.NDArray.zeros(outShape, x.dtype);\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = result.getValues();\n        var aVals = x.getValues();\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var max = aVals[offset];\n            for (var j = 0; j < reduceSize; ++j) {\n                var value = aVals[offset + j];\n                if (isNaN(value)) {\n                    max = Number.NaN;\n                    break;\n                }\n                if (value > max) {\n                    max = value;\n                }\n            }\n            vals[i] = max;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.ceil = function (x) {\n        var values = x.getValues();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            newValues[i] = Math.ceil(values[i]);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.floor = function (x) {\n        var values = x.getValues();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            newValues[i] = Math.floor(values[i]);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.exp = function (x) {\n        var values = x.getValues();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            newValues[i] = Math.exp(values[i]);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.log = function (x) {\n        var values = x.getValues();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            var value = values[i];\n            newValues[i] = Math.log(value);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.sqrt = function (x) {\n        var values = x.getValues();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            var value = values[i];\n            newValues[i] = Math.sqrt(value);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.square = function (x) {\n        var values = x.getValues();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            var value = values[i];\n            newValues[i] = value * value;\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.relu = function (x) {\n        var res = ndarray_1.NDArray.zeros(x.shape, x.dtype);\n        var resVals = res.getValues();\n        var inVals = x.getValues();\n        for (var i = 0; i < inVals.length; ++i) {\n            var val = inVals[i];\n            if (util.isValNaN(val, x.dtype)) {\n                resVals[i] = util.getNaN(res.dtype);\n            }\n            else {\n                resVals[i] = Math.max(0, inVals[i]);\n            }\n        }\n        return res;\n    };\n    MathBackendCPU.prototype.elu = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            var v = values[i];\n            if (v >= 0) {\n                resultValues[i] = v;\n            }\n            else {\n                resultValues[i] = (Math.exp(v) - 1);\n            }\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.eluDer = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            var v = values[i];\n            if (v >= 0) {\n                resultValues[i] = 1;\n            }\n            else {\n                resultValues[i] = Math.exp(v);\n            }\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.selu = function (x) {\n        var scaleAlpha = 1.7580993408473768599402175208123;\n        var scale = 1.0507009873554804934193349852946;\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            var v = values[i];\n            if (v >= 0) {\n                resultValues[i] = scale * v;\n            }\n            else {\n                resultValues[i] = scaleAlpha * (Math.exp(v) - 1);\n            }\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.leakyRelu = function (x, alpha) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; i++) {\n            var v = values[i];\n            if (v >= 0) {\n                resultValues[i] = v;\n            }\n            else {\n                resultValues[i] = alpha * v;\n            }\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.prelu = function (x, alpha) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        var alphas = alpha.dataSync();\n        for (var i = 0; i < values.length; i++) {\n            var v = values[i];\n            if (v >= 0) {\n                resultValues[i] = v;\n            }\n            else {\n                resultValues[i] = alphas[i] * v;\n            }\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.preluDer = function (x, alpha) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        var alphas = alpha.dataSync();\n        for (var i = 0; i < values.length; i++) {\n            var v = values[i];\n            if (v > 0) {\n                resultValues[i] = 1;\n            }\n            else if (v < 0) {\n                resultValues[i] = alphas[i];\n            }\n            else {\n                resultValues[i] = v;\n            }\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.clip = function (x, min, max) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.min(max, Math.max(min, values[i]));\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.abs = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.abs(values[i]);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.sigmoid = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = 1 / (1 + Math.exp(-values[i]));\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.sin = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.sin(values[i]);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.cos = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.cos(values[i]);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.tan = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.tan(values[i]);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.asin = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.asin(values[i]);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.acos = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.acos(values[i]);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.atan = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.atan(values[i]);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.sinh = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.sinh(values[i]);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.cosh = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.cosh(values[i]);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.tanh = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = util.tanh(values[i]);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.step = function (x, alpha) {\n        if (alpha === void 0) { alpha = 0; }\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        for (var i = 0; i < values.length; ++i) {\n            var value = values[i];\n            if (util.isValNaN(value, x.dtype)) {\n                resultValues[i] = util.getNaN(x.dtype);\n            }\n            else {\n                resultValues[i] = value > 0 ? 1 : alpha;\n            }\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.conv2d = function (x, filter, bias, convInfo) {\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var padLeft = convInfo.padInfo.left;\n        var padTop = convInfo.padInfo.top;\n        var y = ndarray_1.Array4D.zeros(convInfo.outShape);\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                for (var yR = 0; yR < convInfo.outHeight; ++yR) {\n                    var xRCorner = yR * convInfo.strideHeight - padLeft;\n                    var xRMin = Math.max(0, xRCorner);\n                    var xRMax = Math.min(convInfo.inHeight, filterHeight + xRCorner);\n                    for (var yC = 0; yC < convInfo.outWidth; ++yC) {\n                        var xCCorner = yC * convInfo.strideWidth - padTop;\n                        var xCMin = Math.max(0, xCCorner);\n                        var xCMax = Math.min(convInfo.inWidth, filterWidth + xCCorner);\n                        var dotProd = 0;\n                        for (var xR = xRMin; xR < xRMax; ++xR) {\n                            var wR = xR - xRCorner;\n                            for (var xC = xCMin; xC < xCMax; ++xC) {\n                                var wC = xC - xCCorner;\n                                for (var d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                                    var pixel = x.get(b, xR, xC, d1);\n                                    var weight = filter.get(wR, wC, d1, d2);\n                                    dotProd += pixel * weight;\n                                }\n                            }\n                        }\n                        var biasVal = (bias != null) ? bias.get(d2) : 0;\n                        y.set(dotProd + biasVal, b, yR, yC, d2);\n                    }\n                }\n            }\n        }\n        return y;\n    };\n    MathBackendCPU.prototype.conv2dDerInput = function (dy, filter, convInfo) {\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var topPad = filterHeight - 1 - convInfo.padInfo.top;\n        var leftPad = filterWidth - 1 - convInfo.padInfo.left;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var dx = ndarray_1.Array4D.zeros(convInfo.inShape);\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                for (var xR = 0; xR < convInfo.inHeight; ++xR) {\n                    var xRCorner = xR - leftPad;\n                    var xRMin = Math.max(0, Math.ceil(xRCorner / strideHeight));\n                    var yRMax = Math.min(convInfo.outHeight, (filterHeight + xRCorner) / strideHeight);\n                    for (var xC = 0; xC < convInfo.inWidth; ++xC) {\n                        var xCCorner = xC - topPad;\n                        var xCMin = Math.max(0, Math.ceil(xCCorner / strideWidth));\n                        var yCMax = Math.min(convInfo.outWidth, (filterWidth + xCCorner) / strideWidth);\n                        var dotProd = 0;\n                        for (var yR = xRMin; yR < yRMax; ++yR) {\n                            var wR = yR * strideHeight - xRCorner;\n                            for (var yC = xCMin; yC < yCMax; ++yC) {\n                                var wC = yC * strideWidth - xCCorner;\n                                for (var d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                                    var pixel = dy.get(b, yR, yC, d2);\n                                    var weight = filter.get(filterHeight - 1 - wR, filterWidth - 1 - wC, d1, d2);\n                                    dotProd += pixel * weight;\n                                }\n                            }\n                        }\n                        dx.set(dotProd, b, xR, xC, d1);\n                    }\n                }\n            }\n        }\n        return dx;\n    };\n    MathBackendCPU.prototype.conv2dDerFilter = function (x, dy, convInfo) {\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var dW = ndarray_1.Array4D.zeros(convInfo.filterShape);\n        var leftPad = convInfo.padInfo.left;\n        var topPad = convInfo.padInfo.top;\n        for (var wR = 0; wR < filterHeight; ++wR) {\n            var yRMin = Math.max(0, Math.ceil((topPad - wR) / strideHeight));\n            var yRMax = Math.min(convInfo.outHeight, (convInfo.inHeight + topPad - wR) / strideHeight);\n            for (var wC = 0; wC < filterWidth; ++wC) {\n                var yCMin = Math.max(0, Math.ceil((leftPad - wC) / strideWidth));\n                var yCMax = Math.min(convInfo.outWidth, (convInfo.inWidth + leftPad - wC) / strideWidth);\n                for (var d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                    for (var d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                        var dotProd = 0;\n                        for (var b = 0; b < convInfo.batchSize; ++b) {\n                            for (var yR = yRMin; yR < yRMax; ++yR) {\n                                var xR = wR + yR * strideHeight - topPad;\n                                for (var yC = yCMin; yC < yCMax; ++yC) {\n                                    var xC = wC + yC * strideWidth - leftPad;\n                                    dotProd += x.get(b, xR, xC, d1) * dy.get(b, yR, yC, d2);\n                                }\n                            }\n                        }\n                        dW.set(dotProd, wR, wC, d1, d2);\n                    }\n                }\n            }\n        }\n        return dW;\n    };\n    MathBackendCPU.prototype.conv2dDerBias = function (dy) {\n        var _a = dy.shape, batchSize = _a[0], numRows = _a[1], numCols = _a[2], outDepth = _a[3];\n        var values = new Float32Array(outDepth);\n        for (var d2 = 0; d2 < outDepth; ++d2) {\n            var sum = 0;\n            for (var b = 0; b < batchSize; ++b) {\n                for (var r = 0; r < numRows; ++r) {\n                    for (var c = 0; c < numCols; ++c) {\n                        sum += dy.get(b, r, c, d2);\n                    }\n                }\n            }\n            values[d2] = sum;\n        }\n        return ndarray_1.Array1D.new(values);\n    };\n    MathBackendCPU.prototype.depthwiseConv2D = function (x, filter, convInfo) {\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var padLeft = convInfo.padInfo.left;\n        var padTop = convInfo.padInfo.top;\n        var chMul = convInfo.outChannels / convInfo.inChannels;\n        var y = ndarray_1.Array4D.zeros(convInfo.outShape);\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                for (var yR = 0; yR < convInfo.outHeight; ++yR) {\n                    var xRCorner = yR * convInfo.strideHeight - padLeft;\n                    var xRMin = Math.max(0, xRCorner);\n                    var xRMax = Math.min(convInfo.inHeight, filterHeight + xRCorner);\n                    for (var yC = 0; yC < convInfo.outWidth; ++yC) {\n                        var xCCorner = yC * convInfo.strideWidth - padTop;\n                        var xCMin = Math.max(0, xCCorner);\n                        var xCMax = Math.min(convInfo.inWidth, filterWidth + xCCorner);\n                        for (var q = 0; q < chMul; ++q) {\n                            var dotProd = 0;\n                            for (var xR = xRMin; xR < xRMax; ++xR) {\n                                var wR = xR - xRCorner;\n                                for (var xC = xCMin; xC < xCMax; ++xC) {\n                                    var wC = xC - xCCorner;\n                                    var pixel = x.get(b, xR, xC, d1);\n                                    var weight = filter.get(wR, wC, d1, q);\n                                    dotProd += pixel * weight;\n                                }\n                            }\n                            y.set(dotProd, b, yR, yC, d1 * chMul + q);\n                        }\n                    }\n                }\n            }\n        }\n        return y;\n    };\n    MathBackendCPU.prototype.tile = function (x, reps) {\n        var newShape = new Array(x.rank);\n        for (var i = 0; i < newShape.length; i++) {\n            newShape[i] = x.shape[i] * reps[i];\n        }\n        var dtype;\n        if (x.dtype === 'float32') {\n            dtype = Float32Array;\n        }\n        else if (x.dtype === 'int32') {\n            dtype = Int32Array;\n        }\n        else if (x.dtype === 'bool') {\n            dtype = Uint8Array;\n        }\n        else {\n            throw new Error(\"Dtype \" + x.dtype + \" not supported for tile\");\n        }\n        var resultValues = new dtype(util.sizeFromShape(newShape));\n        var result = ndarray_1.NDArray.make(newShape, { values: resultValues }, x.dtype);\n        var values = x.getValues();\n        for (var i = 0; i < result.size; ++i) {\n            var newLoc = result.indexToLoc(i);\n            var originalLoc = new Array(x.rank);\n            for (var i_1 = 0; i_1 < originalLoc.length; i_1++) {\n                originalLoc[i_1] = newLoc[i_1] % x.shape[i_1];\n            }\n            var originalIndex = x.locToIndex(originalLoc);\n            resultValues[i] = values[originalIndex];\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.transpose = function (x, perm) {\n        var newShape = new Array(x.rank);\n        for (var i = 0; i < newShape.length; i++) {\n            newShape[i] = x.shape[perm[i]];\n        }\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        var result = ndarray_1.NDArray.make(newShape, { values: resultValues });\n        for (var i = 0; i < x.size; ++i) {\n            var loc = x.indexToLoc(i);\n            var newLoc = new Array(loc.length);\n            for (var i_2 = 0; i_2 < newLoc.length; i_2++) {\n                newLoc[i_2] = loc[perm[i_2]];\n            }\n            var newIndex = result.locToIndex(newLoc);\n            resultValues[newIndex] = values[i];\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.pool = function (x, convInfo, poolType) {\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var y = ndarray_1.Array4D.zeros(convInfo.outShape);\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d = 0; d < convInfo.inChannels; ++d) {\n                for (var yR = 0; yR < convInfo.outHeight; ++yR) {\n                    var xRCorner = yR * strideHeight - padTop;\n                    var xRMin = Math.max(0, xRCorner);\n                    var xRMax = Math.min(convInfo.inHeight, filterHeight + xRCorner);\n                    for (var yC = 0; yC < convInfo.outWidth; ++yC) {\n                        var xCCorner = yC * strideWidth - padLeft;\n                        var xCMin = Math.max(0, xCCorner);\n                        var xCMax = Math.min(convInfo.inWidth, filterWidth + xCCorner);\n                        var minMaxValue = (poolType === 'max' ? Number.NEGATIVE_INFINITY :\n                            Number.POSITIVE_INFINITY);\n                        var avgValue = 0;\n                        for (var xR = xRMin; xR < xRMax; ++xR) {\n                            for (var xC = xCMin; xC < xCMax; ++xC) {\n                                var pixel = x.get(b, xR, xC, d);\n                                if (isNaN(pixel)) {\n                                    minMaxValue = NaN;\n                                    avgValue = NaN;\n                                    break;\n                                }\n                                if ((poolType === 'max' && pixel > minMaxValue) ||\n                                    (poolType === 'min' && pixel < minMaxValue)) {\n                                    minMaxValue = pixel;\n                                }\n                                else if (poolType === 'avg') {\n                                    avgValue += pixel / (filterHeight * filterWidth);\n                                }\n                            }\n                            if (isNaN(minMaxValue)) {\n                                break;\n                            }\n                        }\n                        y.set(poolType === 'avg' ? avgValue : minMaxValue, b, yR, yC, d);\n                    }\n                }\n            }\n        }\n        return y;\n    };\n    MathBackendCPU.prototype.maxPool = function (x, convInfo) {\n        return this.pool(x, convInfo, 'max');\n    };\n    MathBackendCPU.prototype.maxPoolPositions = function (x, convInfo) {\n        var maxPositions = ndarray_1.Array4D.zeros(convInfo.outShape);\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d = 0; d < convInfo.inChannels; ++d) {\n                for (var yR = 0; yR < convInfo.outHeight; ++yR) {\n                    var xRCorner = yR * strideHeight - padTop;\n                    var xRMin = Math.max(0, xRCorner);\n                    var xRMax = Math.min(convInfo.inHeight, filterHeight + xRCorner);\n                    for (var yC = 0; yC < convInfo.outWidth; ++yC) {\n                        var xCCorner = yC * strideWidth - padLeft;\n                        var xCMin = Math.max(0, xCCorner);\n                        var xCMax = Math.min(convInfo.inWidth, filterWidth + xCCorner);\n                        var maxValue = Number.NEGATIVE_INFINITY;\n                        var maxPosition = -1;\n                        for (var xR = xRMin; xR < xRMax; ++xR) {\n                            var wR = xR - xRCorner;\n                            for (var xC = xCMin; xC < xCMax; ++xC) {\n                                var wC = xC - xCCorner;\n                                var pixel = x.get(b, xR, xC, d);\n                                if (pixel > maxValue) {\n                                    maxValue = pixel;\n                                    maxPosition = wR * filterWidth + wC;\n                                }\n                            }\n                        }\n                        maxPositions.set(maxPosition, b, yR, yC, d);\n                    }\n                }\n            }\n        }\n        return maxPositions;\n    };\n    MathBackendCPU.prototype.maxPoolBackprop = function (dy, x, convInfo) {\n        var maxPositions = this.maxPoolPositions(x, convInfo);\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var padLeft = filterWidth - 1 - convInfo.padInfo.left;\n        var padTop = filterHeight - 1 - convInfo.padInfo.top;\n        var dx = ndarray_1.Array4D.zeros(x.shape);\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d = 0; d < convInfo.inChannels; ++d) {\n                for (var dxR = 0; dxR < convInfo.inHeight; ++dxR) {\n                    for (var dxC = 0; dxC < convInfo.inWidth; ++dxC) {\n                        var dyRCorner = dxR - padTop;\n                        var dyCCorner = dxC - padLeft;\n                        var dotProd = 0;\n                        for (var wR = 0; wR < filterHeight; ++wR) {\n                            var dyR = (dyRCorner + wR) / strideHeight;\n                            if (dyR < 0 || dyR >= convInfo.outHeight ||\n                                Math.floor(dyR) !== dyR) {\n                                continue;\n                            }\n                            for (var wC = 0; wC < filterWidth; ++wC) {\n                                var dyC = (dyCCorner + wC) / strideWidth;\n                                if (dyC < 0 || dyC >= convInfo.outWidth ||\n                                    Math.floor(dyC) !== dyC) {\n                                    continue;\n                                }\n                                var maxPos = filterHeight * filterWidth - 1 -\n                                    maxPositions.get(b, dyR, dyC, d);\n                                var curPos = wR * filterWidth + wC;\n                                var mask = maxPos === curPos ? 1 : 0;\n                                if (mask === 0) {\n                                    continue;\n                                }\n                                var pixel = dy.get(b, dyR, dyC, d);\n                                dotProd += pixel * mask;\n                            }\n                        }\n                        dx.set(dotProd, b, dxR, dxC, d);\n                    }\n                }\n            }\n        }\n        return dx;\n    };\n    MathBackendCPU.prototype.minPool = function (x, convInfo) {\n        return this.pool(x, convInfo, 'min');\n    };\n    MathBackendCPU.prototype.avgPool = function (x, convInfo) {\n        return this.pool(x, convInfo, 'avg');\n    };\n    MathBackendCPU.prototype.resizeBilinear3D = function (x, newShape2D, alignCorners) {\n        var output = ndarray_1.Array3D.zeros([newShape2D[0], newShape2D[1], x.shape[2]]);\n        var effectiveInputSize = alignCorners ? [x.shape[0] - 1, x.shape[1] - 1, x.shape[2]] : x.shape;\n        var effectiveOutputSize = alignCorners ?\n            [output.shape[0] - 1, output.shape[1] - 1, output.shape[2]] :\n            output.shape;\n        for (var r = 0; r < output.shape[0]; r++) {\n            for (var c = 0; c < output.shape[1]; c++) {\n                for (var d = 0; d < output.shape[2]; d++) {\n                    var sourceFracRow = (effectiveInputSize[0]) * r / (effectiveOutputSize[0]);\n                    var sourceFracCol = (effectiveInputSize[1]) * c / (effectiveOutputSize[1]);\n                    var sourceRowFloor = Math.floor(sourceFracRow);\n                    var sourceRowCeil = Math.min(x.shape[0] - 1, Math.ceil(sourceFracRow));\n                    var sourceColFloor = Math.floor(sourceFracCol);\n                    var sourceColCeil = Math.min(x.shape[1] - 1, Math.ceil(sourceFracCol));\n                    var topLeft = x.get(sourceRowFloor, sourceColFloor, d);\n                    var bottomLeft = x.get(sourceRowCeil, sourceColFloor, d);\n                    var topRight = x.get(sourceRowFloor, sourceColCeil, d);\n                    var bottomRight = x.get(sourceRowCeil, sourceColCeil, d);\n                    var rowFrac = sourceFracRow - sourceRowFloor;\n                    var colFrac = sourceFracCol - sourceColFloor;\n                    var top_1 = topLeft + (topRight - topLeft) * colFrac;\n                    var bottom = bottomLeft + (bottomRight - bottomLeft) * colFrac;\n                    var newValue = top_1 + (bottom - top_1) * rowFrac;\n                    output.set(newValue, r, c, d);\n                }\n            }\n        }\n        return output;\n    };\n    MathBackendCPU.prototype.batchNormalization2D = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        var xValues = x.getValues();\n        var meanValues = mean.getValues();\n        var varianceValues = variance.getValues();\n        var scaleValues = scale ? scale.getValues() : new Float32Array([1]);\n        var offsetValues = offset ? offset.getValues() : new Float32Array([0]);\n        var outValues = new Float32Array(xValues.length);\n        for (var i = 0; i < xValues.length; i++) {\n            outValues[i] = offsetValues[i % offsetValues.length] +\n                (xValues[i] - meanValues[i % meanValues.length]) *\n                    scaleValues[i % scaleValues.length] /\n                    Math.sqrt(varianceValues[i % varianceValues.length] + varianceEpsilon);\n        }\n        return ndarray_1.Array2D.new(x.shape, outValues);\n    };\n    MathBackendCPU.prototype.batchNormalization3D = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        var xValues = x.getValues();\n        var meanValues = mean.getValues();\n        var varianceValues = variance.getValues();\n        var scaleValues = scale ? scale.getValues() : new Float32Array([1]);\n        var offsetValues = offset ? offset.getValues() : new Float32Array([0]);\n        var outValues = new Float32Array(xValues.length);\n        for (var i = 0; i < xValues.length; i++) {\n            outValues[i] = offsetValues[i % offsetValues.length] +\n                (xValues[i] - meanValues[i % meanValues.length]) *\n                    scaleValues[i % scaleValues.length] /\n                    Math.sqrt(varianceValues[i % varianceValues.length] + varianceEpsilon);\n        }\n        return ndarray_1.Array3D.new(x.shape, outValues);\n    };\n    MathBackendCPU.prototype.multinomial = function (probabilities, numSamples, seed) {\n        var batchSize = probabilities.shape[0];\n        var numEvents = probabilities.shape[1];\n        var res = ndarray_1.Array2D.zeros([batchSize, numSamples], 'int32');\n        var resVals = res.getValues();\n        var probVals = probabilities.getValues();\n        for (var b = 0; b < batchSize; ++b) {\n            var offset = b * numEvents;\n            var cdf = new Float32Array(numEvents - 1);\n            cdf[0] = probVals[offset];\n            for (var event_1 = 1; event_1 < cdf.length; ++event_1) {\n                cdf[event_1] = cdf[event_1 - 1] + probVals[offset + event_1];\n            }\n            var random = seedrandom.alea(seed.toString());\n            var outOffset = b * numSamples;\n            for (var sampleId = 0; sampleId < numSamples; ++sampleId) {\n                var r = random();\n                resVals[outOffset + sampleId] = cdf.length;\n                for (var event_2 = 0; event_2 < cdf.length; event_2++) {\n                    if (r < cdf[event_2]) {\n                        resVals[outOffset + sampleId] = event_2;\n                        break;\n                    }\n                }\n            }\n        }\n        return res;\n    };\n    MathBackendCPU.prototype.oneHot = function (indices, depth, onValue, offValue) {\n        var res = new Float32Array(indices.size * depth);\n        res.fill(offValue);\n        for (var event_3 = 0; event_3 < indices.size; ++event_3) {\n            res[event_3 * depth + indices.get(event_3)] = onValue;\n        }\n        return ndarray_1.Array2D.new([indices.size, depth], res);\n    };\n    MathBackendCPU.prototype.broadcastedBinaryOp = function (a, b, dtype, op) {\n        var newShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var result = ndarray_1.NDArray.zeros(newShape, dtype);\n        var newValues = result.getValues();\n        var aValues = a.getValues();\n        var bValues = b.getValues();\n        var aBroadcastDims = broadcast_util.getBroadcastDims(a.shape, newShape);\n        var bBroadcastDims = broadcast_util.getBroadcastDims(b.shape, newShape);\n        var _loop_1 = function (i) {\n            var loc = result.indexToLoc(i);\n            var aLoc = loc.slice(-a.rank);\n            aBroadcastDims.forEach(function (d) { return aLoc[d] = 0; });\n            var aIndex = a.locToIndex(aLoc);\n            var bLoc = loc.slice(-b.rank);\n            bBroadcastDims.forEach(function (d) { return bLoc[d] = 0; });\n            var bIndex = b.locToIndex(bLoc);\n            newValues[i] = op(aValues[aIndex], bValues[bIndex]);\n        };\n        for (var i = 0; i < newValues.length; ++i) {\n            _loop_1(i);\n        }\n        return result;\n    };\n    return MathBackendCPU;\n}());\nexports.MathBackendCPU = MathBackendCPU;\nenvironment_1.ENV.registerBackend('cpu', function () { return new MathBackendCPU(); });\nvar NDArrayMathCPU = (function (_super) {\n    __extends(NDArrayMathCPU, _super);\n    function NDArrayMathCPU(safeMode) {\n        if (safeMode === void 0) { safeMode = false; }\n        var _this = this;\n        console.warn('new NDArrayMathCPU() is deprecated. Please use the global ' +\n            'dl.ENV.math. In rare cases, to construct your own NDArrayMath ' +\n            'that runs on CPU, use math = new NDArrayMath(\\'cpu\\', safeMode); ' +\n            'and make sure to set it as global: dl.ENV.setMath(math);');\n        _this = _super.call(this, 'cpu', safeMode) || this;\n        environment_1.ENV.setMath(_this);\n        return _this;\n    }\n    return NDArrayMathCPU;\n}(math_1.NDArrayMath));\nexports.NDArrayMathCPU = NDArrayMathCPU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/backend_cpu.js\n// module id = Z92E\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/classCallCheck.js\n// module id = Zrlr\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar matmul_1 = require(\"../../math/backends/types/matmul\");\nvar graph_util = require(\"../graph_util\");\nvar op_1 = require(\"./op\");\nvar MatMul = (function (_super) {\n    __extends(MatMul, _super);\n    function MatMul(x1Tensor, x2Tensor, yTensor) {\n        var _this = _super.call(this) || this;\n        _this.x1Tensor = x1Tensor;\n        _this.x2Tensor = x2Tensor;\n        _this.yTensor = yTensor;\n        return _this;\n    }\n    MatMul.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x1 = inferenceArrays.get(this.x1Tensor);\n        var x2 = inferenceArrays.get(this.x2Tensor);\n        math.scope(function (keep) {\n            if (x1.shape.length === 2 && x2.shape.length === 2) {\n                inferenceArrays.set(_this.yTensor, keep(math.matMul(x1, x2)));\n            }\n            else if (x1.shape.length === 2 && x2.shape.length === 1) {\n                inferenceArrays.set(_this.yTensor, keep(math.matrixTimesVector(x1, x2)));\n            }\n            else if (x1.shape.length === 1 && x2.shape.length === 2) {\n                inferenceArrays.set(_this.yTensor, keep(math.vectorTimesMatrix(x1, x2)));\n            }\n        });\n    };\n    MatMul.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var x1 = inferenceArrays.get(this.x1Tensor);\n        var x2 = inferenceArrays.get(this.x2Tensor);\n        var dy = gradientArrays.get(this.yTensor);\n        if (x1.shape.length === 1) {\n            x1 = x1.reshape([1, x1.size]);\n            dy = dy.reshape([1, dy.size]);\n        }\n        if (x2.shape.length === 1) {\n            x2 = x2.reshape([x2.size, 1]);\n            dy = dy.reshape([dy.size, 1]);\n        }\n        math.scope(function () {\n            if (graph_util.shouldBackProp(_this.x1Tensor)) {\n                var dx1 = math.matMul(dy, x2, matmul_1.MatrixOrientation.REGULAR, matmul_1.MatrixOrientation.TRANSPOSED);\n                gradientArrays.add(_this.x1Tensor, _this.x1Tensor.shape.length === 1 ? dx1.as1D() : dx1);\n            }\n            if (graph_util.shouldBackProp(_this.x2Tensor)) {\n                var dx2 = math.matMul(x1, dy, matmul_1.MatrixOrientation.TRANSPOSED, matmul_1.MatrixOrientation.REGULAR);\n                gradientArrays.add(_this.x2Tensor, _this.x2Tensor.shape.length === 1 ? dx2.as1D() : dx2);\n            }\n        });\n    };\n    return MatMul;\n}(op_1.Operation));\nexports.MatMul = MatMul;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/ops/matmul.js\n// module id = ac8B\n// module chunks = 0","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_shared-key.js\n// module id = ax3d\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../../environment\");\nvar ndarray_1 = require(\"../ndarray\");\nfunction getFilteredNodesXToY(tape, xs, y) {\n    var arraysFromX = {};\n    var nodesFromX = {};\n    for (var i = 0; i < xs.length; i++) {\n        arraysFromX[xs[i].id] = true;\n    }\n    for (var i = 0; i < tape.length; i++) {\n        var node = tape[i];\n        var nodeInputs = node.inputAndArgs.inputs;\n        for (var inputName in nodeInputs) {\n            var input = nodeInputs[inputName];\n            var anyInputFromX = false;\n            for (var j = 0; j < xs.length; j++) {\n                if (arraysFromX[input.id]) {\n                    if (node.output instanceof ndarray_1.NDArray) {\n                        arraysFromX[node.output.id] = true;\n                    }\n                    else {\n                        var keys = Object.keys(node.output);\n                        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                            var key = keys_1[_i];\n                            arraysFromX[node.output[key].id] = true;\n                        }\n                    }\n                    anyInputFromX = true;\n                    nodesFromX[node.id] = true;\n                    break;\n                }\n            }\n            if (anyInputFromX) {\n                break;\n            }\n        }\n    }\n    var arraysLeadToY = {};\n    arraysLeadToY[y.id] = true;\n    var nodesToY = {};\n    for (var i = tape.length - 1; i >= 0; i--) {\n        var node = tape[i];\n        var nodeInputs = node.inputAndArgs.inputs;\n        var outputs = [];\n        if (node.output instanceof ndarray_1.NDArray) {\n            outputs.push(node.output);\n        }\n        else {\n            var keys = Object.keys(node.output);\n            for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n                var key = keys_2[_a];\n                outputs.push(node.output[key]);\n            }\n        }\n        for (var j = 0; j < outputs.length; j++) {\n            if (arraysLeadToY[outputs[j].id]) {\n                for (var inputName in nodeInputs) {\n                    arraysLeadToY[nodeInputs[inputName].id] = true;\n                    nodesToY[node.id] = true;\n                }\n                break;\n            }\n        }\n    }\n    var filteredTape = [];\n    for (var i = 0; i < tape.length; i++) {\n        var node = tape[i];\n        if (nodesFromX[node.id] && nodesToY[node.id]) {\n            var prunedInputs = {};\n            for (var inputName in node.inputAndArgs.inputs) {\n                var nodeInput = node.inputAndArgs.inputs[inputName];\n                if (arraysFromX[nodeInput.id]) {\n                    prunedInputs[inputName] = nodeInput;\n                }\n            }\n            var prunedOutputs = void 0;\n            if (node.output instanceof ndarray_1.NDArray) {\n                prunedOutputs = node.output;\n            }\n            else {\n                prunedOutputs = {};\n                for (var outputName in node.output) {\n                    var output = node.output[outputName];\n                    if (arraysLeadToY[output.id]) {\n                        prunedOutputs[outputName] = node.output[outputName];\n                    }\n                }\n            }\n            var prunedNode = Object.assign({}, node);\n            prunedNode.inputAndArgs = { inputs: prunedInputs };\n            prunedNode.output = prunedOutputs;\n            filteredTape.push(prunedNode);\n        }\n    }\n    return filteredTape;\n}\nexports.getFilteredNodesXToY = getFilteredNodesXToY;\nfunction backpropagateGradients(arrayAccumulatedGradientMap, filteredTape) {\n    for (var i = filteredTape.length - 1; i >= 0; i--) {\n        var node = filteredTape[i];\n        var dy = void 0;\n        if (node.output instanceof ndarray_1.NDArray) {\n            dy = arrayAccumulatedGradientMap[node.output.id];\n        }\n        else {\n            dy = {};\n            var keys = Object.keys(node.output);\n            for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n                var key = keys_3[_i];\n                dy[key] = arrayAccumulatedGradientMap[node.output[key].id];\n            }\n        }\n        if (node.gradient == null) {\n            throw new Error(\"Cannot compute gradient: gradient function not found for\\n              \" + node.name + \".\");\n        }\n        var inputGradients = node.gradient(dy, node.output);\n        for (var inputName in node.inputAndArgs.inputs) {\n            if (!(inputName in inputGradients)) {\n                throw new Error(\"Cannot backprop through input \" +\n                    (node.name + \".\" + inputName + \". Gradients found: \") +\n                    (Object.keys(inputGradients) + \".\"));\n            }\n            var grad = inputGradients[inputName]();\n            var activation = node.inputAndArgs.inputs[inputName];\n            if (arrayAccumulatedGradientMap[activation.id] == null) {\n                arrayAccumulatedGradientMap[activation.id] = grad;\n            }\n            else {\n                var curGradient = arrayAccumulatedGradientMap[activation.id];\n                arrayAccumulatedGradientMap[activation.id] =\n                    environment_1.ENV.math.add(curGradient, grad);\n                curGradient.dispose();\n            }\n        }\n    }\n}\nexports.backpropagateGradients = backpropagateGradients;\nfunction computeInputs(tape) {\n    var outputArrays = {};\n    for (var i = 0; i < tape.length; i++) {\n        var node = tape[i];\n        if (node.output instanceof ndarray_1.NDArray) {\n            outputArrays[node.output.id] = true;\n        }\n        else {\n            var keys = Object.keys(node.output);\n            for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n                var key = keys_4[_i];\n                outputArrays[node.output[key].id] = true;\n            }\n        }\n    }\n    var inputArrays = {};\n    var inputArraysSeen = {};\n    var idx = 0;\n    for (var i = 0; i < tape.length; i++) {\n        var node = tape[i];\n        var inputs = node.inputAndArgs.inputs;\n        var keys = Object.keys(inputs);\n        for (var _a = 0, keys_5 = keys; _a < keys_5.length; _a++) {\n            var key = keys_5[_a];\n            if (!outputArrays[inputs[key].id] && !inputArraysSeen[inputs[key].id]) {\n                inputArrays[(idx++).toString()] = inputs[key];\n                inputArraysSeen[inputs[key].id] = true;\n            }\n        }\n    }\n    return inputArrays;\n}\nexports.computeInputs = computeInputs;\nfunction extractNDArraysFromScopeResult(result) {\n    if (result == null) {\n        return [];\n    }\n    if (result instanceof ndarray_1.NDArray) {\n        return [result];\n    }\n    var list = [];\n    var resultObj = result;\n    for (var k in resultObj) {\n        var val = resultObj[k];\n        if (val instanceof ndarray_1.NDArray) {\n            list.push(val);\n        }\n    }\n    return list;\n}\nexports.extractNDArraysFromScopeResult = extractNDArraysFromScopeResult;\nfunction stripUndefinedInputsFromInputConfig(config) {\n    var keys = Object.keys(config.inputs);\n    keys.forEach(function (key) {\n        if (config.inputs[key] == null) {\n            delete config.inputs[key];\n        }\n    });\n    return config;\n}\nexports.stripUndefinedInputsFromInputConfig = stripUndefinedInputsFromInputConfig;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/tape_util.js\n// module id = ayDV\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../environment\");\nvar ndarray_1 = require(\"./ndarray\");\nvar SquareCostFunc = (function () {\n    function SquareCostFunc() {\n        this.halfOne = environment_1.ENV.math.keep(ndarray_1.Scalar.new(0.5));\n    }\n    SquareCostFunc.prototype.cost = function (math, x1, x2) {\n        var diff = math.subStrict(x1, x2);\n        var diffSquared = math.elementWiseMul(diff, diff);\n        var result = math.scalarTimesArray(this.halfOne, diffSquared);\n        diff.dispose();\n        diffSquared.dispose();\n        return result;\n    };\n    SquareCostFunc.prototype.der = function (math, x1, x2) {\n        return math.subStrict(x1, x2);\n    };\n    SquareCostFunc.prototype.dispose = function () {\n        this.halfOne.dispose();\n    };\n    return SquareCostFunc;\n}());\nexports.SquareCostFunc = SquareCostFunc;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/cost_functions.js\n// module id = bGD+\n// module chunks = 0","'use strict';\nvar global = require('./_global');\nvar core = require('./_core');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_set-species.js\n// module id = bRrM\n// module chunks = 0","/**\n  * vue-class-component v6.1.2\n  * (c) 2015-2017 Evan You\n  * @license MIT\n  */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Vue = _interopDefault(require('vue'));\n\nvar hasProto = { __proto__: [] } instanceof Array;\nfunction createDecorator(factory) {\n    return function (target, key, index) {\n        var Ctor = typeof target === 'function'\n            ? target\n            : target.constructor;\n        if (!Ctor.__decorators__) {\n            Ctor.__decorators__ = [];\n        }\n        if (typeof index !== 'number') {\n            index = undefined;\n        }\n        Ctor.__decorators__.push(function (options) { return factory(options, key, index); });\n    };\n}\nfunction isPrimitive(value) {\n    var type = typeof value;\n    return value == null || (type !== \"object\" && type !== \"function\");\n}\nfunction warn(message) {\n    if (typeof console !== 'undefined') {\n        console.warn('[vue-class-component] ' + message);\n    }\n}\n\nfunction collectDataFromConstructor(vm, Component) {\n    var originalInit = Component.prototype._init;\n    Component.prototype._init = function () {\n        var _this = this;\n        var keys = Object.getOwnPropertyNames(vm);\n        if (vm.$options.props) {\n            for (var key in vm.$options.props) {\n                if (!vm.hasOwnProperty(key)) {\n                    keys.push(key);\n                }\n            }\n        }\n        keys.forEach(function (key) {\n            if (key.charAt(0) !== '_') {\n                Object.defineProperty(_this, key, {\n                    get: function () { return vm[key]; },\n                    set: function (value) { return vm[key] = value; },\n                    configurable: true\n                });\n            }\n        });\n    };\n    var data = new Component();\n    Component.prototype._init = originalInit;\n    var plainData = {};\n    Object.keys(data).forEach(function (key) {\n        if (data[key] !== undefined) {\n            plainData[key] = data[key];\n        }\n    });\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(Component.prototype instanceof Vue) && Object.keys(plainData).length > 0) {\n            warn('Component class must inherit Vue or its descendant class ' +\n                'when class property is used.');\n        }\n    }\n    return plainData;\n}\n\nvar $internalHooks = [\n    'data',\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeDestroy',\n    'destroyed',\n    'beforeUpdate',\n    'updated',\n    'activated',\n    'deactivated',\n    'render',\n    'errorCaptured'\n];\nfunction componentFactory(Component, options) {\n    if (options === void 0) { options = {}; }\n    options.name = options.name || Component._componentTag || Component.name;\n    var proto = Component.prototype;\n    Object.getOwnPropertyNames(proto).forEach(function (key) {\n        if (key === 'constructor') {\n            return;\n        }\n        if ($internalHooks.indexOf(key) > -1) {\n            options[key] = proto[key];\n            return;\n        }\n        var descriptor = Object.getOwnPropertyDescriptor(proto, key);\n        if (typeof descriptor.value === 'function') {\n            (options.methods || (options.methods = {}))[key] = descriptor.value;\n        }\n        else if (descriptor.get || descriptor.set) {\n            (options.computed || (options.computed = {}))[key] = {\n                get: descriptor.get,\n                set: descriptor.set\n            };\n        }\n    });\n    (options.mixins || (options.mixins = [])).push({\n        data: function () {\n            return collectDataFromConstructor(this, Component);\n        }\n    });\n    var decorators = Component.__decorators__;\n    if (decorators) {\n        decorators.forEach(function (fn) { return fn(options); });\n        delete Component.__decorators__;\n    }\n    var superProto = Object.getPrototypeOf(Component.prototype);\n    var Super = superProto instanceof Vue\n        ? superProto.constructor\n        : Vue;\n    var Extended = Super.extend(options);\n    forwardStaticMembers(Extended, Component, Super);\n    return Extended;\n}\nvar reservedPropertyNames = [\n    'cid',\n    'super',\n    'options',\n    'superOptions',\n    'extendOptions',\n    'sealedOptions',\n    'component',\n    'directive',\n    'filter'\n];\nfunction forwardStaticMembers(Extended, Original, Super) {\n    Object.getOwnPropertyNames(Original).forEach(function (key) {\n        if (key === 'prototype') {\n            return;\n        }\n        var extendedDescriptor = Object.getOwnPropertyDescriptor(Extended, key);\n        if (extendedDescriptor && !extendedDescriptor.configurable) {\n            return;\n        }\n        var descriptor = Object.getOwnPropertyDescriptor(Original, key);\n        if (!hasProto) {\n            if (key === 'cid') {\n                return;\n            }\n            var superDescriptor = Object.getOwnPropertyDescriptor(Super, key);\n            if (!isPrimitive(descriptor.value)\n                && superDescriptor\n                && superDescriptor.value === descriptor.value) {\n                return;\n            }\n        }\n        if (process.env.NODE_ENV !== 'production'\n            && reservedPropertyNames.indexOf(key) >= 0) {\n            warn(\"Static property name '\" + key + \"' declared on class '\" + Original.name + \"' \" +\n                'conflicts with reserved property name of Vue internal. ' +\n                'It may cause unexpected behavior of the component. Consider renaming the property.');\n        }\n        Object.defineProperty(Extended, key, descriptor);\n    });\n}\n\nfunction Component(options) {\n    if (typeof options === 'function') {\n        return componentFactory(options);\n    }\n    return function (Component) {\n        return componentFactory(Component, options);\n    };\n}\n(function (Component) {\n    function registerHooks(keys) {\n        $internalHooks.push.apply($internalHooks, keys);\n    }\n    Component.registerHooks = registerHooks;\n})(Component || (Component = {}));\nvar Component$1 = Component;\n\nexports['default'] = Component$1;\nexports.createDecorator = createDecorator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-class-component/dist/vue-class-component.common.js\n// module id = c+8m\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../../environment\");\nvar cost_functions_1 = require(\"../../math/cost_functions\");\nvar ndarray_1 = require(\"../../math/ndarray\");\nvar util = require(\"../../util\");\nvar graph_util = require(\"../graph_util\");\nvar op_1 = require(\"./op\");\nvar ElementWiseCost = (function (_super) {\n    __extends(ElementWiseCost, _super);\n    function ElementWiseCost(x1Tensor, x2Tensor, yTensor, func) {\n        var _this = _super.call(this) || this;\n        _this.x1Tensor = x1Tensor;\n        _this.x2Tensor = x2Tensor;\n        _this.yTensor = yTensor;\n        _this.func = func;\n        _this.oneOverNScalar =\n            environment_1.ENV.math.keep(ndarray_1.Scalar.new(1 / util.sizeFromShape(x1Tensor.shape)));\n        return _this;\n    }\n    ElementWiseCost.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x1 = inferenceArrays.get(this.x1Tensor);\n        var x2 = inferenceArrays.get(this.x2Tensor);\n        math.scope(function (keep) {\n            var elementWiseCost = _this.func.cost(math, x1, x2);\n            var sum = math.sum(elementWiseCost);\n            var result = math.scalarTimesArray(_this.oneOverNScalar, sum);\n            inferenceArrays.set(_this.yTensor, keep(result));\n        });\n    };\n    ElementWiseCost.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var x1 = inferenceArrays.get(this.x1Tensor);\n        var x2 = inferenceArrays.get(this.x2Tensor);\n        math.scope(function () {\n            if (graph_util.shouldBackProp(_this.x1Tensor)) {\n                gradientArrays.add(_this.x1Tensor, _this.func.der(math, x1, x2));\n            }\n            if (graph_util.shouldBackProp(_this.x2Tensor)) {\n                gradientArrays.add(_this.x2Tensor, _this.func.der(math, x2, x1));\n            }\n        });\n    };\n    ElementWiseCost.prototype.dispose = function () {\n        this.func.dispose();\n        this.oneOverNScalar.dispose();\n    };\n    return ElementWiseCost;\n}(op_1.Operation));\nexports.ElementWiseCost = ElementWiseCost;\nvar MeanSquaredCost = (function (_super) {\n    __extends(MeanSquaredCost, _super);\n    function MeanSquaredCost(x1Tensor, x2Tensor, yTensor) {\n        return _super.call(this, x1Tensor, x2Tensor, yTensor, new cost_functions_1.SquareCostFunc()) || this;\n    }\n    return MeanSquaredCost;\n}(ElementWiseCost));\nexports.MeanSquaredCost = MeanSquaredCost;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/ops/element_wise_cost.js\n// module id = cJi8\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _isIterable2 = require(\"../core-js/is-iterable\");\n\nvar _isIterable3 = _interopRequireDefault(_isIterable2);\n\nvar _getIterator2 = require(\"../core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if ((0, _isIterable3.default)(Object(arr))) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/slicedToArray.js\n// module id = d7EF\n// module chunks = 0","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_perform.js\n// module id = dNDb\n// module chunks = 0","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_wks.js\n// module id = dSzd\n// module chunks = 0","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-detect.js\n// module id = dY0y\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar concat_util = require(\"../../math/concat_util\");\nvar op_1 = require(\"./op\");\nvar Concat3D = (function (_super) {\n    __extends(Concat3D, _super);\n    function Concat3D(x1Tensor, x2Tensor, axis, yTensor) {\n        var _this = _super.call(this) || this;\n        _this.x1Tensor = x1Tensor;\n        _this.x2Tensor = x2Tensor;\n        _this.axis = axis;\n        _this.yTensor = yTensor;\n        concat_util.assertParams(x1Tensor.shape, x2Tensor.shape, axis);\n        return _this;\n    }\n    Concat3D.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x1 = inferenceArrays.get(this.x1Tensor);\n        var x2 = inferenceArrays.get(this.x2Tensor);\n        math.scope(function (keep) {\n            var concatResult = math.concat3D(x1, x2, _this.axis);\n            inferenceArrays.set(_this.yTensor, keep(concatResult));\n        });\n    };\n    Concat3D.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        throw new Error('Concat3D backprop not implemented.');\n    };\n    return Concat3D;\n}(op_1.Operation));\nexports.Concat3D = Concat3D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/ops/concat3d.js\n// module id = da8W\n// module chunks = 0","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/seedrandom/lib/xor128.js\n// module id = di0+\n// module chunks = 0","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_set-to-string-tag.js\n// module id = e6n0\n// module chunks = 0","var global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_shared.js\n// module id = e8AB\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction axesAreInnerMostDims(axes, rank) {\n    for (var i = 0; i < axes.length; ++i) {\n        if (axes[axes.length - i - 1] !== rank - 1 - i) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.axesAreInnerMostDims = axesAreInnerMostDims;\nfunction combineLocations(outputLoc, reduceLoc, axes) {\n    var rank = outputLoc.length + reduceLoc.length;\n    var loc = [];\n    var outIdx = 0;\n    var reduceIdx = 0;\n    for (var dim = 0; dim < rank; dim++) {\n        if (axes.indexOf(dim) === -1) {\n            loc.push(outputLoc[outIdx++]);\n        }\n        else {\n            loc.push(reduceLoc[reduceIdx++]);\n        }\n    }\n    return loc;\n}\nexports.combineLocations = combineLocations;\nfunction computeOutAndReduceShapes(aShape, axes) {\n    var outShape = [];\n    var rank = aShape.length;\n    for (var dim = 0; dim < rank; dim++) {\n        if (axes.indexOf(dim) === -1) {\n            outShape.push(aShape[dim]);\n        }\n    }\n    var reduceShape = axes.map(function (dim) { return aShape[dim]; });\n    return [outShape, reduceShape];\n}\nexports.computeOutAndReduceShapes = computeOutAndReduceShapes;\nfunction expandShapeToKeepDim(shape, axes) {\n    var reduceSubShape = axes.map(function (x) { return 1; });\n    return combineLocations(shape, reduceSubShape, axes);\n}\nexports.expandShapeToKeepDim = expandShapeToKeepDim;\nfunction parseAxisParam(axis, shape) {\n    if (axis == null) {\n        axis = shape.map(function (s, i) { return i; });\n    }\n    else if (typeof (axis) === 'number') {\n        axis = [axis];\n    }\n    return axis;\n}\nexports.parseAxisParam = parseAxisParam;\nfunction assertAxesAreInnerMostDims(msg, axes, rank) {\n    if (!axesAreInnerMostDims(axes, rank)) {\n        throw new Error(msg + \" supports only inner-most axes for now. \" +\n            (\"Got axes \" + axes + \" and rank-\" + rank + \" input.\"));\n    }\n}\nexports.assertAxesAreInnerMostDims = assertAxesAreInnerMostDims;\nfunction getPermutedAxes(axes, rank) {\n    if (axesAreInnerMostDims(axes, rank)) {\n        return null;\n    }\n    var result = [];\n    for (var i = 0; i < rank; ++i) {\n        if (axes.indexOf(i) === -1) {\n            result.push(i);\n        }\n    }\n    axes.forEach(function (axis) { return result.push(axis); });\n    return result;\n}\nexports.getPermutedAxes = getPermutedAxes;\nfunction getInnerMostAxes(numAxes, rank) {\n    var res = [];\n    for (var i = rank - numAxes; i < rank; ++i) {\n        res.push(i);\n    }\n    return res;\n}\nexports.getInnerMostAxes = getInnerMostAxes;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/axis_util.js\n// module id = eYNA\n// module chunks = 0","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-dp.js\n// module id = evD5\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../../environment\");\nvar ndarray_1 = require(\"../../math/ndarray\");\nvar util = require(\"../../util\");\nvar graph_1 = require(\"../graph\");\nvar op_1 = require(\"./op\");\nvar Softmax = (function (_super) {\n    __extends(Softmax, _super);\n    function Softmax(logitsTensor, output) {\n        var _this = _super.call(this) || this;\n        _this.logitsTensor = logitsTensor;\n        _this.output = output;\n        return _this;\n    }\n    Softmax.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var logits = inferenceArrays.get(this.logitsTensor);\n        return math.scope(function (keep) {\n            inferenceArrays.set(_this.output, keep(math.softmax(logits)));\n        });\n    };\n    Softmax.prototype.backProp = function () {\n        throw Error('Softmax backprop is not yet implemented');\n    };\n    return Softmax;\n}(op_1.Operation));\nexports.Softmax = Softmax;\nvar SoftmaxCrossEntropyCost = (function (_super) {\n    __extends(SoftmaxCrossEntropyCost, _super);\n    function SoftmaxCrossEntropyCost(logitsTensor, labelTensor, yTensor) {\n        var _this = _super.call(this) || this;\n        _this.logitsTensor = logitsTensor;\n        _this.labelTensor = labelTensor;\n        _this.yTensor = yTensor;\n        _this.softmaxTensor = new graph_1.Tensor(logitsTensor.shape);\n        _this.epsilon = environment_1.ENV.math.keep(ndarray_1.Scalar.new(1e-5));\n        return _this;\n    }\n    SoftmaxCrossEntropyCost.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var logits = inferenceArrays.get(this.logitsTensor);\n        var label = inferenceArrays.get(this.labelTensor);\n        math.scope(function (keep) {\n            var softmaxResult = math.softmax(logits);\n            inferenceArrays.set(_this.softmaxTensor, keep(softmaxResult));\n            inferenceArrays.set(_this.yTensor, keep(crossEntropyCost(math, softmaxResult, label, _this.epsilon)));\n        });\n    };\n    SoftmaxCrossEntropyCost.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var softmax = inferenceArrays.get(this.softmaxTensor);\n        var label = inferenceArrays.get(this.labelTensor);\n        math.scope(function () {\n            gradientArrays.add(_this.logitsTensor, math.subtract(softmax, label));\n        });\n    };\n    SoftmaxCrossEntropyCost.prototype.disposeTransientArrays = function (inferenceArrays, gradientArrays) {\n        inferenceArrays.disposeArray(this.softmaxTensor);\n    };\n    SoftmaxCrossEntropyCost.prototype.dispose = function () {\n        this.epsilon.dispose();\n    };\n    return SoftmaxCrossEntropyCost;\n}(op_1.Operation));\nexports.SoftmaxCrossEntropyCost = SoftmaxCrossEntropyCost;\nfunction crossEntropyCost(math, y, target, epsilon) {\n    util.assert(y.size === target.size, 'The output and target must be the same size');\n    return math.scope(function () {\n        var yPlusEps = math.scalarPlusArray(epsilon, y);\n        var logOutput = math.log(yPlusEps);\n        var tarLogOutput = math.elementWiseMul(target, logOutput);\n        var costVector = math.neg(tarLogOutput);\n        return math.sum(costVector);\n    });\n}\nexports.crossEntropyCost = crossEntropyCost;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/ops/softmax.js\n// module id = f75v\n// module chunks = 0","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_promise-resolve.js\n// module id = fJUb\n// module chunks = 0","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-absolute-index.js\n// module id = fkB2\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar device_util = require(\"./device_util\");\nvar math_1 = require(\"./math/math\");\nvar util = require(\"./util\");\nvar Type;\n(function (Type) {\n    Type[Type[\"NUMBER\"] = 0] = \"NUMBER\";\n    Type[Type[\"BOOLEAN\"] = 1] = \"BOOLEAN\";\n})(Type = exports.Type || (exports.Type = {}));\nexports.URL_PROPERTIES = [\n    { name: 'WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_ENABLED', type: Type.BOOLEAN },\n    { name: 'WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE', type: Type.BOOLEAN },\n    { name: 'WEBGL_VERSION', type: Type.NUMBER },\n    { name: 'WEBGL_FLOAT_TEXTURE_ENABLED', type: Type.BOOLEAN }, {\n        name: 'WEBGL_GET_BUFFER_SUB_DATA_ASYNC_EXTENSION_ENABLED',\n        type: Type.BOOLEAN\n    }\n];\nfunction getWebGLRenderingContext(webGLVersion) {\n    if (webGLVersion === 0) {\n        throw new Error('Cannot get WebGL rendering context, WebGL is disabled.');\n    }\n    var tempCanvas = document.createElement('canvas');\n    if (webGLVersion === 1) {\n        return (tempCanvas.getContext('webgl') ||\n            tempCanvas.getContext('experimental-webgl'));\n    }\n    return tempCanvas.getContext('webgl2');\n}\nfunction loseContext(gl) {\n    if (gl != null) {\n        var loseContextExtension = gl.getExtension('WEBGL_lose_context');\n        if (loseContextExtension == null) {\n            throw new Error('Extension WEBGL_lose_context not supported on this browser.');\n        }\n        loseContextExtension.loseContext();\n    }\n}\nfunction isWebGLVersionEnabled(webGLVersion) {\n    var gl = getWebGLRenderingContext(webGLVersion);\n    if (gl != null) {\n        loseContext(gl);\n        return true;\n    }\n    return false;\n}\nfunction isWebGLDisjointQueryTimerEnabled(webGLVersion) {\n    var gl = getWebGLRenderingContext(webGLVersion);\n    var extensionName = webGLVersion === 1 ? 'EXT_disjoint_timer_query' :\n        'EXT_disjoint_timer_query_webgl2';\n    var ext = gl.getExtension(extensionName);\n    var isExtEnabled = ext != null;\n    if (gl != null) {\n        loseContext(gl);\n    }\n    return isExtEnabled;\n}\nfunction isFloatTextureReadPixelsEnabled(webGLVersion) {\n    if (webGLVersion === 0) {\n        return false;\n    }\n    var gl = getWebGLRenderingContext(webGLVersion);\n    if (webGLVersion === 1) {\n        if (gl.getExtension('OES_texture_float') == null) {\n            return false;\n        }\n    }\n    else {\n        if (gl.getExtension('EXT_color_buffer_float') == null) {\n            return false;\n        }\n    }\n    var frameBuffer = gl.createFramebuffer();\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    var internalFormat = webGLVersion === 2 ? gl.RGBA32F : gl.RGBA;\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    var frameBufferComplete = (gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE);\n    gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.FLOAT, new Float32Array(4));\n    var readPixelsNoError = gl.getError() === gl.NO_ERROR;\n    loseContext(gl);\n    return frameBufferComplete && readPixelsNoError;\n}\nfunction isWebGLGetBufferSubDataAsyncExtensionEnabled(webGLVersion) {\n    if (webGLVersion !== 2) {\n        return false;\n    }\n    var gl = getWebGLRenderingContext(webGLVersion);\n    var ext = gl.getExtension('WEBGL_get_buffer_sub_data_async');\n    var isEnabled = ext != null;\n    loseContext(gl);\n    return isEnabled;\n}\nvar Environment = (function () {\n    function Environment(features) {\n        this.features = {};\n        this.globalMath = null;\n        this.backendRegistry = {};\n        this.prevBackendRegistry = this.backendRegistry;\n        if (features != null) {\n            this.features = features;\n        }\n    }\n    Environment.prototype.get = function (feature) {\n        if (feature in this.features) {\n            return this.features[feature];\n        }\n        this.features[feature] = this.evaluateFeature(feature);\n        return this.features[feature];\n    };\n    Environment.prototype.getBestBackend = function () {\n        var orderedBackends = ['webgl', 'cpu'];\n        for (var i = 0; i < orderedBackends.length; ++i) {\n            var backendId = orderedBackends[i];\n            if (backendId in this.backendRegistry) {\n                return this.backendRegistry[backendId];\n            }\n        }\n        throw new Error('No backend found in registry.');\n    };\n    Environment.prototype.evaluateFeature = function (feature) {\n        if (feature === 'WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_ENABLED') {\n            var webGLVersion = this.get('WEBGL_VERSION');\n            if (webGLVersion === 0) {\n                return false;\n            }\n            return isWebGLDisjointQueryTimerEnabled(webGLVersion);\n        }\n        else if (feature === 'WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE') {\n            return this.get('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_ENABLED') &&\n                !device_util.isMobile();\n        }\n        else if (feature === 'WEBGL_VERSION') {\n            if (isWebGLVersionEnabled(2)) {\n                return 2;\n            }\n            else if (isWebGLVersionEnabled(1)) {\n                return 1;\n            }\n            return 0;\n        }\n        else if (feature === 'WEBGL_FLOAT_TEXTURE_ENABLED') {\n            return isFloatTextureReadPixelsEnabled(this.get('WEBGL_VERSION'));\n        }\n        else if (feature === 'WEBGL_GET_BUFFER_SUB_DATA_ASYNC_EXTENSION_ENABLED') {\n            return isWebGLGetBufferSubDataAsyncExtensionEnabled(this.get('WEBGL_VERSION'));\n        }\n        throw new Error(\"Unknown feature \" + feature + \".\");\n    };\n    Environment.prototype.setFeatures = function (features) {\n        this.empty();\n        this.features = features;\n    };\n    Environment.prototype.reset = function () {\n        this.globalMath = null;\n        this.backendRegistry = this.prevBackendRegistry;\n        this.features = getFeaturesFromURL();\n    };\n    Environment.prototype.setMath = function (math) {\n        this.globalMath = math;\n    };\n    Environment.prototype.getBackend = function (name) {\n        return this.backendRegistry[name];\n    };\n    Environment.prototype.registerBackend = function (name, factory) {\n        if (name in this.backendRegistry) {\n            throw new Error(name + \" backend was already registered\");\n        }\n        try {\n            var backend = factory();\n            this.backendRegistry[name] = backend;\n            return true;\n        }\n        catch (err) {\n            return false;\n        }\n    };\n    Object.defineProperty(Environment.prototype, \"math\", {\n        get: function () {\n            if (this.globalMath == null) {\n                var bestBackend = this.getBestBackend();\n                var safeMode = false;\n                this.globalMath = new math_1.NDArrayMath(bestBackend, safeMode);\n            }\n            return this.globalMath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Environment.prototype.empty = function () {\n        this.globalMath = null;\n        this.prevBackendRegistry = this.backendRegistry;\n        this.backendRegistry = {};\n        this.features = null;\n    };\n    return Environment;\n}());\nexports.Environment = Environment;\nvar DEEPLEARNJS_FLAGS_PREFIX = 'dljsflags';\nfunction getFeaturesFromURL() {\n    var features = {};\n    if (typeof window === 'undefined') {\n        return features;\n    }\n    var urlParams = util.getQueryParams(window.location.search);\n    if (DEEPLEARNJS_FLAGS_PREFIX in urlParams) {\n        var urlFlags_1 = {};\n        var keyValues = urlParams[DEEPLEARNJS_FLAGS_PREFIX].split(',');\n        keyValues.forEach(function (keyValue) {\n            var _a = keyValue.split(':'), key = _a[0], value = _a[1];\n            urlFlags_1[key] = value;\n        });\n        exports.URL_PROPERTIES.forEach(function (urlProperty) {\n            if (urlProperty.name in urlFlags_1) {\n                console.log(\"Setting feature override from URL \" + urlProperty.name + \": \" +\n                    (\"\" + urlFlags_1[urlProperty.name]));\n                if (urlProperty.type === Type.NUMBER) {\n                    features[urlProperty.name] = +urlFlags_1[urlProperty.name];\n                }\n                else if (urlProperty.type === Type.BOOLEAN) {\n                    features[urlProperty.name] = urlFlags_1[urlProperty.name] === 'true';\n                }\n                else {\n                    console.warn(\"Unknown URL param: \" + urlProperty.name + \".\");\n                }\n            }\n        });\n    }\n    return features;\n}\nfunction getGlobalNamespace() {\n    var ns;\n    if (typeof (window) !== 'undefined') {\n        ns = window;\n    }\n    else if (typeof (global) !== 'undefined') {\n        ns = global;\n    }\n    else {\n        throw new Error('Could not find a global object');\n    }\n    return ns;\n}\nfunction getOrMakeEnvironment() {\n    var ns = getGlobalNamespace();\n    ns.ENV = ns.ENV || new Environment(getFeaturesFromURL());\n    return ns.ENV;\n}\nexports.ENV = getOrMakeEnvironment();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/environment.js\n// module id = fpai\n// module chunks = 0","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/get-iterator.js\n// module id = fxRn\n// module chunks = 0","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/seedrandom/lib/xorshift7.js\n// module id = fzqA\n// module chunks = 0","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/core.get-iterator.js\n// module id = g8Ux\n// module chunks = 0","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_string-at.js\n// module id = h65t\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PARALLELIZE_THRESHOLD = 30;\nfunction computeOptimalWindowSize(inSize) {\n    if (inSize <= exports.PARALLELIZE_THRESHOLD) {\n        return inSize;\n    }\n    return nearestDivisor(inSize, Math.floor(Math.sqrt(inSize)));\n}\nexports.computeOptimalWindowSize = computeOptimalWindowSize;\nfunction nearestDivisor(size, start) {\n    for (var i = start; i < size; ++i) {\n        if (size % i === 0) {\n            return i;\n        }\n    }\n    return size;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/reduce_util.js\n// module id = h6eJ\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar webgl_util = require(\"./webgl_util\");\nfunction getRenderRGBShader(gpgpu, destinationWidth) {\n    var fragmentShaderSource = \"\\n    precision highp float;\\n    uniform sampler2D source;\\n    varying vec2 resultUV;\\n\\n    const float destinationWidth = \" + destinationWidth + \".0;\\n    const float a = 1.0;\\n\\n    void main() {\\n      float xr = floor(resultUV.s * destinationWidth) * 3.0;\\n      vec3 x = xr + vec3(0, 1, 2);\\n\\n      float sourceWidth = destinationWidth * 3.0;\\n      vec3 u = (x + 0.5) / sourceWidth;\\n      float v = 1.0 - resultUV.t;\\n\\n      float r = texture2D(source, vec2(u[0], v)).r;\\n      float g = texture2D(source, vec2(u[1], v)).r;\\n      float b = texture2D(source, vec2(u[2], v)).r;\\n\\n      gl_FragColor = vec4(r, g, b, a);\\n    }\";\n    return gpgpu.createProgram(fragmentShaderSource);\n}\nexports.getRenderRGBShader = getRenderRGBShader;\nfunction renderToCanvas(gpgpu, renderShader, sourceTex) {\n    webgl_util.bindCanvasToFramebuffer(gpgpu.gl);\n    renderToFramebuffer(gpgpu, renderShader, sourceTex);\n}\nexports.renderToCanvas = renderToCanvas;\nfunction renderToFramebuffer(gpgpu, renderShader, sourceTex) {\n    gpgpu.setProgram(renderShader);\n    var sourceSamplerLocation = webgl_util.getProgramUniformLocationOrThrow(gpgpu.gl, renderShader, 'source');\n    gpgpu.setInputMatrixTexture(sourceTex, sourceSamplerLocation, 0);\n    gpgpu.executeProgram();\n}\nexports.renderToFramebuffer = renderToFramebuffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/render_ndarray_gpu_util.js\n// module id = hEMf\n// module chunks = 0","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_hide.js\n// module id = hJx8\n// module chunks = 0","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../../../environment\");\nvar util = require(\"../../../util\");\nvar gpgpu_util = require(\"./gpgpu_util\");\nvar tex_util = require(\"./tex_util\");\nvar webgl_util = require(\"./webgl_util\");\nvar GPGPUContext = (function () {\n    function GPGPUContext(gl) {\n        this.outputTexture = null;\n        this.program = null;\n        this.disposed = false;\n        this.autoDebugValidate = false;\n        if (gl != null) {\n            this.gl = gl;\n        }\n        else {\n            this.gl = gpgpu_util.createWebGLContext();\n        }\n        if (environment_1.ENV.get('WEBGL_VERSION') === 1) {\n            this.textureFloatExtension =\n                webgl_util.getExtensionOrThrow(this.gl, 'OES_texture_float');\n            this.colorBufferFloatExtension =\n                this.gl.getExtension('WEBGL_color_buffer_float');\n        }\n        else {\n            this.colorBufferFloatExtension =\n                webgl_util.getExtensionOrThrow(this.gl, 'EXT_color_buffer_float');\n        }\n        this.loseContextExtension =\n            webgl_util.getExtensionOrThrow(this.gl, 'WEBGL_lose_context');\n        if (environment_1.ENV.get('WEBGL_GET_BUFFER_SUB_DATA_ASYNC_EXTENSION_ENABLED')) {\n            this.getBufferSubDataAsyncExtension =\n                this.gl.getExtension('WEBGL_get_buffer_sub_data_async');\n        }\n        this.vertexBuffer = gpgpu_util.createVertexBuffer(this.gl);\n        this.indexBuffer = gpgpu_util.createIndexBuffer(this.gl);\n        this.framebuffer = webgl_util.createFramebuffer(this.gl);\n    }\n    GPGPUContext.prototype.dispose = function () {\n        var _this = this;\n        this.throwIfDisposed();\n        if (this.program != null) {\n            console.warn('Disposing a GPGPUContext that still has a bound WebGLProgram.' +\n                ' This is probably a resource leak, delete the program with ' +\n                'GPGPUContext.deleteProgram before disposing.');\n        }\n        if (this.outputTexture != null) {\n            console.warn('Disposing a GPGPUContext that still has a bound output matrix ' +\n                'texture.  This is probably a resource leak, delete the output ' +\n                'matrix texture with GPGPUContext.deleteMatrixTexture before ' +\n                'disposing.');\n        }\n        var gl = this.gl;\n        webgl_util.callAndCheck(gl, function () { return gl.finish(); });\n        webgl_util.callAndCheck(gl, function () { return gl.bindFramebuffer(gl.FRAMEBUFFER, null); });\n        webgl_util.callAndCheck(gl, function () { return gl.deleteFramebuffer(_this.framebuffer); });\n        webgl_util.callAndCheck(gl, function () { return gl.bindBuffer(gl.ARRAY_BUFFER, null); });\n        webgl_util.callAndCheck(gl, function () { return gl.deleteBuffer(_this.vertexBuffer); });\n        webgl_util.callAndCheck(gl, function () { return gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null); });\n        webgl_util.callAndCheck(gl, function () { return gl.deleteBuffer(_this.indexBuffer); });\n        this.loseContextExtension.loseContext();\n        this.disposed = true;\n    };\n    GPGPUContext.prototype.enableAutomaticDebugValidation = function (enabled) {\n        this.autoDebugValidate = enabled;\n        webgl_util.enableDebugWebGLErrorChecking(enabled);\n    };\n    GPGPUContext.prototype.createMatrixTexture = function (rows, columns) {\n        this.throwIfDisposed();\n        return gpgpu_util.createMatrixTexture(this.gl, rows, columns);\n    };\n    GPGPUContext.prototype.uploadPixelDataToTexture = function (texture, pixels) {\n        this.throwIfDisposed();\n        gpgpu_util.uploadPixelDataToTexture(this.gl, texture, pixels);\n    };\n    GPGPUContext.prototype.createPackedMatrixTexture = function (rows, columns) {\n        this.throwIfDisposed();\n        return gpgpu_util.createPackedMatrixTexture(this.gl, rows, columns);\n    };\n    GPGPUContext.prototype.deleteMatrixTexture = function (texture) {\n        var _this = this;\n        this.throwIfDisposed();\n        if (this.outputTexture === texture) {\n            webgl_util.unbindColorTextureFromFramebuffer(this.gl, this.framebuffer);\n            this.outputTexture = null;\n        }\n        webgl_util.callAndCheck(this.gl, function () { return _this.gl.deleteTexture(texture); });\n    };\n    GPGPUContext.prototype.uploadMatrixToTexture = function (texture, rows, columns, matrix) {\n        this.throwIfDisposed();\n        var numChannels = 1;\n        return gpgpu_util.uploadMatrixToTexture(this.gl, texture, rows, columns, matrix, numChannels);\n    };\n    GPGPUContext.prototype.uploadMatrixToPackedTexture = function (texture, rows, columns, matrix) {\n        this.throwIfDisposed();\n        return gpgpu_util.uploadMatrixToPackedTexture(this.gl, texture, rows, columns, matrix);\n    };\n    GPGPUContext.prototype.downloadMatrixFromTexture = function (texture, rows, columns) {\n        var _this = this;\n        return this.downloadMatrixDriver(texture, function () {\n            return gpgpu_util.downloadMatrixFromOutputTexture(_this.gl, rows, columns);\n        });\n    };\n    GPGPUContext.prototype.downloadMatrixFromTextureAsync = function (texture, rows, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                if (this.getBufferSubDataAsyncExtension == null) {\n                    throw new Error(\"Cannot download matrix from output texture asynchronously, \" +\n                        \"WEBGL_get_buffer_sub_data_async is not enabled.\");\n                }\n                return [2, this.downloadMatrixDriverAsync(texture, function () { return gpgpu_util.downloadMatrixFromOutputTextureAsync(_this.gl, _this.getBufferSubDataAsyncExtension, rows, columns); })];\n            });\n        });\n    };\n    GPGPUContext.prototype.downloadMatrixFromRGBAColorTexture = function (texture, rows, columns, channels) {\n        var _this = this;\n        return this.downloadMatrixDriver(texture, function () { return gpgpu_util.downloadMatrixFromRGBAColorTexture(_this.gl, rows, columns, channels); });\n    };\n    GPGPUContext.prototype.downloadMatrixFromPackedTexture = function (texture, rows, columns) {\n        var _this = this;\n        return this.downloadMatrixDriver(texture, function () { return gpgpu_util.downloadMatrixFromPackedOutputTexture(_this.gl, rows, columns); });\n    };\n    GPGPUContext.prototype.createProgram = function (fragmentShaderSource) {\n        this.throwIfDisposed();\n        var gl = this.gl;\n        var fragmentShader = webgl_util.createFragmentShader(gl, fragmentShaderSource);\n        var vertexShader = gpgpu_util.createVertexShader(gl);\n        var program = webgl_util.createProgram(gl);\n        webgl_util.callAndCheck(gl, function () { return gl.attachShader(program, vertexShader); });\n        webgl_util.callAndCheck(gl, function () { return gl.attachShader(program, fragmentShader); });\n        webgl_util.linkProgram(gl, program);\n        if (this.autoDebugValidate) {\n            webgl_util.validateProgram(gl, program);\n        }\n        return program;\n    };\n    GPGPUContext.prototype.deleteProgram = function (program) {\n        var _this = this;\n        this.throwIfDisposed();\n        if (program === this.program) {\n            this.program = null;\n        }\n        if (program != null) {\n            webgl_util.callAndCheck(this.gl, function () { return _this.gl.deleteProgram(program); });\n        }\n    };\n    GPGPUContext.prototype.setProgram = function (program) {\n        var _this = this;\n        this.throwIfDisposed();\n        this.program = program;\n        if ((this.program != null) && this.autoDebugValidate) {\n            webgl_util.validateProgram(this.gl, this.program);\n        }\n        webgl_util.callAndCheck(this.gl, function () { return _this.gl.useProgram(program); });\n    };\n    GPGPUContext.prototype.getUniformLocation = function (program, uniformName) {\n        this.throwIfDisposed();\n        return webgl_util.getProgramUniformLocationOrThrow(this.gl, program, uniformName);\n    };\n    GPGPUContext.prototype.getAttributeLocation = function (program, attribute) {\n        var _this = this;\n        this.throwIfDisposed();\n        return webgl_util.callAndCheck(this.gl, function () { return _this.gl.getAttribLocation(program, attribute); });\n    };\n    GPGPUContext.prototype.getUniformLocationNoThrow = function (program, uniformName) {\n        this.throwIfDisposed();\n        return this.gl.getUniformLocation(program, uniformName);\n    };\n    GPGPUContext.prototype.setInputMatrixTexture = function (inputMatrixTexture, uniformLocation, textureUnit) {\n        this.throwIfDisposed();\n        this.throwIfNoProgram();\n        webgl_util.bindTextureToProgramUniformSampler(this.gl, this.program, inputMatrixTexture, uniformLocation, textureUnit);\n    };\n    GPGPUContext.prototype.setOutputMatrixTexture = function (outputMatrixTexture, rows, columns) {\n        this.setOutputMatrixTextureDriver(outputMatrixTexture, columns, rows);\n    };\n    GPGPUContext.prototype.setOutputPackedMatrixTexture = function (outputPackedMatrixTexture, rows, columns) {\n        this.throwIfDisposed();\n        var _a = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns), width = _a[0], height = _a[1];\n        this.setOutputMatrixTextureDriver(outputPackedMatrixTexture, width, height);\n    };\n    GPGPUContext.prototype.setOutputMatrixWriteRegion = function (startRow, numRows, startColumn, numColumns) {\n        this.setOutputMatrixWriteRegionDriver(startColumn, startRow, numColumns, numRows);\n    };\n    GPGPUContext.prototype.setOutputPackedMatrixWriteRegion = function (startRow, numRows, startColumn, numColumns) {\n        throw new Error('setOutputPackedMatrixWriteRegion not implemented.');\n    };\n    GPGPUContext.prototype.debugValidate = function () {\n        if (this.program != null) {\n            webgl_util.validateProgram(this.gl, this.program);\n        }\n        webgl_util.validateFramebuffer(this.gl);\n    };\n    GPGPUContext.prototype.executeProgram = function (attribLocations) {\n        this.throwIfDisposed();\n        this.throwIfNoProgram();\n        var gl = this.gl;\n        gpgpu_util.bindVertexProgramAttributeStreams(gl, this.program, this.vertexBuffer, attribLocations);\n        if (this.autoDebugValidate) {\n            this.debugValidate();\n        }\n        webgl_util.callAndCheck(gl, function () { return gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0); });\n    };\n    GPGPUContext.prototype.blockUntilAllProgramsCompleted = function () {\n        var _this = this;\n        this.throwIfDisposed();\n        webgl_util.callAndCheck(this.gl, function () { return _this.gl.finish(); });\n    };\n    GPGPUContext.prototype.runQuery = function (queryFn) {\n        if (environment_1.ENV.get('WEBGL_VERSION') === 2) {\n            return this.runQueryWebGL2(queryFn);\n        }\n        return this.runQueryWebGL1(queryFn);\n    };\n    GPGPUContext.prototype.runQueryWebGL2 = function (benchmark) {\n        var _this = this;\n        var ext = webgl_util.getExtensionOrThrow(this.gl, 'EXT_disjoint_timer_query_webgl2');\n        var query = this.gl.createQuery();\n        this.gl.beginQuery(ext.TIME_ELAPSED_EXT, query);\n        benchmark();\n        this.gl.endQuery(ext.TIME_ELAPSED_EXT);\n        return new Promise(function (resolve, reject) {\n            var queryGPU = function () {\n                var available = _this.gl\n                    .getQueryParameter(query, _this.gl.QUERY_RESULT_AVAILABLE);\n                var disjoint = _this.gl.getParameter(ext.GPU_DISJOINT_EXT);\n                return available && !disjoint;\n            };\n            var getTimeElapsed = function () {\n                var timeElapsedNanos = _this.gl\n                    .getQueryParameter(query, _this.gl.QUERY_RESULT);\n                resolve(timeElapsedNanos / 1000000);\n            };\n            var resolveWithWarning = function () {\n                console.warn('Disjoint query timer never available.');\n                resolve(-1);\n            };\n            util.repeatedTry(queryGPU).then(getTimeElapsed).catch(resolveWithWarning);\n        });\n    };\n    GPGPUContext.prototype.runQueryWebGL1 = function (benchmark) {\n        var _this = this;\n        var ext = webgl_util.getExtensionOrThrow(this.gl, 'EXT_disjoint_timer_query');\n        var query = ext.createQueryEXT();\n        ext.beginQueryEXT(ext.TIME_ELAPSED_EXT, query);\n        benchmark();\n        ext.endQueryEXT(ext.TIME_ELAPSED_EXT);\n        return new Promise(function (resolve, reject) {\n            var queryGPU = function () {\n                var available = ext.getQueryObjectEXT(query, ext.QUERY_RESULT_AVAILABLE_EXT);\n                var disjoint = _this.gl.getParameter(ext.GPU_DISJOINT_EXT);\n                return available && !disjoint;\n            };\n            var getTimeElapsed = function () {\n                var timeElapsedNanos = ext.getQueryObjectEXT(query, ext.QUERY_RESULT_EXT);\n                resolve(timeElapsedNanos / 1000000);\n            };\n            var resolveWithWarning = function () {\n                console.warn('Disjoint query timer never available.');\n                resolve(-1);\n            };\n            util.repeatedTry(queryGPU).then(getTimeElapsed).catch(resolveWithWarning);\n        });\n    };\n    GPGPUContext.prototype.downloadMatrixDriverSetup = function (texture) {\n        this.throwIfDisposed();\n        webgl_util.bindColorTextureToFramebuffer(this.gl, texture, this.framebuffer);\n        if (this.autoDebugValidate) {\n            webgl_util.validateFramebuffer(this.gl);\n        }\n    };\n    GPGPUContext.prototype.downloadMatrixDriverTeardown = function () {\n        if (this.outputTexture != null) {\n            webgl_util.bindColorTextureToFramebuffer(this.gl, this.outputTexture, this.framebuffer);\n            if (this.autoDebugValidate) {\n                webgl_util.validateFramebuffer(this.gl);\n            }\n        }\n        else {\n            webgl_util.unbindColorTextureFromFramebuffer(this.gl, this.framebuffer);\n        }\n    };\n    GPGPUContext.prototype.downloadMatrixDriver = function (texture, downloadAndDecode) {\n        this.downloadMatrixDriverSetup(texture);\n        var result = downloadAndDecode();\n        this.downloadMatrixDriverTeardown();\n        return result;\n    };\n    GPGPUContext.prototype.downloadMatrixDriverAsync = function (texture, downloadAndDecode) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.downloadMatrixDriverSetup(texture);\n                        return [4, downloadAndDecode()];\n                    case 1:\n                        result = _a.sent();\n                        this.downloadMatrixDriverTeardown();\n                        return [2, result];\n                }\n            });\n        });\n    };\n    GPGPUContext.prototype.setOutputMatrixTextureDriver = function (outputMatrixTextureMaybePacked, width, height) {\n        this.throwIfDisposed();\n        var gl = this.gl;\n        webgl_util.bindColorTextureToFramebuffer(gl, outputMatrixTextureMaybePacked, this.framebuffer);\n        if (this.autoDebugValidate) {\n            webgl_util.validateFramebuffer(gl);\n        }\n        this.outputTexture = outputMatrixTextureMaybePacked;\n        webgl_util.callAndCheck(gl, function () { return gl.viewport(0, 0, width, height); });\n        webgl_util.callAndCheck(gl, function () { return gl.scissor(0, 0, width, height); });\n    };\n    GPGPUContext.prototype.setOutputMatrixWriteRegionDriver = function (x, y, width, height) {\n        var _this = this;\n        this.throwIfDisposed();\n        webgl_util.callAndCheck(this.gl, function () { return _this.gl.scissor(x, y, width, height); });\n    };\n    GPGPUContext.prototype.throwIfDisposed = function () {\n        if (this.disposed) {\n            throw new Error('Attempted to use disposed GPGPUContext.');\n        }\n    };\n    GPGPUContext.prototype.throwIfNoProgram = function () {\n        if (this.program == null) {\n            throw new Error('No GPU program is currently set.');\n        }\n    };\n    return GPGPUContext;\n}());\nexports.GPGPUContext = GPGPUContext;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/gpgpu_context.js\n// module id = hbAG\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ReduceProgram = (function () {\n    function ReduceProgram(reduceInfo, reduceType) {\n        this.variableNames = ['x'];\n        var windowSize = reduceInfo.windowSize;\n        var batchSize = reduceInfo.batchSize;\n        var inSize = reduceInfo.inSize;\n        var outSize = Math.ceil(inSize / windowSize);\n        this.outputShape = [batchSize, outSize];\n        var isReduceSum = reduceType === 'sum';\n        var initializationValue = '0.0';\n        if (!isReduceSum) {\n            if (reduceType === 'min') {\n                initializationValue = '1.0 / 0.0';\n            }\n            else {\n                initializationValue = '-1.0 / 0.0';\n            }\n        }\n        var compareOp = reduceType === 'min' ? 'min' : 'max';\n        var returnValue = reduceType + \"(\" + reduceType + \"(\" + reduceType + \"(\" +\n            'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n        if (reduceType === 'sum') {\n            returnValue = \"sumValue\";\n        }\n        var windowSizeNearestVec4 = Math.floor(windowSize / 4) * 4;\n        var windowSizeVec4Remainder = windowSize % 4;\n        var updateSnippet = \"\\n      if (\" + isReduceSum + \") {\\n        sumValue += dot(values, ones);\\n      } else {\\n        if (hasNaN(values)) {\\n          setOutput(getNaN(values));\\n          return;\\n        }\\n        minMaxValue = \" + compareOp + \"(values, minMaxValue);\\n      }\\n    \";\n        var checkOutOfBounds = '';\n        if (inSize % windowSize > 0) {\n            checkOutOfBounds = \"\\n        if (inIdx < 0 || inIdx >= \" + inSize + \") {\\n          return initializationValue;\\n        }\\n      \";\n        }\n        this.userCode = \"\\n      const float initializationValue = \" + initializationValue + \";\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float getValue(int batch, int inIdx) {\\n        \" + checkOutOfBounds + \"\\n        return getX(batch, inIdx);\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * \" + windowSize + \";\\n\\n        vec4 minMaxValue = vec4(\" + initializationValue + \");\\n        float sumValue = 0.0;\\n\\n        for (int i = 0; i < \" + windowSizeNearestVec4 + \"; i += 4) {\\n          int inIdx = inOffset + i;\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            getValue(batch, inIdx + 3)\\n          );\\n\\n          \" + updateSnippet + \"\\n        }\\n\\n        int inIdx = inOffset + \" + windowSizeNearestVec4 + \";\\n        if (\" + (windowSizeVec4Remainder === 1) + \") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            initializationValue,\\n            initializationValue,\\n            initializationValue\\n          );\\n          \" + updateSnippet + \"\\n        } else if (\" + (windowSizeVec4Remainder === 2) + \") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            initializationValue,\\n            initializationValue\\n          );\\n          \" + updateSnippet + \"\\n        } else if (\" + (windowSizeVec4Remainder === 3) + \") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            initializationValue\\n          );\\n          \" + updateSnippet + \"\\n        }\\n        setOutput(\" + returnValue + \");\\n      }\\n    \";\n    }\n    return ReduceProgram;\n}());\nexports.ReduceProgram = ReduceProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/reduce_gpu.js\n// module id = hkhl\n// module chunks = 0","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/seedrandom/lib/xorwow.js\n// module id = i+52\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DepthwiseConv2DProgram = (function () {\n    function DepthwiseConv2DProgram(convInfo) {\n        this.variableNames = ['x', 'W'];\n        this.outputShape = convInfo.outShape;\n        var xNumRows = convInfo.inHeight;\n        var xNumCols = convInfo.inWidth;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var channelMul = convInfo.outChannels / convInfo.inChannels;\n        this.userCode = \"\\n      const ivec2 strides = ivec2(\" + strideHeight + \", \" + strideWidth + \");\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords.x;\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int d2 = coords.w;\\n        int d1 = d2 / \" + channelMul + \";\\n        int q = d2 - d1 * \" + channelMul + \";\\n\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        // TODO(dsmilkov): Flatten the two for loops and vec4 the operations.\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          int xR = xRCorner + wR;\\n\\n          if (xR < 0 || xR >= \" + xNumRows + \") {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n            int xC = xCCorner + wC;\\n\\n            if (xC < 0 || xC >= \" + xNumCols + \") {\\n              continue;\\n            }\\n\\n            float xVal = getX(batch, xR, xC, d1);\\n            float wVal = getW(wR, wC, d1, q);\\n            dotProd += xVal * wVal;\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return DepthwiseConv2DProgram;\n}());\nexports.DepthwiseConv2DProgram = DepthwiseConv2DProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/conv_gpu_depthwise.js\n// module id = i0QU\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = require(\"../math/ndarray\");\nvar util = require(\"../util\");\nvar graph_1 = require(\"./graph\");\nvar graph_util = require(\"./graph_util\");\nfunction getTerminatingNodesFromFeedDictionary(feedDictionary) {\n    return Object.keys(feedDictionary.dict)\n        .map(function (tensorID) { return feedDictionary.dict[+tensorID].tensor.node; });\n}\nexports.getTerminatingNodesFromFeedDictionary = getTerminatingNodesFromFeedDictionary;\nfunction getOrderedEvaluationSetFromEvalTensor(evalTensors, feedDictionary) {\n    var terminatingNodes = getTerminatingNodesFromFeedDictionary(feedDictionary);\n    var evalNodes = evalTensors.map(function (x) { return x.node; });\n    var unorderedEvaluationSet = graph_util.getUnorderedEvaluationSet(evalNodes, terminatingNodes);\n    var orderedEvaluationSet = graph_util.getOrderedEvaluationSet(unorderedEvaluationSet);\n    return orderedEvaluationSet;\n}\nexports.getOrderedEvaluationSetFromEvalTensor = getOrderedEvaluationSetFromEvalTensor;\nfunction addPersistentArraysToTensorArrayMap(evaluationSet, tensorArrayMap) {\n    evaluationSet.forEach(function (node) {\n        if (node instanceof graph_1.VariableNode || node instanceof graph_1.ConstantNode) {\n            tensorArrayMap.set(node.output, node.data);\n        }\n    });\n}\nexports.addPersistentArraysToTensorArrayMap = addPersistentArraysToTensorArrayMap;\nfunction getVariableNodesFromEvaluationSet(evaluationSet) {\n    var nodes = [];\n    evaluationSet.forEach(function (node) {\n        if (node instanceof graph_1.VariableNode) {\n            nodes.push(node);\n        }\n    });\n    return nodes;\n}\nexports.getVariableNodesFromEvaluationSet = getVariableNodesFromEvaluationSet;\nfunction throwIfFeedDictionaryContainsNDArrays(feedDictionary) {\n    Object.keys(feedDictionary.dict).forEach(function (tensorID) {\n        if (feedDictionary.dict[+tensorID].data instanceof ndarray_1.NDArray) {\n            throw new Error('training requires FeedDictionary entries to be InputProviders' +\n                'and not NDArrays.');\n        }\n    });\n}\nexports.throwIfFeedDictionaryContainsNDArrays = throwIfFeedDictionaryContainsNDArrays;\nfunction loadInputsFromFeedDictionaryToTensorArrayMap(batchFeed, activations, math) {\n    Object.keys(batchFeed.dict).forEach(function (tensorID) {\n        var feedEntry = batchFeed.dict[+tensorID];\n        var data;\n        if (feedEntry.data instanceof ndarray_1.NDArray) {\n            data = feedEntry.data;\n        }\n        else {\n            var provider = feedEntry.data;\n            data = provider.getNextCopy(math);\n        }\n        util.assert(util.arraysEqual(feedEntry.tensor.shape, data.shape), \"Error loading FeedEntry: feeding NDArray of shape \" + data.shape + \" \" +\n            (\"does not match Tensor (id: \" + feedEntry.tensor.id + \") shape: \") +\n            (feedEntry.tensor.shape + \".\"));\n        activations.set(feedEntry.tensor, data);\n    });\n}\nexports.loadInputsFromFeedDictionaryToTensorArrayMap = loadInputsFromFeedDictionaryToTensorArrayMap;\nfunction releaseFeedDictionaryInputsFromTensorArrayMap(batchFeed, activations, math) {\n    Object.keys(batchFeed.dict).forEach(function (tensorID) {\n        var feedEntry = batchFeed.dict[+tensorID];\n        if (!(feedEntry.data instanceof ndarray_1.NDArray)) {\n            var provider = feedEntry.data;\n            var feedEntryArray = activations.get(feedEntry.tensor);\n            provider.disposeCopy(math, feedEntryArray);\n        }\n        activations.delete(feedEntry.tensor);\n    });\n}\nexports.releaseFeedDictionaryInputsFromTensorArrayMap = releaseFeedDictionaryInputsFromTensorArrayMap;\nfunction removeFeedDictionaryNodesFromEvaluationSet(feedDictionary, evaluationSet) {\n    var i = 0;\n    while (i < evaluationSet.length) {\n        var node = evaluationSet[i];\n        if (feedDictionary.dict[node.output.id] != null) {\n            evaluationSet.splice(i, 1);\n        }\n        else {\n            ++i;\n        }\n    }\n}\nexports.removeFeedDictionaryNodesFromEvaluationSet = removeFeedDictionaryNodesFromEvaluationSet;\nfunction disposeAndInitializeOperationOutputs(evaluationSet, tensorArrayMap) {\n    evaluationSet.forEach(function (node) {\n        if (!graph_util.isInputNode(node)) {\n            if (!graph_util.isPassthroughNode(node, tensorArrayMap)) {\n                tensorArrayMap.disposeArray(node.output);\n            }\n            tensorArrayMap.set(node.output, null);\n        }\n    });\n}\nexports.disposeAndInitializeOperationOutputs = disposeAndInitializeOperationOutputs;\nfunction disposeAndInitializeOperationInputGradients(evaluationSet, gradients) {\n    evaluationSet.forEach(function (node) {\n        Object.keys(node.inputs).forEach(function (inputName) {\n            var input = node.inputs[inputName];\n            if (gradients.get(input, true) !== gradients.get(node.output, true)) {\n                gradients.disposeArray(input);\n            }\n            gradients.nullify(input);\n        });\n    });\n}\nexports.disposeAndInitializeOperationInputGradients = disposeAndInitializeOperationInputGradients;\nfunction disposeTransientOperationArrays(operations, activations, gradients) {\n    operations.forEach(function (op) { return op.disposeTransientArrays(activations, gradients); });\n}\nexports.disposeTransientOperationArrays = disposeTransientOperationArrays;\nfunction throwErrorIfEvaluationSetContainsPlaceholderNodes(evaluationSet) {\n    evaluationSet.forEach(function (node) {\n        if (node instanceof graph_1.PlaceholderNode) {\n            var shape = '[' + node.output.shape.join(', ') + ']';\n            throw new Error('Placeholder node \"' + node.name + '\" ' + shape +\n                ' not present in feed dictionary.');\n        }\n    });\n}\nexports.throwErrorIfEvaluationSetContainsPlaceholderNodes = throwErrorIfEvaluationSetContainsPlaceholderNodes;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/session_util.js\n// module id = j3TE\n// module chunks = 0","'use strict';\n// https://github.com/tc39/proposal-promise-try\nvar $export = require('./_export');\nvar newPromiseCapability = require('./_new-promise-capability');\nvar perform = require('./_perform');\n\n$export($export.S, 'Promise', { 'try': function (callbackfn) {\n  var promiseCapability = newPromiseCapability.f(this);\n  var result = perform(callbackfn);\n  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n  return promiseCapability.promise;\n} });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.promise.try.js\n// module id = jKW+\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"../../util\");\nvar graph_util = require(\"../graph_util\");\nvar op_1 = require(\"./op\");\nvar Divide = (function (_super) {\n    __extends(Divide, _super);\n    function Divide(x1Tensor, x2Tensor, yTensor) {\n        var _this = _super.call(this) || this;\n        _this.x1Tensor = x1Tensor;\n        _this.x2Tensor = x2Tensor;\n        _this.yTensor = yTensor;\n        util.assert(util.sizeFromShape(x1Tensor.shape) === 1 ||\n            util.sizeFromShape(x2Tensor.shape) === 1 ||\n            util.arraysEqual(x1Tensor.shape, x2Tensor.shape), 'One of t1 or t2 must be a scalar, or t1 and t2 must have ' +\n            'the same shape');\n        return _this;\n    }\n    Divide.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var t1 = inferenceArrays.get(this.x1Tensor);\n        var t2 = inferenceArrays.get(this.x2Tensor);\n        math.scope(function (keep) {\n            var result;\n            if (util.isScalarShape(t1.shape)) {\n                result = math.scalarDividedByArray(t1, t2);\n            }\n            else if (util.isScalarShape(t2.shape)) {\n                result = math.arrayDividedByScalar(t1, t2);\n            }\n            else {\n                result = math.divide(t1, t2);\n            }\n            inferenceArrays.set(_this.yTensor, keep(result));\n        });\n    };\n    Divide.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var x1 = inferenceArrays.get(this.x1Tensor);\n        var x2 = inferenceArrays.get(this.x2Tensor);\n        var dy = gradientArrays.get(this.yTensor);\n        var x1IsScalar = util.isScalarShape(x1.shape);\n        var x2IsScalar = util.isScalarShape(x2.shape);\n        math.scope(function () {\n            if (graph_util.shouldBackProp(_this.x1Tensor)) {\n                if (x1IsScalar) {\n                    var div = math.divide(dy, x2);\n                    gradientArrays.add(_this.x1Tensor, math.sum(div));\n                    div.dispose();\n                }\n                else if (x2IsScalar) {\n                    gradientArrays.add(_this.x1Tensor, math.arrayDividedByScalar(dy, x2));\n                }\n                else {\n                    gradientArrays.add(_this.x1Tensor, math.divide(dy, x2));\n                }\n            }\n            if (graph_util.shouldBackProp(_this.x2Tensor)) {\n                var x2Squared = math.elementWiseMul(x2, x2);\n                var x1OverX2Squared = void 0;\n                if (x2IsScalar) {\n                    x1OverX2Squared = math.arrayDividedByScalar(x1, x2Squared);\n                }\n                else if (x1IsScalar) {\n                    x1OverX2Squared = math.scalarDividedByArray(x1, x2Squared);\n                }\n                else {\n                    x1OverX2Squared = math.divide(x1, x2Squared);\n                }\n                var dx2 = math.neg(x1OverX2Squared);\n                var dyTimesDerivative = math.elementWiseMul(dy, dx2);\n                if (x2IsScalar) {\n                    gradientArrays.add(_this.x2Tensor, math.sum(dyTimesDerivative));\n                }\n                else {\n                    gradientArrays.add(_this.x2Tensor, dyTimesDerivative);\n                }\n            }\n        });\n    };\n    return Divide;\n}(op_1.Operation));\nexports.Divide = Divide;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/ops/divide.js\n// module id = jLs2\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = require(\"./math/ndarray\");\nfunction shuffle(array) {\n    var counter = array.length;\n    var temp = 0;\n    var index = 0;\n    while (counter > 0) {\n        index = (Math.random() * counter) | 0;\n        counter--;\n        temp = array[counter];\n        array[counter] = array[index];\n        array[index] = temp;\n    }\n}\nexports.shuffle = shuffle;\nfunction clamp(min, x, max) {\n    return Math.max(min, Math.min(x, max));\n}\nexports.clamp = clamp;\nfunction randUniform(a, b) {\n    return Math.random() * (b - a) + a;\n}\nexports.randUniform = randUniform;\nfunction distSquared(a, b) {\n    var result = 0;\n    for (var i = 0; i < a.length; i++) {\n        var diff = Number(a[i]) - Number(b[i]);\n        result += diff * diff;\n    }\n    return result;\n}\nexports.distSquared = distSquared;\nfunction assert(expr, msg) {\n    if (!expr) {\n        throw new Error(msg);\n    }\n}\nexports.assert = assert;\nfunction assertShapesMatch(shapeA, shapeB, errorMessagePrefix) {\n    if (errorMessagePrefix === void 0) { errorMessagePrefix = ''; }\n    assert(arraysEqual(shapeA, shapeB), errorMessagePrefix + (\"Shapes \" + shapeA + \" and \" + shapeB + \" must match\"));\n}\nexports.assertShapesMatch = assertShapesMatch;\nfunction flatten(arr, ret) {\n    if (ret === void 0) { ret = []; }\n    if (Array.isArray(arr)) {\n        for (var i = 0; i < arr.length; ++i) {\n            flatten(arr[i], ret);\n        }\n    }\n    else {\n        ret.push(arr);\n    }\n    return ret;\n}\nexports.flatten = flatten;\nfunction inferShape(arr) {\n    var shape = [];\n    while (arr instanceof Array) {\n        shape.push(arr.length);\n        arr = arr[0];\n    }\n    return shape;\n}\nexports.inferShape = inferShape;\nfunction sizeFromShape(shape) {\n    if (shape.length === 0) {\n        return 1;\n    }\n    var size = shape[0];\n    for (var i = 1; i < shape.length; i++) {\n        size *= shape[i];\n    }\n    return size;\n}\nexports.sizeFromShape = sizeFromShape;\nfunction isScalarShape(shape) {\n    return shape.length === 0;\n}\nexports.isScalarShape = isScalarShape;\nfunction arraysEqual(n1, n2) {\n    if (n1.length !== n2.length) {\n        return false;\n    }\n    for (var i = 0; i < n1.length; i++) {\n        if (n1[i] !== n2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.arraysEqual = arraysEqual;\nfunction isInt(a) {\n    return a % 1 === 0;\n}\nexports.isInt = isInt;\nfunction tanh(x) {\n    if (Math.tanh != null) {\n        return Math.tanh(x);\n    }\n    if (x === Infinity) {\n        return 1;\n    }\n    else if (x === -Infinity) {\n        return -1;\n    }\n    else {\n        var e2x = Math.exp(2 * x);\n        return (e2x - 1) / (e2x + 1);\n    }\n}\nexports.tanh = tanh;\nfunction sizeToSquarishShape(size) {\n    for (var a = Math.floor(Math.sqrt(size)); a > 1; --a) {\n        if (size % a === 0) {\n            return [a, size / a];\n        }\n    }\n    return [1, size];\n}\nexports.sizeToSquarishShape = sizeToSquarishShape;\nfunction createShuffledIndices(n) {\n    var shuffledIndices = new Uint32Array(n);\n    for (var i = 0; i < n; ++i) {\n        shuffledIndices[i] = i;\n    }\n    shuffle(shuffledIndices);\n    return shuffledIndices;\n}\nexports.createShuffledIndices = createShuffledIndices;\nfunction rightPad(a, size) {\n    if (size <= a.length) {\n        return a;\n    }\n    return a + ' '.repeat(size - a.length);\n}\nexports.rightPad = rightPad;\nfunction repeatedTry(checkFn, delayFn, maxCounter) {\n    if (delayFn === void 0) { delayFn = function (counter) { return 0; }; }\n    return new Promise(function (resolve, reject) {\n        var tryCount = 0;\n        var tryFn = function () {\n            if (checkFn()) {\n                resolve();\n                return;\n            }\n            tryCount++;\n            var nextBackoff = delayFn(tryCount);\n            if (maxCounter != null && tryCount >= maxCounter) {\n                reject();\n                return;\n            }\n            setTimeout(tryFn, nextBackoff);\n        };\n        setTimeout(tryFn, 0);\n    });\n}\nexports.repeatedTry = repeatedTry;\nfunction getQueryParams(queryString) {\n    var params = {};\n    queryString.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, function (s) {\n        var t = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            t[_i - 1] = arguments[_i];\n        }\n        decodeParam(params, t[0], t[1]);\n        return t.join('=');\n    });\n    return params;\n}\nexports.getQueryParams = getQueryParams;\nfunction decodeParam(params, name, value) {\n    params[decodeURIComponent(name)] = decodeURIComponent(value || '');\n}\nfunction inferFromImplicitShape(shape, size) {\n    var shapeProd = 1;\n    var implicitIdx = -1;\n    for (var i = 0; i < shape.length; ++i) {\n        if (shape[i] > 0) {\n            shapeProd *= shape[i];\n        }\n        else if (shape[i] === -1) {\n            if (implicitIdx !== -1) {\n                throw Error(\"Shapes can only have 1 implicit size. \" +\n                    (\"Found -1 at dim \" + implicitIdx + \" and dim \" + i));\n            }\n            implicitIdx = i;\n        }\n        else if (shape[i] <= 0) {\n            throw Error(\"Shapes can not be <= 0. Found \" + shape[i] + \" at dim \" + i);\n        }\n    }\n    if (implicitIdx === -1) {\n        if (size > 0 && size !== shapeProd) {\n            throw Error(\"Size (\" + size + \") must match the product of shape \" + shape);\n        }\n        return shape;\n    }\n    if (size % shapeProd !== 0) {\n        throw Error(\"The implicit shape can't be a fractional number. \" +\n            (\"Got \" + size + \" / \" + shapeProd));\n    }\n    var newShape = shape.slice();\n    newShape[implicitIdx] = size / shapeProd;\n    return newShape;\n}\nexports.inferFromImplicitShape = inferFromImplicitShape;\nexports.NAN_INT32 = 1 << 31;\nexports.NAN_BOOL = 255;\nexports.NAN_FLOAT32 = NaN;\nfunction getNaN(dtype) {\n    if (dtype === 'float32') {\n        return exports.NAN_FLOAT32;\n    }\n    else if (dtype === 'int32') {\n        return exports.NAN_INT32;\n    }\n    else if (dtype === 'bool') {\n        return exports.NAN_BOOL;\n    }\n    else {\n        throw new Error(\"Unknown dtype \" + dtype);\n    }\n}\nexports.getNaN = getNaN;\nfunction isValNaN(val, dtype) {\n    if (isNaN(val)) {\n        return true;\n    }\n    if (dtype === 'float32') {\n        return false;\n    }\n    else if (dtype === 'int32') {\n        return val === exports.NAN_INT32;\n    }\n    else if (dtype === 'bool') {\n        return val === exports.NAN_BOOL;\n    }\n    else {\n        throw new Error(\"Unknown dtype \" + dtype);\n    }\n}\nexports.isValNaN = isValNaN;\nfunction squeezeShape(shape) {\n    var newShape = [];\n    var keptDims = [];\n    for (var i = 0; i < shape.length; ++i) {\n        if (shape[i] > 1) {\n            newShape.push(shape[i]);\n            keptDims.push(i);\n        }\n    }\n    return { newShape: newShape, keptDims: keptDims };\n}\nexports.squeezeShape = squeezeShape;\nfunction getTypedArrayFromDType(dtype, size) {\n    var values = null;\n    if (dtype == null || dtype === 'float32') {\n        values = new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        values = new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        values = new Uint8Array(size);\n    }\n    else {\n        throw new Error(\"Unknown data type \" + dtype);\n    }\n    return values;\n}\nexports.getTypedArrayFromDType = getTypedArrayFromDType;\nfunction isNDArrayInList(ndarray, ndarrayList) {\n    for (var i = 0; i < ndarrayList.length; i++) {\n        if (ndarrayList[i].id === ndarray.id) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.isNDArrayInList = isNDArrayInList;\nfunction checkForNaN(vals, dtype, name) {\n    for (var i = 0; i < vals.length; i++) {\n        if (isValNaN(vals[i], dtype)) {\n            throw Error(\"The result of the last math.\" + name + \" has NaNs.\");\n        }\n    }\n}\nexports.checkForNaN = checkForNaN;\nfunction flattenNameArrayMap(nameArrayMap, keys) {\n    var xs = [];\n    if (nameArrayMap instanceof ndarray_1.NDArray) {\n        xs.push(nameArrayMap);\n    }\n    else {\n        var xMap = nameArrayMap;\n        for (var i = 0; i < keys.length; i++) {\n            xs.push(xMap[keys[i]]);\n        }\n    }\n    return xs;\n}\nexports.flattenNameArrayMap = flattenNameArrayMap;\nfunction unflattenToNameArrayMap(keys, flatArrays) {\n    if (keys.length !== flatArrays.length) {\n        throw new Error(\"Cannot unflatten NDArray[], keys and arrays are not of same length.\");\n    }\n    var result = {};\n    for (var i = 0; i < keys.length; i++) {\n        result[keys[i]] = flatArrays[i];\n    }\n    return result;\n}\nexports.unflattenToNameArrayMap = unflattenToNameArrayMap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/util.js\n// module id = jMY8\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ArgMinMaxProgram = (function () {\n    function ArgMinMaxProgram(reduceInfo, op, firstPass) {\n        this.variableNames = ['A'];\n        var windowSize = reduceInfo.windowSize;\n        var batchSize = reduceInfo.batchSize;\n        var inSize = reduceInfo.inSize;\n        var outSize = Math.ceil(inSize / windowSize);\n        if (!firstPass) {\n            this.variableNames.push('bestIndicesA');\n        }\n        this.outputShape = [batchSize, outSize];\n        var compOp = (op === 'max') ? '>' : '<';\n        var indexSnippet = firstPass ?\n            'inOffset + i;' :\n            'round(getBestIndicesA(batch, inOffset + i));';\n        this.userCode = \"\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * \" + windowSize + \";\\n\\n        int bestIndex = 0;\\n        float bestValue = getA(batch, inOffset);\\n\\n        for (int i = 0; i < \" + windowSize + \"; i++) {\\n          int inIdx = \" + indexSnippet + \";\\n          float candidate = getA(batch, inIdx);\\n          if (isNaN(candidate)) {\\n            setOutput(candidate);\\n            return;\\n          }\\n          if (candidate \" + compOp + \" bestValue) {\\n            bestValue = candidate;\\n            bestIndex = inIdx;\\n          }\\n        }\\n        setOutput(float(bestIndex));\\n      }\\n    \";\n    }\n    return ArgMinMaxProgram;\n}());\nexports.ArgMinMaxProgram = ArgMinMaxProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/argminmax_gpu.js\n// module id = jSF7\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar conv_util = require(\"../../math/conv_util\");\nvar util = require(\"../../util\");\nvar op_1 = require(\"./op\");\nvar Convolution2D = (function (_super) {\n    __extends(Convolution2D, _super);\n    function Convolution2D(wTensor, xTensor, bTensor, yTensor, fieldSize, outputDepth, stride, zeroPad) {\n        if (stride === void 0) { stride = 1; }\n        var _this = _super.call(this) || this;\n        _this.wTensor = wTensor;\n        _this.xTensor = xTensor;\n        _this.bTensor = bTensor;\n        _this.yTensor = yTensor;\n        _this.fieldSize = fieldSize;\n        _this.outputDepth = outputDepth;\n        _this.stride = stride;\n        _this.assertWeightsShape(wTensor.shape);\n        _this.zeroPad = zeroPad != null ?\n            zeroPad :\n            conv_util.computeDefaultPad(_this.xTensor.shape, _this.fieldSize, _this.stride);\n        util.assert(util.isInt(_this.zeroPad), \"The zero padding (\" + _this.zeroPad + \") must be an integer. Change the \" +\n            \"stride and/or zero pad parameters\");\n        return _this;\n    }\n    Convolution2D.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var weights = inferenceArrays.get(this.wTensor);\n        var biases = inferenceArrays.get(this.bTensor);\n        var x = inferenceArrays.get(this.xTensor);\n        math.scope(function (keep) {\n            inferenceArrays.set(_this.yTensor, keep(math.conv2d(x, weights, biases, _this.stride, _this.zeroPad)));\n        });\n    };\n    Convolution2D.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var filter = inferenceArrays.get(this.wTensor);\n        var x = inferenceArrays.get(this.xTensor);\n        var dy = gradientArrays.get(this.yTensor);\n        math.scope(function () {\n            var dw = math.conv2dDerFilter(x, dy, filter.shape, _this.stride, _this.zeroPad);\n            var db = math.conv2dDerBias(dy);\n            var dx = math.conv2dDerInput(x.shape, dy, filter, _this.stride, _this.zeroPad);\n            gradientArrays.add(_this.wTensor, dw);\n            gradientArrays.add(_this.bTensor, db);\n            gradientArrays.add(_this.xTensor, dx);\n        });\n    };\n    Convolution2D.prototype.assertWeightsShape = function (weightsShape) {\n        util.assert(weightsShape[0] === this.fieldSize &&\n            weightsShape[1] === this.fieldSize &&\n            weightsShape[2] === this.xTensor.shape[2] &&\n            weightsShape[3] === this.outputDepth, \"weights must be of shape [\" + this.fieldSize + \",\" + this.fieldSize + \",\" +\n            (this.xTensor.shape[2] + \",\" + this.outputDepth + \"] but they are of\") +\n            (\"shape [\" + weightsShape + \"]\"));\n    };\n    return Convolution2D;\n}(op_1.Operation));\nexports.Convolution2D = Convolution2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/ops/convolution.js\n// module id = jnen\n// module chunks = 0","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime-module.js\n// module id = jyFz\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar TransposeProgram = (function () {\n    function TransposeProgram(aShape, newDim) {\n        this.variableNames = ['A'];\n        var outputShape = new Array(aShape.length);\n        for (var i = 0; i < outputShape.length; i++) {\n            outputShape[i] = aShape[newDim[i]];\n        }\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        var dtype = shader_compiler_1.getCoordsDataType(this.rank);\n        var switched = getSwitchedCoords(newDim);\n        this.userCode = \"\\n    void main() {\\n      \" + dtype + \" resRC = getOutputCoords();\\n      setOutput(getA(\" + switched + \"));\\n    }\\n    \";\n    }\n    return TransposeProgram;\n}());\nexports.TransposeProgram = TransposeProgram;\nfunction getSwitchedCoords(newDim) {\n    var rank = newDim.length;\n    if (rank > 4) {\n        throw Error(\"Transpose for rank \" + rank + \" is not yet supported\");\n    }\n    var originalOrder = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n    var switchedCoords = new Array(rank);\n    for (var i = 0; i < newDim.length; i++) {\n        switchedCoords[newDim[i]] = originalOrder[i];\n    }\n    return switchedCoords.join();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/transpose_gpu.js\n// module id = jySH\n// module chunks = 0","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && key in exports) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_export.js\n// module id = kM2E\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = require(\"./ndarray\");\nvar TanHFunc = (function () {\n    function TanHFunc() {\n        this.one = ndarray_1.Scalar.new(1);\n    }\n    TanHFunc.prototype.output = function (math, x) {\n        return math.tanh(x);\n    };\n    TanHFunc.prototype.der = function (math, x, y) {\n        var _this = this;\n        return math.scope(function () {\n            var ySquared = math.elementWiseMul(y, y);\n            return math.scalarMinusArray(_this.one, ySquared);\n        });\n    };\n    TanHFunc.prototype.dispose = function () {\n        this.one.dispose();\n    };\n    return TanHFunc;\n}());\nexports.TanHFunc = TanHFunc;\nvar ReLUFunc = (function () {\n    function ReLUFunc() {\n    }\n    ReLUFunc.prototype.output = function (math, x) {\n        return math.relu(x);\n    };\n    ReLUFunc.prototype.der = function (math, x, y) {\n        return math.step(x);\n    };\n    ReLUFunc.prototype.dispose = function () { };\n    return ReLUFunc;\n}());\nexports.ReLUFunc = ReLUFunc;\nvar LeakyReluFunc = (function () {\n    function LeakyReluFunc(alpha) {\n        this.alpha = alpha;\n    }\n    LeakyReluFunc.prototype.output = function (math, x) {\n        return math.leakyRelu(x, this.alpha);\n    };\n    LeakyReluFunc.prototype.der = function (math, x, y) {\n        return math.step(x, this.alpha);\n    };\n    LeakyReluFunc.prototype.dispose = function () { };\n    return LeakyReluFunc;\n}());\nexports.LeakyReluFunc = LeakyReluFunc;\nvar SigmoidFunc = (function () {\n    function SigmoidFunc() {\n    }\n    SigmoidFunc.prototype.output = function (math, x) {\n        return math.sigmoid(x);\n    };\n    SigmoidFunc.prototype.der = function (math, x, y) {\n        return math.scope(function () {\n            var ySquared = math.elementWiseMul(y, y);\n            return math.subStrict(y, ySquared);\n        });\n    };\n    SigmoidFunc.prototype.dispose = function () { };\n    return SigmoidFunc;\n}());\nexports.SigmoidFunc = SigmoidFunc;\nvar SquareFunc = (function () {\n    function SquareFunc() {\n        this.two = ndarray_1.Scalar.new(2);\n    }\n    SquareFunc.prototype.output = function (math, x) {\n        return math.elementWiseMul(x, x);\n    };\n    SquareFunc.prototype.der = function (math, x, y) {\n        return math.scalarTimesArray(this.two, x);\n    };\n    SquareFunc.prototype.dispose = function () {\n        this.two.dispose();\n    };\n    return SquareFunc;\n}());\nexports.SquareFunc = SquareFunc;\nvar EluFunc = (function () {\n    function EluFunc() {\n    }\n    EluFunc.prototype.output = function (math, x) {\n        return math.elu(x);\n    };\n    EluFunc.prototype.der = function (math, x, y) {\n        return math.eluDer(x);\n    };\n    EluFunc.prototype.dispose = function () { };\n    return EluFunc;\n}());\nexports.EluFunc = EluFunc;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/activation_functions.js\n// module id = kcYE\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getBroadcastDims(inShape, outShape) {\n    var inRank = inShape.length;\n    var dims = [];\n    for (var i = 0; i < inRank; i++) {\n        var dim = inRank - 1 - i;\n        var a = inShape[dim] || 1;\n        var b = outShape[outShape.length - 1 - i] || 1;\n        if (b > 1 && a === 1) {\n            dims.unshift(dim);\n        }\n    }\n    return dims;\n}\nexports.getBroadcastDims = getBroadcastDims;\nfunction broadcastDimsAreOuter(dims) {\n    for (var i = 0; i < dims.length; i++) {\n        if (dims[i] !== i) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.broadcastDimsAreOuter = broadcastDimsAreOuter;\nfunction assertAndGetBroadcastShape(shapeA, shapeB) {\n    var result = [];\n    var errMsg = \"Operands could not be broadcast together with shapes \" +\n        (shapeA + \" and \" + shapeB + \".\");\n    var l = Math.max(shapeA.length, shapeB.length);\n    for (var i = 0; i < l; i++) {\n        var a = shapeA[shapeA.length - i - 1] || 1;\n        var b = shapeB[shapeB.length - i - 1] || 1;\n        if (a > 1 && b > 1 && a !== b) {\n            throw Error(errMsg);\n        }\n        result.unshift(Math.max(a, b));\n    }\n    return result;\n}\nexports.assertAndGetBroadcastShape = assertAndGetBroadcastShape;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/broadcast_util.js\n// module id = kiVh\n// module chunks = 0","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_invoke.js\n// module id = knuC\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graph_util = require(\"../graph_util\");\nvar op_1 = require(\"./op\");\nvar Log = (function (_super) {\n    __extends(Log, _super);\n    function Log(xTensor, yTensor) {\n        var _this = _super.call(this) || this;\n        _this.xTensor = xTensor;\n        _this.yTensor = yTensor;\n        return _this;\n    }\n    Log.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x = inferenceArrays.get(this.xTensor);\n        math.scope(function (keep) {\n            inferenceArrays.set(_this.yTensor, keep(math.log(x)));\n        });\n    };\n    Log.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var x = inferenceArrays.get(this.xTensor);\n        var dy = gradientArrays.get(this.yTensor);\n        math.scope(function () {\n            if (graph_util.shouldBackProp(_this.xTensor)) {\n                gradientArrays.add(_this.xTensor, math.divide(dy, x));\n            }\n        });\n    };\n    return Log;\n}(op_1.Operation));\nexports.Log = Log;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/ops/log.js\n// module id = l7u8\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar initializers_1 = require(\"../initializers\");\nvar concat_util = require(\"../math/concat_util\");\nvar conv_util = require(\"../math/conv_util\");\nvar ndarray_1 = require(\"../math/ndarray\");\nvar util = require(\"../util\");\nvar GraphLayers = (function () {\n    function GraphLayers(g) {\n        this.g = g;\n    }\n    GraphLayers.prototype.dense = function (name, x, units, activation, useBias, kernelInitializer, biasInitializer) {\n        if (activation === void 0) { activation = null; }\n        if (useBias === void 0) { useBias = true; }\n        if (kernelInitializer === void 0) { kernelInitializer = new initializers_1.VarianceScalingInitializer(); }\n        if (biasInitializer === void 0) { biasInitializer = new initializers_1.ZerosInitializer(); }\n        var weights = this.g.variable(name + '-weights', kernelInitializer.initialize([x.shape[0], units], x.shape[0], units));\n        var out = this.g.matmul(x, weights);\n        if (useBias) {\n            var bias = this.g.variable(name + '-bias', biasInitializer.initialize([units], x.shape[0], units));\n            out = this.g.add(out, bias);\n        }\n        if (activation != null) {\n            out = activation(out);\n        }\n        return out;\n    };\n    return GraphLayers;\n}());\nexports.GraphLayers = GraphLayers;\nvar Graph = (function () {\n    function Graph() {\n        this.nodes = [];\n        this.layers = new GraphLayers(this);\n    }\n    Graph.prototype.variable = function (name, data) {\n        return this.addNodeAndReturnOutput(new VariableNode(this, name, data));\n    };\n    Graph.prototype.placeholder = function (name, shape) {\n        return this.addNodeAndReturnOutput(new PlaceholderNode(this, name, shape));\n    };\n    Graph.prototype.constant = function (value) {\n        var finalValue;\n        if (typeof value === 'number') {\n            finalValue = ndarray_1.Scalar.new(value);\n        }\n        else if (value instanceof ndarray_1.NDArray) {\n            finalValue = value;\n        }\n        else if (value instanceof Array) {\n            var flatValues = util.flatten(value);\n            var vals = new Float32Array(flatValues);\n            finalValue = ndarray_1.NDArray.make(util.inferShape(value), { values: vals });\n        }\n        else {\n            throw new Error('unimplemented constant type.');\n        }\n        return this.addNodeAndReturnOutput(new ConstantNode(this, finalValue));\n    };\n    Graph.prototype.reshape = function (x, shape) {\n        return this.addNodeAndReturnOutput(new ReshapeNode(this, 'Reshape', x, shape));\n    };\n    Graph.prototype.fusedLinearCombination = function (x1, x2, c1, c2) {\n        return this.addNodeAndReturnOutput(new FusedLinearCombinationNode(this, x1, x2, c1, c2));\n    };\n    Graph.prototype.add = function (x1, x2) {\n        return this.addNodeAndReturnOutput(new AddNode(this, x1, x2));\n    };\n    Graph.prototype.subtract = function (x1, x2) {\n        return this.addNodeAndReturnOutput(new SubtractNode(this, x1, x2));\n    };\n    Graph.prototype.multiply = function (x1, x2) {\n        return this.addNodeAndReturnOutput(new MultiplyNode(this, x1, x2));\n    };\n    Graph.prototype.divide = function (x1, x2) {\n        return this.addNodeAndReturnOutput(new DivideNode(this, x1, x2));\n    };\n    Graph.prototype.reduceSum = function (x) {\n        return this.addNodeAndReturnOutput(new ReduceSumNode(this, x));\n    };\n    Graph.prototype.concat3d = function (x1, x2, axis) {\n        return this.addNodeAndReturnOutput(new Concat3DNode(this, x1, x2, axis));\n    };\n    Graph.prototype.matmul = function (x1, x2) {\n        return this.addNodeAndReturnOutput(new MatMulNode(this, x1, x2));\n    };\n    Graph.prototype.conv2d = function (x, w, b, fieldSize, outputDepth, stride, zeroPad) {\n        if (stride === void 0) { stride = 1; }\n        return this.addNodeAndReturnOutput(new Convolution2DNode(this, x, w, b, fieldSize, outputDepth, stride, zeroPad));\n    };\n    Graph.prototype.maxPool = function (x, fieldSize, stride, zeroPad) {\n        if (stride === void 0) { stride = 1; }\n        return this.addNodeAndReturnOutput(new MaxPoolNode(this, x, fieldSize, stride, zeroPad));\n    };\n    Graph.prototype.exp = function (x) {\n        return this.addNodeAndReturnOutput(new ExpNode(this, x));\n    };\n    Graph.prototype.log = function (x) {\n        return this.addNodeAndReturnOutput(new LogNode(this, x));\n    };\n    Graph.prototype.relu = function (x) {\n        return this.addNodeAndReturnOutput(new ReLUNode(this, x));\n    };\n    Graph.prototype.leakyRelu = function (x, alpha) {\n        return this.addNodeAndReturnOutput(new LeakyReLUNode(this, x, alpha));\n    };\n    Graph.prototype.prelu = function (x, alpha) {\n        return this.addNodeAndReturnOutput(new PReLUNode(this, x, alpha));\n    };\n    Graph.prototype.elu = function (x) {\n        return this.addNodeAndReturnOutput(new EluNode(this, x));\n    };\n    Graph.prototype.tanh = function (x) {\n        return this.addNodeAndReturnOutput(new TanHNode(this, x));\n    };\n    Graph.prototype.sigmoid = function (x) {\n        return this.addNodeAndReturnOutput(new SigmoidNode(this, x));\n    };\n    Graph.prototype.square = function (x) {\n        return this.addNodeAndReturnOutput(new SquareNode(this, x));\n    };\n    Graph.prototype.softmax = function (x) {\n        return this.addNodeAndReturnOutput(new SoftmaxNode(this, x));\n    };\n    Graph.prototype.softmaxCrossEntropyCost = function (x, target) {\n        return this.addNodeAndReturnOutput(new SoftmaxCrossEntropyCostNode(this, x, target));\n    };\n    Graph.prototype.meanSquaredCost = function (label, prediction) {\n        return this.addNodeAndReturnOutput(new MeanSquaredCostNode(this, label, prediction));\n    };\n    Graph.prototype.argmax = function (x) {\n        return this.addNodeAndReturnOutput(new ArgMaxNode(this, x));\n    };\n    Graph.prototype.argmaxEquals = function (x1, x2) {\n        return this.addNodeAndReturnOutput(new ArgMaxEqualsNode(this, x1, x2));\n    };\n    Graph.prototype.addNodeAndReturnOutput = function (node) {\n        this.nodes.push(node);\n        node.validate();\n        return node.output;\n    };\n    Graph.prototype.getNodes = function () {\n        return this.nodes;\n    };\n    return Graph;\n}());\nexports.Graph = Graph;\nvar Tensor = (function () {\n    function Tensor(shape) {\n        this.shape = shape;\n        this.id = Tensor.nextID++;\n    }\n    Tensor.nextID = 0;\n    return Tensor;\n}());\nexports.Tensor = Tensor;\nvar Node = (function () {\n    function Node(graph, name, inputs, output) {\n        this.graph = graph;\n        this.name = name;\n        this.inputs = inputs;\n        this.output = output;\n        this.id = Node.nextID++;\n        output.node = this;\n    }\n    Node.nextID = 0;\n    return Node;\n}());\nexports.Node = Node;\nvar VariableNode = (function (_super) {\n    __extends(VariableNode, _super);\n    function VariableNode(graph, name, data) {\n        var _this = _super.call(this, graph, name, {}, new Tensor(data.shape)) || this;\n        _this.data = data;\n        return _this;\n    }\n    VariableNode.prototype.validate = function () {\n        util.assert(this.data != null, 'Error adding variable op: Data for variable \\'' + this.name +\n            '\\' is null or undefined');\n    };\n    return VariableNode;\n}(Node));\nexports.VariableNode = VariableNode;\nvar PlaceholderNode = (function (_super) {\n    __extends(PlaceholderNode, _super);\n    function PlaceholderNode(graph, name, shape) {\n        return _super.call(this, graph, name, {}, new Tensor(shape)) || this;\n    }\n    PlaceholderNode.prototype.validate = function () { };\n    return PlaceholderNode;\n}(Node));\nexports.PlaceholderNode = PlaceholderNode;\nvar ConstantNode = (function (_super) {\n    __extends(ConstantNode, _super);\n    function ConstantNode(graph, data) {\n        var _this = _super.call(this, graph, 'Constant', {}, new Tensor(data.shape)) || this;\n        _this.data = data;\n        return _this;\n    }\n    ConstantNode.prototype.validate = function () {\n        util.assert(this.data != null, 'Error adding constant: data for placeholder \\'' + this.name +\n            '\\' is null or undefined');\n    };\n    return ConstantNode;\n}(Node));\nexports.ConstantNode = ConstantNode;\nvar ReshapeNode = (function (_super) {\n    __extends(ReshapeNode, _super);\n    function ReshapeNode(graph, name, x, shape) {\n        var _this = _super.call(this, graph, name, { x: x }, new Tensor(shape)) || this;\n        _this.name = name;\n        _this.x = x;\n        _this.shape = shape;\n        return _this;\n    }\n    ReshapeNode.prototype.validate = function () {\n        var xSize = util.sizeFromShape(this.x.shape);\n        var shapeSize = util.sizeFromShape(this.shape);\n        util.assert(xSize === shapeSize, \"Error making reshape operation: input to reshape '\" + this.name + \"'\" +\n            (\" of shape (\" + this.x.shape + \") does not match size of \") +\n            (\"requested shape \" + this.shape + \".\"));\n    };\n    ReshapeNode.X = 'x';\n    return ReshapeNode;\n}(Node));\nexports.ReshapeNode = ReshapeNode;\nvar FusedLinearCombinationNode = (function (_super) {\n    __extends(FusedLinearCombinationNode, _super);\n    function FusedLinearCombinationNode(graph, t1, t2, c1, c2) {\n        var _this = _super.call(this, graph, 'Linear Combination', { t1: t1, t2: t2, c1: c1, c2: c2 }, new Tensor(t1.shape)) || this;\n        _this.t1 = t1;\n        _this.t2 = t2;\n        _this.c1 = c1;\n        _this.c2 = c2;\n        return _this;\n    }\n    FusedLinearCombinationNode.prototype.validate = function () {\n        util.assertShapesMatch(this.t1.shape, this.t2.shape);\n        if (!util.isScalarShape(this.c1.shape)) {\n            throw new Error('Error adding fusedLinearCombination: c1 is not a scalar, got ' +\n                (\"shape: \" + this.c1.shape));\n        }\n        if (!util.isScalarShape(this.c2.shape)) {\n            throw new Error('Error adding fusedLinearCombination: c2 is not a scalar, got ' +\n                (\"shape: \" + this.c2.shape));\n        }\n    };\n    FusedLinearCombinationNode.T1 = 't1';\n    FusedLinearCombinationNode.T2 = 't2';\n    FusedLinearCombinationNode.C1 = 'c1';\n    FusedLinearCombinationNode.C2 = 'c2';\n    return FusedLinearCombinationNode;\n}(Node));\nexports.FusedLinearCombinationNode = FusedLinearCombinationNode;\nvar AddNode = (function (_super) {\n    __extends(AddNode, _super);\n    function AddNode(graph, t1, t2) {\n        var _this = _super.call(this, graph, 'Add', { t1: t1, t2: t2 }, new Tensor(util.sizeFromShape(t1.shape) === 1\n            ? t2.shape\n            : (t1.shape.length < t2.shape.length ? t2.shape : t1.shape))) || this;\n        _this.t1 = t1;\n        _this.t2 = t2;\n        return _this;\n    }\n    AddNode.prototype.validate = function () {\n        util.assert(util.sizeFromShape(this.t1.shape) === 1 ||\n            util.sizeFromShape(this.t2.shape) === 1 ||\n            util.arraysEqual(this.t1.shape, this.t2.shape) ||\n            (this.t1.shape.length === 2 && this.t2.shape.length === 1 &&\n                this.t1.shape[1] === this.t2.shape[0]) ||\n            (this.t1.shape.length === 1 && this.t2.shape.length === 2 &&\n                this.t1.shape[0] === this.t2.shape[1]), 'Error adding add operation op: one of inputs must be scalar, ' +\n            (\"shapes \" + this.t1.shape + \" and \" + this.t2.shape + \" must match,\") +\n            'or one of them can be broadcasted (2D and 1D).');\n    };\n    AddNode.T1 = 't1';\n    AddNode.T2 = 't2';\n    return AddNode;\n}(Node));\nexports.AddNode = AddNode;\nvar SubtractNode = (function (_super) {\n    __extends(SubtractNode, _super);\n    function SubtractNode(graph, t1, t2) {\n        var _this = _super.call(this, graph, 'Subtract', { t1: t1, t2: t2 }, new Tensor(util.sizeFromShape(t1.shape) === 1 ? t2.shape : t1.shape)) || this;\n        _this.t1 = t1;\n        _this.t2 = t2;\n        return _this;\n    }\n    SubtractNode.prototype.validate = function () {\n        util.assert(util.sizeFromShape(this.t1.shape) === 1 ||\n            util.sizeFromShape(this.t2.shape) === 1 ||\n            util.arraysEqual(this.t1.shape, this.t2.shape), 'Error adding subtract op: one of inputs must be scalar or the ' +\n            (\"shapes \" + this.t1.shape + \" and \" + this.t2.shape + \" must match.\"));\n    };\n    SubtractNode.T1 = 't1';\n    SubtractNode.T2 = 't2';\n    return SubtractNode;\n}(Node));\nexports.SubtractNode = SubtractNode;\nvar MultiplyNode = (function (_super) {\n    __extends(MultiplyNode, _super);\n    function MultiplyNode(graph, t1, t2) {\n        var _this = _super.call(this, graph, 'Multiply', { t1: t1, t2: t2 }, new Tensor(util.sizeFromShape(t1.shape) === 1 ? t2.shape : t1.shape)) || this;\n        _this.t1 = t1;\n        _this.t2 = t2;\n        return _this;\n    }\n    MultiplyNode.prototype.validate = function () {\n        util.assert(util.sizeFromShape(this.t1.shape) === 1 ||\n            util.sizeFromShape(this.t2.shape) === 1 ||\n            util.arraysEqual(this.t1.shape, this.t2.shape), 'Error adding multiply op: one of inputs must be scalar or the ' +\n            (\"shapes \" + this.t1.shape + \" and \" + this.t2.shape + \" must match.\"));\n    };\n    MultiplyNode.T1 = 't1';\n    MultiplyNode.T2 = 't2';\n    return MultiplyNode;\n}(Node));\nexports.MultiplyNode = MultiplyNode;\nvar DivideNode = (function (_super) {\n    __extends(DivideNode, _super);\n    function DivideNode(graph, t1, t2) {\n        var _this = _super.call(this, graph, 'Divide', { t1: t1, t2: t2 }, new Tensor(util.sizeFromShape(t1.shape) === 1 ? t2.shape : t1.shape)) || this;\n        _this.t1 = t1;\n        _this.t2 = t2;\n        return _this;\n    }\n    DivideNode.prototype.validate = function () {\n        util.assert(util.sizeFromShape(this.t1.shape) === 1 ||\n            util.sizeFromShape(this.t2.shape) === 1 ||\n            util.arraysEqual(this.t1.shape, this.t2.shape), 'Error adding divide op: one of inputs must be scalar or the ' +\n            (\"shapes \" + this.t1.shape + \" and \" + this.t2.shape + \" must match.\"));\n    };\n    DivideNode.T1 = 't1';\n    DivideNode.T2 = 't2';\n    return DivideNode;\n}(Node));\nexports.DivideNode = DivideNode;\nvar ReduceSumNode = (function (_super) {\n    __extends(ReduceSumNode, _super);\n    function ReduceSumNode(graph, x) {\n        return _super.call(this, graph, 'ReduceSum', { x: x }, new Tensor([])) || this;\n    }\n    ReduceSumNode.prototype.validate = function () { };\n    ReduceSumNode.X = 'x';\n    return ReduceSumNode;\n}(Node));\nexports.ReduceSumNode = ReduceSumNode;\nvar Concat3DNode = (function (_super) {\n    __extends(Concat3DNode, _super);\n    function Concat3DNode(graph, x1, x2, axis) {\n        var _this = _super.call(this, graph, 'Concat3D', { x1: x1, x2: x2 }, new Tensor(concat_util.computeOutShape(x1.shape, x2.shape, axis))) || this;\n        _this.x1 = x1;\n        _this.x2 = x2;\n        _this.axis = axis;\n        return _this;\n    }\n    Concat3DNode.prototype.validate = function () {\n        concat_util.assertParams(this.x1.shape, this.x2.shape, this.axis);\n    };\n    Concat3DNode.X1 = 'x1';\n    Concat3DNode.X2 = 'x2';\n    Concat3DNode.AXIS = 'axis';\n    return Concat3DNode;\n}(Node));\nexports.Concat3DNode = Concat3DNode;\nfunction getMatMulOutputShape(x1Shape, x2Shape) {\n    if (x1Shape.length === 1 && x2Shape.length === 1) {\n        return [1];\n    }\n    else if (x1Shape.length === 1 && x2Shape.length === 2) {\n        return [x2Shape[1]];\n    }\n    else if (x1Shape.length === 2 && x2Shape.length === 1) {\n        return [x1Shape[0]];\n    }\n    return [x1Shape[0], x2Shape[1]];\n}\nvar MatMulNode = (function (_super) {\n    __extends(MatMulNode, _super);\n    function MatMulNode(graph, x1, x2) {\n        var _this = _super.call(this, graph, 'MatMul', { x1: x1, x2: x2 }, new Tensor(getMatMulOutputShape(x1.shape, x2.shape))) || this;\n        _this.x1 = x1;\n        _this.x2 = x2;\n        return _this;\n    }\n    MatMulNode.prototype.validate = function () {\n        if (this.x1.shape.length === 2 && this.x2.shape.length === 2) {\n            util.assert(this.x1.shape[1] === this.x2.shape[0], 'Error adding matmul op: inner shapes of matrices with shapes ' +\n                (this.x1.shape + \" and \" + this.x2.shape + \" must match.\"));\n        }\n        else if (this.x1.shape.length === 2 && this.x2.shape.length === 1) {\n            util.assert(this.x1.shape[1] === this.x2.shape[0], 'Error adding matmul op: second dimension of matrix with shape ' +\n                this.x1.shape.toString() +\n                (\" must match size of vector with shape \" + this.x2.shape + \".\"));\n        }\n        else if (this.x1.shape.length === 1 && this.x2.shape.length === 2) {\n            util.assert(this.x1.shape[0] === this.x2.shape[0], \"Error adding matmul op: size of vector with shape \" + this.x1.shape +\n                \" must match first dimension of matrix with \" +\n                (\"shape \" + this.x2.shape + \".\"));\n        }\n        else {\n            throw new Error('Error adding matmul op: inputs must be vectors or matrices.');\n        }\n    };\n    MatMulNode.X1 = 'x1';\n    MatMulNode.X2 = 'x2';\n    return MatMulNode;\n}(Node));\nexports.MatMulNode = MatMulNode;\nvar Convolution2DNode = (function (_super) {\n    __extends(Convolution2DNode, _super);\n    function Convolution2DNode(graph, x, w, b, fieldSize, outputDepth, stride, zeroPad) {\n        if (stride === void 0) { stride = 1; }\n        var _this = _super.call(this, graph, 'Convolution 2D', { x: x, w: w, b: b }, new Tensor(conv_util.computeOutputShape3D(x.shape, fieldSize, outputDepth, stride, zeroPad))) || this;\n        _this.x = x;\n        _this.w = w;\n        _this.b = b;\n        _this.fieldSize = fieldSize;\n        _this.outputDepth = outputDepth;\n        _this.stride = stride;\n        _this.zeroPad = zeroPad;\n        return _this;\n    }\n    Convolution2DNode.prototype.validate = function () {\n        util.assert(this.x.shape.length === 3, 'Error adding conv2d op: input must be of rank 3, but got shape: ' +\n            (this.x.shape + \".\"));\n        util.assert(this.w.shape.length === 4, 'Error adding conv2d op: weights must be of rank 4, but got shape: ' +\n            (this.w.shape + \".\"));\n        util.assert(this.b.shape.length === 1, 'Error adding conv2d op: biases must be of rank 1, but got shape: ' +\n            (this.b.shape + \".\"));\n        util.assert(this.x.shape[2] === this.w.shape[2], \"Error adding conv2d op: depth of input (\" + this.x.shape[2] + \") \" +\n            (\"must match input depth for weights (\" + this.w.shape[2] + \").\"));\n    };\n    Convolution2DNode.X = 'x';\n    Convolution2DNode.W = 'w';\n    Convolution2DNode.B = 'b';\n    return Convolution2DNode;\n}(Node));\nexports.Convolution2DNode = Convolution2DNode;\nvar MaxPoolNode = (function (_super) {\n    __extends(MaxPoolNode, _super);\n    function MaxPoolNode(graph, x, fieldSize, stride, zeroPad) {\n        if (stride === void 0) { stride = 1; }\n        var _this = _super.call(this, graph, 'Max pool', { x: x }, new Tensor(conv_util.computeOutputShape3D(x.shape, fieldSize, x.shape[2], stride, zeroPad))) || this;\n        _this.x = x;\n        _this.fieldSize = fieldSize;\n        _this.stride = stride;\n        _this.zeroPad = zeroPad;\n        return _this;\n    }\n    MaxPoolNode.prototype.validate = function () {\n        util.assert(this.x.shape.length === 3, 'Error adding maxPool op: input must be of rank 3, but got shape: ' +\n            (this.x.shape + \".\"));\n    };\n    MaxPoolNode.X = 'x';\n    return MaxPoolNode;\n}(Node));\nexports.MaxPoolNode = MaxPoolNode;\nvar ReLUNode = (function (_super) {\n    __extends(ReLUNode, _super);\n    function ReLUNode(graph, x) {\n        return _super.call(this, graph, 'ReLU', { x: x }, new Tensor(x.shape)) || this;\n    }\n    ReLUNode.prototype.validate = function () { };\n    ReLUNode.X = 'x';\n    return ReLUNode;\n}(Node));\nexports.ReLUNode = ReLUNode;\nvar LeakyReLUNode = (function (_super) {\n    __extends(LeakyReLUNode, _super);\n    function LeakyReLUNode(graph, x, alpha) {\n        var _this = _super.call(this, graph, 'LeakyReLU', { x: x }, new Tensor(x.shape)) || this;\n        _this.alpha = alpha;\n        return _this;\n    }\n    LeakyReLUNode.prototype.validate = function () { };\n    LeakyReLUNode.X = 'x';\n    return LeakyReLUNode;\n}(Node));\nexports.LeakyReLUNode = LeakyReLUNode;\nvar PReLUNode = (function (_super) {\n    __extends(PReLUNode, _super);\n    function PReLUNode(graph, x, alpha) {\n        var _this = _super.call(this, graph, 'PReLU', { x: x, alpha: alpha }, new Tensor(x.shape)) || this;\n        _this.x = x;\n        _this.alpha = alpha;\n        return _this;\n    }\n    PReLUNode.prototype.validate = function () {\n        util.assert(util.arraysEqual(this.x.shape, this.alpha.shape), 'Error adding pRelu op: the ' +\n            (\"shapes x: \" + this.x.shape + \" and alpha: \" + this.alpha.shape + \" must match.\"));\n    };\n    PReLUNode.X = 'x';\n    PReLUNode.ALPHA = 'alpha';\n    return PReLUNode;\n}(Node));\nexports.PReLUNode = PReLUNode;\nvar EluNode = (function (_super) {\n    __extends(EluNode, _super);\n    function EluNode(graph, x) {\n        return _super.call(this, graph, 'Elu', { x: x }, new Tensor(x.shape)) || this;\n    }\n    EluNode.prototype.validate = function () { };\n    EluNode.X = 'x';\n    return EluNode;\n}(Node));\nexports.EluNode = EluNode;\nvar ExpNode = (function (_super) {\n    __extends(ExpNode, _super);\n    function ExpNode(graph, x) {\n        return _super.call(this, graph, 'Exp', { x: x }, new Tensor(x.shape)) || this;\n    }\n    ExpNode.prototype.validate = function () { };\n    ExpNode.X = 'x';\n    return ExpNode;\n}(Node));\nexports.ExpNode = ExpNode;\nvar LogNode = (function (_super) {\n    __extends(LogNode, _super);\n    function LogNode(graph, x) {\n        return _super.call(this, graph, 'Log', { x: x }, new Tensor(x.shape)) || this;\n    }\n    LogNode.prototype.validate = function () { };\n    LogNode.X = 'x';\n    return LogNode;\n}(Node));\nexports.LogNode = LogNode;\nvar TanHNode = (function (_super) {\n    __extends(TanHNode, _super);\n    function TanHNode(graph, x) {\n        return _super.call(this, graph, 'TanH', { x: x }, new Tensor(x.shape)) || this;\n    }\n    TanHNode.prototype.validate = function () { };\n    TanHNode.X = 'x';\n    return TanHNode;\n}(Node));\nexports.TanHNode = TanHNode;\nvar SigmoidNode = (function (_super) {\n    __extends(SigmoidNode, _super);\n    function SigmoidNode(graph, x) {\n        return _super.call(this, graph, 'Sigmoid', { x: x }, new Tensor(x.shape)) || this;\n    }\n    SigmoidNode.prototype.validate = function () { };\n    SigmoidNode.X = 'x';\n    return SigmoidNode;\n}(Node));\nexports.SigmoidNode = SigmoidNode;\nvar SquareNode = (function (_super) {\n    __extends(SquareNode, _super);\n    function SquareNode(graph, x) {\n        return _super.call(this, graph, 'Square', { x: x }, new Tensor(x.shape)) || this;\n    }\n    SquareNode.prototype.validate = function () { };\n    SquareNode.X = 'x';\n    return SquareNode;\n}(Node));\nexports.SquareNode = SquareNode;\nvar SoftmaxCrossEntropyCostNode = (function (_super) {\n    __extends(SoftmaxCrossEntropyCostNode, _super);\n    function SoftmaxCrossEntropyCostNode(graph, x, target) {\n        var _this = _super.call(this, graph, 'SoftmaxCrossEntropyCost', { x: x, target: target }, new Tensor([])) || this;\n        _this.x = x;\n        _this.target = target;\n        return _this;\n    }\n    SoftmaxCrossEntropyCostNode.prototype.validate = function () {\n        util.assert(util.arraysEqual(this.x.shape, this.target.shape), \"Error adding softmaxCrossEntropyCost op: x shape (\" + this.x.shape + \") \" +\n            (\"must match target shape (\" + this.target.shape + \").\"));\n    };\n    SoftmaxCrossEntropyCostNode.X = 'x';\n    SoftmaxCrossEntropyCostNode.TARGET = 'target';\n    return SoftmaxCrossEntropyCostNode;\n}(Node));\nexports.SoftmaxCrossEntropyCostNode = SoftmaxCrossEntropyCostNode;\nvar SoftmaxNode = (function (_super) {\n    __extends(SoftmaxNode, _super);\n    function SoftmaxNode(graph, x) {\n        var _this = _super.call(this, graph, 'Softmax', { x: x }, new Tensor(x.shape)) || this;\n        _this.x = x;\n        return _this;\n    }\n    SoftmaxNode.prototype.validate = function () {\n        util.assert(this.x.shape.length === 1, 'The input to a softmax must be a 1-D tensor');\n        util.assert(this.x.shape[0] >= 2, 'The input to a softmax must have at least 2 values');\n    };\n    SoftmaxNode.X = 'x';\n    return SoftmaxNode;\n}(Node));\nexports.SoftmaxNode = SoftmaxNode;\nvar MeanSquaredCostNode = (function (_super) {\n    __extends(MeanSquaredCostNode, _super);\n    function MeanSquaredCostNode(graph, label, prediction) {\n        var _this = _super.call(this, graph, 'Mean Squared Cost', { label: label, prediction: prediction }, new Tensor([])) || this;\n        _this.label = label;\n        _this.prediction = prediction;\n        return _this;\n    }\n    MeanSquaredCostNode.prototype.validate = function () {\n        util.assert(util.arraysEqual(this.label.shape, this.prediction.shape), \"Error adding meanSquaredCost op: label shape (\" + this.label.shape + \") \" +\n            (\"must match prediction shape (\" + this.prediction.shape + \").\"));\n    };\n    MeanSquaredCostNode.LABEL = 'label';\n    MeanSquaredCostNode.PREDICTION = 'prediction';\n    return MeanSquaredCostNode;\n}(Node));\nexports.MeanSquaredCostNode = MeanSquaredCostNode;\nvar ArgMaxNode = (function (_super) {\n    __extends(ArgMaxNode, _super);\n    function ArgMaxNode(graph, x) {\n        var _this = _super.call(this, graph, 'ArgMax', { x: x }, new Tensor([1])) || this;\n        _this.x = x;\n        return _this;\n    }\n    ArgMaxNode.prototype.validate = function () {\n        util.assert(util.sizeFromShape(this.x.shape) > 0, 'Error adding argmax op: input tensor must have at least one entry.');\n    };\n    ArgMaxNode.X = 'x';\n    return ArgMaxNode;\n}(Node));\nexports.ArgMaxNode = ArgMaxNode;\nvar ArgMaxEqualsNode = (function (_super) {\n    __extends(ArgMaxEqualsNode, _super);\n    function ArgMaxEqualsNode(graph, x1, x2) {\n        var _this = _super.call(this, graph, 'ArgMaxEquals', { x1: x1, x2: x2 }, new Tensor([1])) || this;\n        _this.x1 = x1;\n        _this.x2 = x2;\n        return _this;\n    }\n    ArgMaxEqualsNode.prototype.validate = function () {\n        util.assert(util.arraysEqual(this.x1.shape, this.x2.shape), \"Error adding ArgMaxEquals op: x1 shape (\" + this.x1.shape + \") \" +\n            (\"must match x2 shape (\" + this.x2.shape + \").\"));\n    };\n    ArgMaxEqualsNode.X1 = 'x1';\n    ArgMaxEqualsNode.X2 = 'x2';\n    return ArgMaxEqualsNode;\n}(Node));\nexports.ArgMaxEqualsNode = ArgMaxEqualsNode;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/graph.js\n// module id = lABf\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = require(\"./math/ndarray\");\nvar VarianceScalingInitializer = (function () {\n    function VarianceScalingInitializer(scale, mode, distribution) {\n        if (scale === void 0) { scale = 1.0; }\n        if (mode === void 0) { mode = 'fan_in'; }\n        if (distribution === void 0) { distribution = 'normal'; }\n        this.scale = scale;\n        this.mode = mode;\n        this.distribution = distribution;\n    }\n    VarianceScalingInitializer.prototype.initialize = function (weightsShape, inputUnits, outputUnits) {\n        var n = 0;\n        if (this.mode === 'fan_in') {\n            n = inputUnits;\n        }\n        else if (this.mode === 'fan_out') {\n            n = outputUnits;\n        }\n        else if (this.mode === 'fan_avg') {\n            n = (inputUnits + outputUnits) / 2;\n        }\n        else {\n            throw new Error(\"Unexpected mode for variance scaling initializer: \" + this.mode);\n        }\n        if (this.distribution === 'normal') {\n            return ndarray_1.NDArray.randTruncatedNormal(weightsShape, 0.0, Math.sqrt(this.scale / n));\n        }\n        else if (this.distribution === 'uniform') {\n            return ndarray_1.NDArray.randUniform(weightsShape, 0.0, Math.sqrt(3 * this.scale / n));\n        }\n        else {\n            throw new Error(\"Unexpected distribution for variance scaling initializer: \" +\n                (\"\" + this.distribution));\n        }\n    };\n    return VarianceScalingInitializer;\n}());\nexports.VarianceScalingInitializer = VarianceScalingInitializer;\nvar ZerosInitializer = (function () {\n    function ZerosInitializer() {\n    }\n    ZerosInitializer.prototype.initialize = function (weightsShape, inputUnits, outputUnits) {\n        return ndarray_1.NDArray.zeros(weightsShape);\n    };\n    return ZerosInitializer;\n}());\nexports.ZerosInitializer = ZerosInitializer;\nvar OnesInitializer = (function () {\n    function OnesInitializer() {\n    }\n    OnesInitializer.prototype.initialize = function (weightsShape, inputUnits, outputUnits) {\n        var values = ndarray_1.NDArray.zeros(weightsShape);\n        values.fill(1);\n        return values;\n    };\n    return OnesInitializer;\n}());\nexports.OnesInitializer = OnesInitializer;\nvar ConstantInitializer = (function () {\n    function ConstantInitializer(value) {\n        if (value === void 0) { value = 0; }\n        this.value = value;\n    }\n    ConstantInitializer.prototype.initialize = function (weightsShape, inputUnits, outputUnits) {\n        var values = ndarray_1.NDArray.zeros(weightsShape);\n        values.fill(this.value);\n        return values;\n    };\n    return ConstantInitializer;\n}());\nexports.ConstantInitializer = ConstantInitializer;\nvar NDArrayInitializer = (function () {\n    function NDArrayInitializer(ndarray) {\n        this.ndarray = ndarray;\n    }\n    NDArrayInitializer.prototype.initialize = function (weightsShape, inputUnits, outputUnits) {\n        return this.ndarray;\n    };\n    return NDArrayInitializer;\n}());\nexports.NDArrayInitializer = NDArrayInitializer;\nvar RandomNormalInitializer = (function () {\n    function RandomNormalInitializer(mean, stdev) {\n        if (mean === void 0) { mean = 0; }\n        if (stdev === void 0) { stdev = .05; }\n        this.mean = mean;\n        this.stdev = stdev;\n    }\n    RandomNormalInitializer.prototype.initialize = function (weightsShape, inputUnits, outputUnits) {\n        return ndarray_1.NDArray.randNormal(weightsShape, this.mean, this.stdev);\n    };\n    return RandomNormalInitializer;\n}());\nexports.RandomNormalInitializer = RandomNormalInitializer;\nvar RandomTruncatedNormalInitializer = (function () {\n    function RandomTruncatedNormalInitializer(mean, stdev) {\n        if (mean === void 0) { mean = 0; }\n        if (stdev === void 0) { stdev = .05; }\n        this.mean = mean;\n        this.stdev = stdev;\n    }\n    RandomTruncatedNormalInitializer.prototype.initialize = function (weightsShape, inputUnits, outputUnits) {\n        return ndarray_1.NDArray.randTruncatedNormal(weightsShape, this.mean, this.stdev);\n    };\n    return RandomTruncatedNormalInitializer;\n}());\nexports.RandomTruncatedNormalInitializer = RandomTruncatedNormalInitializer;\nvar RandomUniformInitializer = (function () {\n    function RandomUniformInitializer(minval, maxval) {\n        if (minval === void 0) { minval = -.05; }\n        if (maxval === void 0) { maxval = .05; }\n        this.minval = minval;\n        this.maxval = maxval;\n    }\n    RandomUniformInitializer.prototype.initialize = function (weightsShape, inputUnits, outputUnits) {\n        return ndarray_1.NDArray.randUniform(weightsShape, this.minval, this.maxval);\n    };\n    return RandomUniformInitializer;\n}());\nexports.RandomUniformInitializer = RandomUniformInitializer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/initializers.js\n// module id = lCbW\n// module chunks = 0","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_a-function.js\n// module id = lOnJ\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../../../environment\");\nvar util = require(\"../../../util\");\nvar broadcast_util = require(\"../../broadcast_util\");\nvar tex_util = require(\"./tex_util\");\nvar tex_util_1 = require(\"./tex_util\");\nfunction makeShader(inputsInfo, outputShape, userCode, broadcast) {\n    var sampleSnippet = getSampleSnippet();\n    var setOutputSnippet = getSetOutputSnippet();\n    var inputPrefixSnippet = inputsInfo.map(function (x) { return \"uniform sampler2D \" + x.name + \";\"; }).join('\\n');\n    var inputSamplingSnippet = inputsInfo.map(function (x) { return getInputSamplingSnippet(x, outputShape, broadcast); })\n        .join('\\n');\n    var outTexShape = outputShape.texShape;\n    var outputSamplingSnippet = getOutputSamplingSnippet(outputShape.logicalShape, outTexShape);\n    var source = [\n        SHADER_PREFIX, sampleSnippet, setOutputSnippet, inputPrefixSnippet,\n        outputSamplingSnippet, inputSamplingSnippet, userCode\n    ].join('\\n');\n    return source;\n}\nexports.makeShader = makeShader;\nfunction getSampleSnippet() {\n    return environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED') ?\n        FLOAT_TEXTURE_SAMPLE_SNIPPET :\n        UNSIGNED_BYTE_TEXTURE_SAMPLE_SNIPPET;\n}\nfunction getSetOutputSnippet() {\n    return environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED') ?\n        FLOAT_TEXTURE_SETOUTPUT_SNIPPET :\n        UNSIGNED_BYTE_TEXTURE_SETOUTPUT_SNIPPET;\n}\nfunction getSamplerFromInInfo(inInfo) {\n    var shape = inInfo.shapeInfo.logicalShape;\n    switch (shape.length) {\n        case 0:\n            return getSamplerScalar(inInfo);\n        case 1:\n            return getSampler1D(inInfo);\n        case 2:\n            return getSampler2D(inInfo);\n        case 3:\n            return getSampler3D(inInfo);\n        case 4:\n            return getSampler4D(inInfo);\n        default:\n            throw new Error(shape.length + \"-D input sampling\" +\n                \" is not yet supported\");\n    }\n}\nfunction getInputSamplingSnippet(inInfo, outShapeInfo, broadcast) {\n    var res = getSamplerFlat(inInfo);\n    res += getSamplerFromInInfo(inInfo);\n    if (broadcast ||\n        util.arraysEqual(inInfo.shapeInfo.logicalShape, outShapeInfo.logicalShape)) {\n        res += getSamplerAtOutputCoords(inInfo, outShapeInfo, broadcast);\n    }\n    return res;\n}\nfunction getOutputSamplingSnippet(outShape, outTexShape) {\n    switch (outShape.length) {\n        case 0:\n            return getOutputScalarCoords();\n        case 1:\n            return getOutput1DCoords(outShape, outTexShape);\n        case 2:\n            return getOutput2DCoords(outShape, outTexShape);\n        case 3:\n            return getOutput3DCoords(outShape, outTexShape);\n        case 4:\n            return getOutput4DCoords(outShape, outTexShape);\n        default:\n            throw new Error(outShape.length + \"-D output sampling is not yet supported\");\n    }\n}\nvar SAMPLE_1D_SNIPPET = \"\\nvec2 UVfrom1D(int texNumR, int texNumC, int index) {\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\";\nvar SAMPLE_2D_SNIPPET = \"\\nvec2 UVfrom2D(int texNumR, int texNumC, int numC, int row, int col) {\\n  int index = row * numC + col;\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\";\nvar SAMPLE_3D_SNIPPET = \"\\nvec2 UVfrom3D(int texNumR, int texNumC, int stride0,\\n    int stride1, int row, int col, int depth) {\\n  // Explicitly use integer operations as dot() only works on floats.\\n  int index = row * stride0 + col * stride1 + depth;\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\";\nvar SAMPLE_4D_SNIPPET = \"\\nvec2 UVfrom4D(int texNumR, int texNumC, int stride0,\\n    int stride1, int stride2, int row, int col, int depth,\\n    int depth2) {\\n  // Explicitly use integer operations as dot() only works on floats.\\n  int index = row * stride0 + col * stride1 + depth * stride2 + depth2;\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\";\nvar UNSIGNED_BYTE_TEXTURE_SAMPLE_SNIPPET = \"\\n  uniform float NaN;\\n\\n  const vec4 floatDeltas = vec4(\\n      1.0,\\n      1.0 / 255.0,\\n      1.0 / (255.0 * 255.0),\\n      1.0 / (255.0 * 255.0 * 255.0)\\n  );\\n  const float minValue = \" + tex_util.FLOAT_MIN + \".0;\\n  const float maxValue = \" + tex_util.FLOAT_MAX + \".0;\\n  const float range = (maxValue - minValue) / 255.0;\\n  const vec2 dotRange = vec2(1.0, range);\\n\\n  float sample(sampler2D texture, vec2 uv) {\\n    vec4 sampleValue = texture2D(texture, uv);\\n    if (all(equal(sampleValue, vec4(\" + tex_util.BYTE_NAN_VALUE + \")))) {\\n      return NaN;\\n    }\\n\\n    vec4 encValue = floor(sampleValue * 255.0 + 0.5);\\n    float decodedValue = dot(encValue, floatDeltas);\\n    return dot(vec2(minValue, decodedValue), dotRange);\\n  }\\n\";\nvar UNSIGNED_BYTE_TEXTURE_SETOUTPUT_SNIPPET = \"\\n  const vec4 floatPowers = vec4(\\n    1.0,\\n    255.0,\\n    255.0 * 255.0,\\n    255.0 * 255.0 * 255.0\\n  );\\n  const vec2 recipRange = vec2(1.0/range);\\n  const vec2 recipRange255 = vec2(1.0/(maxValue - minValue));\\n\\n  void setOutput(float decodedValue) {\\n    if (isNaN(decodedValue)) {\\n      gl_FragColor = vec4(\" + tex_util.BYTE_NAN_VALUE + \");\\n      return;\\n    }\\n\\n    float a = dot(vec2(decodedValue, -minValue), recipRange);\\n    float b = fract(a) * 255.0;\\n    float c = fract(b) * 255.0;\\n    float d = fract(c) * 255.0;\\n    gl_FragColor = floor(vec4(a, b, c, d)) / 255.0;\\n\\n    // TODO(dsmilkov): Version above gets better accuracy but probably slower\\n    // than the version below. Benchmark to determine if the accuracy is worth\\n    // the cost.\\n\\n    // float normValue = dot(vec2(decodedValue, -minValue), recipRange255);\\n    // vec4 f = normValue * floatPowers;\\n    // gl_FragColor = floor(fract(f) * 255.0) / 255.0;\\n  }\\n\";\nvar FLOAT_TEXTURE_SAMPLE_SNIPPET = \"\\n  float sample(sampler2D texture, vec2 uv) {\\n    return texture2D(texture, uv).r;\\n  }\\n\";\nvar FLOAT_TEXTURE_SETOUTPUT_SNIPPET = \"\\n  void setOutput(float val) {\\n    gl_FragColor = vec4(val, 0, 0, 0);\\n  }\\n\";\nvar SHADER_PREFIX = \"\\n  precision highp float;\\n  precision highp int;\\n  varying vec2 resultUV;\\n  const vec2 halfCR = vec2(0.5, 0.5);\\n\\n  bool isNaN(float val) {\\n    float v1 = val * val;\\n    float v2 = val * val;\\n    return v1 == v2 ? false : true;\\n  }\\n\\n  bool hasNaN(vec4 values) {\\n    vec4 v1 = values * values;\\n    vec4 v2 = values * values;\\n    return any(notEqual(v1, v2));\\n  }\\n\\n  float getNaN(vec4 values) {\\n    return dot(vec4(1), values);\\n  }\\n\\n  int round(float value) {\\n    return int(floor(value + 0.5));\\n  }\\n\\n  int imod(int x, int y) {\\n    return x - y * (x / y);\\n  }\\n\\n  const vec2 randomConst = vec2(\\n    23.14069263277926, // e^pi (Gelfond's constant)\\n     2.665144142690225 // 2^sqrt(2) (Gelfond\\u2013Schneider constant)\\n  );\\n\\n  float random(float seed) {\\n      return fract(cos(dot(resultUV * seed, randomConst)) * 12345.6789);\\n  }\\n\\n  float sampleUVAndDepth(sampler2D texture, vec2 uv, int depth) {\\n    float value;\\n    if (depth == 0) {\\n      value = texture2D(texture, uv).r;\\n    } else if (depth == 1) {\\n      value = texture2D(texture, uv).g;\\n    } else if (depth == 2) {\\n      value = texture2D(texture, uv).b;\\n    } else if (depth == 3) {\\n      value = texture2D(texture, uv).a;\\n    }\\n    return floor(value * 255.0 + 0.5);\\n  }\\n\\n  \" + SAMPLE_1D_SNIPPET + \"\\n  \" + SAMPLE_2D_SNIPPET + \"\\n  \" + SAMPLE_3D_SNIPPET + \"\\n  \" + SAMPLE_4D_SNIPPET + \"\\n\";\nfunction getOutputScalarCoords() {\n    return \"\\n    int getOutputCoords() {\\n      return 0;\\n    }\\n  \";\n}\nfunction getOutput1DCoords(shape, texShape) {\n    if (texShape[0] === 1) {\n        return \"\\n      int getOutputCoords() {\\n        return int(resultUV.x * \" + texShape[1] + \".0);\\n      }\\n    \";\n    }\n    if (texShape[1] === 1) {\n        return \"\\n      int getOutputCoords() {\\n        return int(resultUV.y * \" + texShape[0] + \".0);\\n      }\\n    \";\n    }\n    return \"\\n    int getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n      return resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n    }\\n  \";\n}\nfunction getOutput3DCoords(shape, texShape) {\n    var stride0 = shape[1] * shape[2];\n    var stride1 = shape[2];\n    return \"\\n    ivec3 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n      int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n      int r = index / \" + stride0 + \";\\n      index -= r * \" + stride0 + \";\\n      int c = index / \" + stride1 + \";\\n      int d = index - c * \" + stride1 + \";\\n      return ivec3(r, c, d);\\n    }\\n  \";\n}\nfunction getOutput4DCoords(shape, texShape) {\n    var stride2 = shape[3];\n    var stride1 = shape[2] * stride2;\n    var stride0 = shape[1] * stride1;\n    return \"\\n    ivec4 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n        vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n      int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n\\n      int r = index / \" + stride0 + \";\\n      index -= r * \" + stride0 + \";\\n\\n      int c = index / \" + stride1 + \";\\n      index -= c * \" + stride1 + \";\\n\\n      int d = index / \" + stride2 + \";\\n      int d2 = index - d * \" + stride2 + \";\\n\\n      return ivec4(r, c, d, d2);\\n    }\\n  \";\n}\nfunction getOutput2DCoords(shape, texShape) {\n    if (util.arraysEqual(shape, texShape)) {\n        return \"\\n      ivec2 getOutputCoords() {\\n        return ivec2(resultUV.yx * vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n      }\\n    \";\n    }\n    if (shape[1] === 1) {\n        return \"\\n      ivec2 getOutputCoords() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n                               vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n        int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n        return ivec2(index, 0);\\n      }\\n    \";\n    }\n    if (shape[0] === 1) {\n        return \"\\n      ivec2 getOutputCoords() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n                               vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n        int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n        return ivec2(0, index);\\n      }\\n    \";\n    }\n    return \"\\n    ivec2 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n      int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n      int r = index / \" + shape[1] + \";\\n      int c = index - r * \" + shape[1] + \";\\n      return ivec2(r, c);\\n    }\\n  \";\n}\nfunction getSamplerScalar(inputInfo) {\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    return \"\\n    float \" + funcName + \"() {\\n      return sample(\" + texName + \", halfCR);\\n    }\\n  \";\n}\nfunction getSampler1D(inputInfo) {\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    return \"\\n    float \" + funcName + \"(int index) {\\n      return \" + funcName + \"Flat(index);\\n    }\\n  \";\n}\nfunction getSampler2D(inputInfo) {\n    var shape = inputInfo.shapeInfo.logicalShape;\n    var texShape = inputInfo.shapeInfo.texShape;\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    var texNumR = texShape[0];\n    var texNumC = texShape[1];\n    if (util.arraysEqual(shape, texShape)) {\n        return \"\\n    float \" + funcName + \"(int row, int col) {\\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n      return sample(\" + texName + \", uv);\\n    }\\n  \";\n    }\n    var _a = util.squeezeShape(shape), newShape = _a.newShape, keptDims = _a.keptDims;\n    var squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n        var newInputInfo = squeezeInputInfo(inputInfo, squeezedShape);\n        var params = ['row', 'col'];\n        return \"\\n      \" + getSamplerFromInInfo(newInputInfo) + \"\\n      float \" + funcName + \"(int row, int col) {\\n        return \" + funcName + \"(\" + getSqueezedParams(params, keptDims) + \");\\n      }\\n    \";\n    }\n    if (texNumC === 1) {\n        return \"\\n    float \" + funcName + \"(int row, int col) {\\n      int index = row * \" + shape[1] + \" + col;\\n      vec2 uv = vec2(0.5, (float(index) + 0.5) / \" + texNumR + \".0);\\n      return sample(\" + texName + \", uv);\\n    }\\n  \";\n    }\n    if (texNumR === 1) {\n        return \"\\n    float \" + funcName + \"(int row, int col) {\\n      int index = row * \" + shape[1] + \" + col;\\n      vec2 uv = vec2((float(index) + 0.5) / \" + texNumC + \".0, 0.5);\\n      return sample(\" + texName + \", uv);\\n    }\\n  \";\n    }\n    return \"\\n  float \" + funcName + \"(int row, int col) {\\n    vec2 uv = UVfrom2D(\" + texNumR + \", \" + texNumC + \", \" + shape[1] + \", row, col);\\n    return sample(\" + texName + \", uv);\\n  }\\n\";\n}\nfunction getSampler3D(inputInfo) {\n    var texShape = inputInfo.shapeInfo.texShape;\n    var shape = inputInfo.shapeInfo.logicalShape;\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    var texNumR = texShape[0];\n    var texNumC = texShape[1];\n    var stride0 = shape[1] * shape[2];\n    var stride1 = shape[2];\n    var texType = inputInfo.shapeInfo.textureType;\n    if (texType === tex_util_1.TextureType.DEFAULT) {\n        var _a = util.squeezeShape(shape), newShape = _a.newShape, keptDims = _a.keptDims;\n        var squeezedShape = newShape;\n        if (squeezedShape.length < shape.length) {\n            var newInputInfo = squeezeInputInfo(inputInfo, squeezedShape);\n            var params = ['row', 'col', 'depth'];\n            return \"\\n        \" + getSamplerFromInInfo(newInputInfo) + \"\\n        float \" + funcName + \"(int row, int col, int depth) {\\n          return \" + funcName + \"(\" + getSqueezedParams(params, keptDims) + \");\\n        }\\n      \";\n        }\n    }\n    if (texNumC === stride0) {\n        if (texType === tex_util_1.TextureType.DEFAULT) {\n            return \"\\n        float \" + funcName + \"(int row, int col, int depth) {\\n          int texR = row;\\n          int texC = col * \" + stride1 + \" + depth;\\n          vec2 uv = (vec2(texC, texR) + halfCR) /\\n                     vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n          return sample(\" + texName + \", uv);\\n        }\\n      \";\n        }\n        else if (texType === tex_util_1.TextureType.RGBA_COLOR) {\n            return \"\\n        float \" + funcName + \"(int row, int col, int depth) {\\n          vec2 uv = (vec2(col, row) + halfCR) /\\n                     vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n          return sampleUVAndDepth(\" + texName + \", uv, depth);\\n        }\\n      \";\n        }\n        else {\n            throw new Error(\"Unknown TextureType \" + texType + \".\");\n        }\n    }\n    if (texNumC === stride1 && texType === tex_util_1.TextureType.DEFAULT) {\n        return \"\\n    float \" + funcName + \"(int row, int col, int depth) {\\n      int texR = row * \" + shape[1] + \" + col;\\n      int texC = depth;\\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n      return sample(\" + texName + \", uv);\\n    }\\n  \";\n    }\n    if (texType === tex_util_1.TextureType.DEFAULT) {\n        return \"\\n      float \" + funcName + \"(int row, int col, int depth) {\\n        vec2 uv = UVfrom3D(\\n            \" + texNumR + \", \" + texNumC + \", \" + stride0 + \", \" + stride1 + \", row, col, depth);\\n        return sample(\" + texName + \", uv);\\n      }\\n  \";\n    }\n    else if (texType === tex_util_1.TextureType.RGBA_COLOR) {\n        return \"\\n      float \" + funcName + \"(int row, int col, int depth) {\\n        vec2 uv = UVfrom2D(\" + texNumR + \", \" + texNumC + \", \" + shape[1] + \", row, col);\\n        return sampleUVAndDepth(\" + texName + \", uv, depth);\\n      }\\n    \";\n    }\n    else {\n        throw new Error(\"Unknown TextureType \" + texType + \".\");\n    }\n}\nfunction getSampler4D(inputInfo) {\n    var shape = inputInfo.shapeInfo.logicalShape;\n    var texShape = inputInfo.shapeInfo.texShape;\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    var texNumR = texShape[0];\n    var texNumC = texShape[1];\n    var stride2 = shape[3];\n    var stride1 = shape[2] * stride2;\n    var stride0 = shape[1] * stride1;\n    var _a = util.squeezeShape(shape), newShape = _a.newShape, keptDims = _a.keptDims;\n    if (newShape.length < shape.length) {\n        var newInputInfo = squeezeInputInfo(inputInfo, newShape);\n        var params = ['row', 'col', 'depth', 'depth2'];\n        return \"\\n      \" + getSamplerFromInInfo(newInputInfo) + \"\\n      float \" + funcName + \"(int row, int col, int depth, int depth2) {\\n        return \" + funcName + \"(\" + getSqueezedParams(params, keptDims) + \");\\n      }\\n    \";\n    }\n    if (texNumC === stride0) {\n        return \"\\n      float \" + funcName + \"(int row, int col, int depth, int depth2) {\\n        int texR = row;\\n        int texC = col * \" + stride1 + \" + depth * \" + stride2 + \" + depth2;\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                   vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n        return sample(\" + texName + \", uv);\\n      }\\n    \";\n    }\n    if (texNumC === stride2) {\n        return \"\\n      float \" + funcName + \"(int row, int col, int depth, int depth2) {\\n        int texR = row * \" + shape[1] * shape[2] + \" + col * \" + shape[2] + \" + depth;\\n        int texC = depth2;\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                  vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n        return sample(\" + texName + \", uv);\\n      }\\n    \";\n    }\n    return \"\\n    float \" + funcName + \"(int row, int col, int depth, int depth2) {\\n      vec2 uv = UVfrom4D(\" + texNumR + \", \" + texNumC + \", \" + stride0 + \", \" + stride1 + \",\\n          \" + stride2 + \", row, col, depth, depth2);\\n      return sample(\" + texName + \", uv);\\n    }\\n  \";\n}\nfunction getSamplerFlat(inputInfo) {\n    var texName = inputInfo.name;\n    var texShape = inputInfo.shapeInfo.texShape;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1) + 'Flat';\n    var tNumR = texShape[0];\n    var tNumC = texShape[1];\n    if (tNumC === 1 && tNumR === 1) {\n        return \"\\n      float \" + funcName + \"(int index) {\\n        return sample(\" + texName + \", halfCR);\\n      }\\n    \";\n    }\n    if (tNumC === 1) {\n        return \"\\n      float \" + funcName + \"(int index) {\\n        vec2 uv = vec2(0.5, (float(index) + 0.5) / \" + tNumR + \".0);\\n        return sample(\" + texName + \", uv);\\n      }\\n    \";\n    }\n    if (tNumR === 1) {\n        return \"\\n      float \" + funcName + \"(int index) {\\n        vec2 uv = vec2((float(index) + 0.5) / \" + tNumC + \".0, 0.5);\\n        return sample(\" + texName + \", uv);\\n      }\\n    \";\n    }\n    return \"\\n    float \" + funcName + \"(int index) {\\n      vec2 uv = UVfrom1D(\" + tNumR + \", \" + tNumC + \", index);\\n      return sample(\" + texName + \", uv);\\n    }\\n  \";\n}\nfunction getBroadcastOutputCoordsSampler(inputInfo, outShapeInfo, texFuncSnippet, funcName) {\n    var inRank = inputInfo.shapeInfo.logicalShape.length;\n    var outRank = outShapeInfo.logicalShape.length;\n    var type = 'int';\n    if (outRank === 2) {\n        type = 'ivec2';\n    }\n    else if (outRank === 3) {\n        type = 'ivec3';\n    }\n    else if (outRank === 4) {\n        type = 'ivec4';\n    }\n    var broadcastDims = broadcast_util.getBroadcastDims(inputInfo.shapeInfo.logicalShape, outShapeInfo.logicalShape);\n    var rankDiff = outRank - inRank;\n    var coordsSnippet;\n    if (inRank === 0) {\n        coordsSnippet = '';\n    }\n    else if (outRank < 2 && broadcastDims.length >= 1) {\n        coordsSnippet = 'coords = 0;';\n    }\n    else {\n        coordsSnippet =\n            broadcastDims.map(function (d) { return \"coords[\" + (d + rankDiff) + \"] = 0;\"; }).join('\\n');\n    }\n    var unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n        unpackedCoordsSnippet = 'coords';\n    }\n    else {\n        unpackedCoordsSnippet = inputInfo.shapeInfo.logicalShape\n            .map(function (s, i) { return \"coords[\" + (i + rankDiff) + \"]\"; })\n            .join(', ');\n    }\n    return \"\\n    float \" + funcName + \"() {\\n      \" + type + \" coords = getOutputCoords();\\n      \" + coordsSnippet + \"\\n      return get\" + texFuncSnippet + \"(\" + unpackedCoordsSnippet + \");\\n    }\\n  \";\n}\nfunction getSamplerAtOutputCoords(inputInfo, outShapeInfo, supportsBroadcasting) {\n    var inTexShape = inputInfo.shapeInfo.texShape;\n    var texName = inputInfo.name;\n    var isRGBAColorTexture = inputInfo.shapeInfo.textureType === tex_util_1.TextureType.RGBA_COLOR;\n    var texFuncSnippet = texName.charAt(0).toUpperCase() + texName.slice(1);\n    var funcName = 'get' + texFuncSnippet + 'AtOutCoords';\n    var broadcastDims = broadcast_util.getBroadcastDims(inputInfo.shapeInfo.logicalShape, outShapeInfo.logicalShape);\n    var inRank = inputInfo.shapeInfo.logicalShape.length;\n    var outRank = outShapeInfo.logicalShape.length;\n    var doBroadcast = supportsBroadcasting && ((outRank > inRank) || broadcastDims.length > 0);\n    var broadcastOverOuter = broadcast_util.broadcastDimsAreOuter(broadcastDims);\n    if (doBroadcast && !broadcastOverOuter) {\n        return getBroadcastOutputCoordsSampler(inputInfo, outShapeInfo, texFuncSnippet, funcName);\n    }\n    var outTexShape = outShapeInfo.texShape;\n    if (util.arraysEqual(inTexShape, outTexShape) && !isRGBAColorTexture) {\n        return \"\\n      float \" + funcName + \"() {\\n        return sample(\" + texName + \", resultUV);\\n      }\\n    \";\n    }\n    var inTexExpandedShape = isRGBAColorTexture ?\n        [inTexShape[0], inTexShape[1] * inputInfo.shapeInfo.logicalShape[2]] :\n        inTexShape;\n    var sampleSnippet = \"return sample(\" + texName + \", uv);\";\n    var rgbaColorSnippet = '';\n    if (isRGBAColorTexture) {\n        rgbaColorSnippet = \"\\n      int col = texC / \" + inputInfo.shapeInfo.logicalShape[2] + \";\\n      int texD = texC - col * \" + inputInfo.shapeInfo.logicalShape[2] + \";\\n      texC = col;\\n    \";\n        sampleSnippet = \"return sampleUVAndDepth(\" + texName + \", uv, texD);\";\n    }\n    var inSize = util.sizeFromShape(inTexExpandedShape);\n    var broadcastSnippet = '';\n    if (doBroadcast && broadcastOverOuter) {\n        broadcastSnippet = \"\\n        int mainPart = index / \" + inSize + \";\\n        index -= mainPart * \" + inSize + \";\\n      \";\n    }\n    return \"\\n    float \" + funcName + \"() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + outTexShape[0] + \", \" + outTexShape[1] + \"));\\n      int index = resTexRC.x * \" + outTexShape[1] + \" + resTexRC.y;\\n      \" + broadcastSnippet + \"\\n      int texR = index / \" + inTexExpandedShape[1] + \";\\n      int texC = index - texR * \" + inTexExpandedShape[1] + \";\\n\\n      \" + rgbaColorSnippet + \"\\n\\n      vec2 uv = (vec2(texC, texR) + halfCR) /\\n                 vec2(\" + inTexShape[1] + \".0, \" + inTexShape[0] + \".0);\\n\\n      \" + sampleSnippet + \"\\n    }\\n  \";\n}\nfunction getCoordsDataType(rank) {\n    if (rank === 1) {\n        return 'int';\n    }\n    else if (rank === 2) {\n        return 'ivec2';\n    }\n    else if (rank === 3) {\n        return 'ivec3';\n    }\n    else if (rank === 4) {\n        return 'ivec4';\n    }\n    else {\n        throw Error(\"GPU for rank \" + rank + \" is not yet supported\");\n    }\n}\nexports.getCoordsDataType = getCoordsDataType;\nfunction squeezeInputInfo(inInfo, squeezedShape) {\n    var newInputInfo = JSON.parse(JSON.stringify(inInfo));\n    newInputInfo.shapeInfo.logicalShape = squeezedShape;\n    return newInputInfo;\n}\nfunction getSqueezedParams(params, keptDims) {\n    return keptDims.map(function (d) { return params[d]; }).join(', ');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/shader_compiler.js\n// module id = lYtQ\n// module chunks = 0","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-keys.js\n// module id = lktj\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ResizeBilinear3DProgram = (function () {\n    function ResizeBilinear3DProgram(inputShape, outputDimensionsRowCol, alignCorners) {\n        this.variableNames = ['A'];\n        this.outputShape = [];\n        var depth = inputShape[2];\n        this.outputShape =\n            [outputDimensionsRowCol[0], outputDimensionsRowCol[1], depth];\n        var effectiveInputShape = alignCorners ?\n            [inputShape[0] - 1, inputShape[1] - 1, depth] :\n            inputShape;\n        var effectiveOutputShape = alignCorners ?\n            [this.outputShape[0] - 1, this.outputShape[1] - 1, depth] :\n            this.outputShape;\n        this.userCode = \"\\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\\n          \" + effectiveInputShape[0] / effectiveOutputShape[0] + \",\\n          \" + effectiveInputShape[1] / effectiveOutputShape[1] + \");\\n      const vec2 inputShapeRC = vec2(\" + inputShape[0] + \".0, \" + inputShape[1] + \".0);\\n\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        ivec2 yRC = coords.xy;\\n        int d = coords.z;\\n\\n        // Fractional source index.\\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\\n\\n        // Compute the four integer indices.\\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\\n        ivec2 sourceCeilRC = ivec2(\\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\\n\\n        float topLeft = getA(sourceFloorRC.x, sourceFloorRC.y, d);\\n        float bottomLeft = getA(sourceCeilRC.x, sourceFloorRC.y, d);\\n        float topRight = getA(sourceFloorRC.x, sourceCeilRC.y, d);\\n        float bottomRight = getA(sourceCeilRC.x, sourceCeilRC.y, d);\\n\\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\\n\\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\\n        float newValue = top + (bottom - top) * fracRC.x;\\n\\n        setOutput(newValue);\\n      }\\n    \";\n    }\n    return ResizeBilinear3DProgram;\n}());\nexports.ResizeBilinear3DProgram = ResizeBilinear3DProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/resize_bilinear_gpu.js\n// module id = mCdk\n// module chunks = 0","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.define-property.js\n// module id = mClu\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Conv2DProgram = (function () {\n    function Conv2DProgram(convInfo, hasBias) {\n        this.variableNames = ['x', 'W'];\n        if (hasBias) {\n            this.variableNames.push('bias');\n        }\n        this.outputShape = convInfo.outShape;\n        var biasSnippet = hasBias ? 'dotProd += getBias(d2);' : '';\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var inputDepthNearestVec4 = Math.floor(convInfo.inChannels / 4) * 4;\n        var inputDepthVec4Remainder = convInfo.inChannels % 4;\n        this.userCode = \"\\n      const ivec2 strides = ivec2(\" + strideHeight + \", \" + strideWidth + \");\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d2 = coords[3];\\n\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          int xR = xRCorner + wR;\\n\\n          if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n            int xC = xCCorner + wC;\\n\\n            if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n              continue;\\n            }\\n\\n            for (int d1 = 0; d1 < \" + inputDepthNearestVec4 + \"; d1 += 4) {\\n              vec4 xValues = vec4(\\n                getX(batch, xR, xC, d1),\\n                getX(batch, xR, xC, d1 + 1),\\n                getX(batch, xR, xC, d1 + 2),\\n                getX(batch, xR, xC, d1 + 3)\\n              );\\n              vec4 wValues = vec4(\\n                getW(wR, wC, d1, d2),\\n                getW(wR, wC, d1 + 1, d2),\\n                getW(wR, wC, d1 + 2, d2),\\n                getW(wR, wC, d1 + 3, d2)\\n              );\\n\\n              dotProd += dot(xValues, wValues);\\n            }\\n\\n            if (\" + (inputDepthVec4Remainder === 1) + \") {\\n              dotProd +=\\n                getX(batch, xR, xC, \" + inputDepthNearestVec4 + \") *\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \", d2);\\n            } else if (\" + (inputDepthVec4Remainder === 2) + \") {\\n              vec2 xValues = vec2(\\n                getX(batch, xR, xC, \" + inputDepthNearestVec4 + \"),\\n                getX(batch, xR, xC, \" + inputDepthNearestVec4 + \" + 1)\\n              );\\n              vec2 wValues = vec2(\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \", d2),\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \" + 1, d2)\\n              );\\n              dotProd += dot(xValues, wValues);\\n            } else if (\" + (inputDepthVec4Remainder === 3) + \") {\\n              vec3 xValues = vec3(\\n                getX(batch, xR, xC, \" + inputDepthNearestVec4 + \"),\\n                getX(batch, xR, xC, \" + inputDepthNearestVec4 + \" + 1),\\n                getX(batch, xR, xC, \" + inputDepthNearestVec4 + \" + 2)\\n              );\\n              vec3 wValues = vec3(\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \", d2),\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \" + 1, d2),\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \" + 2, d2)\\n              );\\n              dotProd += dot(xValues, wValues);\\n            }\\n          }\\n        }\\n        \" + biasSnippet + \"\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return Conv2DProgram;\n}());\nexports.Conv2DProgram = Conv2DProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/conv_gpu.js\n// module id = mDrY\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../../environment\");\nvar ndarray_1 = require(\"../../math/ndarray\");\nvar util = require(\"../../util\");\nvar graph_util = require(\"../graph_util\");\nvar op_1 = require(\"./op\");\nvar ReduceSum = (function (_super) {\n    __extends(ReduceSum, _super);\n    function ReduceSum(x, outTensor) {\n        var _this = _super.call(this) || this;\n        _this.x = x;\n        _this.outTensor = outTensor;\n        util.assertShapesMatch(outTensor.shape, []);\n        _this.ones = environment_1.ENV.math.keep(ndarray_1.NDArray.ones(x.shape));\n        return _this;\n    }\n    ReduceSum.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x = inferenceArrays.get(this.x);\n        math.scope(function (keep) {\n            inferenceArrays.set(_this.outTensor, keep(math.sum(x)));\n        });\n    };\n    ReduceSum.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        if (!graph_util.shouldBackProp(this.x)) {\n            return;\n        }\n        math.scope(function () {\n            var dy = gradientArrays.get(_this.outTensor);\n            gradientArrays.add(_this.x, math.scalarTimesArray(dy, _this.ones));\n        });\n    };\n    ReduceSum.prototype.dispose = function () {\n        this.ones.dispose();\n    };\n    return ReduceSum;\n}(op_1.Operation));\nexports.ReduceSum = ReduceSum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/ops/reduce_sum.js\n// module id = mJJz\n// module chunks = 0","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-call.js\n// module id = msXi\n// module chunks = 0","/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-options.js\n// module id = nErl\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar session_1 = require(\"./graph/session\");\nvar ndarray_1 = require(\"./math/ndarray\");\nvar DEFAULT_EVAL_INTERVAL_MS = 1500;\nvar DEFAULT_COST_INTERVAL_MS = 500;\nvar DEFAULT_INFERENCE_EXAMPLE_INTERVAL_MS = 3000;\nvar MetricReduction;\n(function (MetricReduction) {\n    MetricReduction[MetricReduction[\"SUM\"] = 0] = \"SUM\";\n    MetricReduction[MetricReduction[\"MEAN\"] = 1] = \"MEAN\";\n})(MetricReduction = exports.MetricReduction || (exports.MetricReduction = {}));\nvar GraphRunner = (function () {\n    function GraphRunner(math, session, eventObserver) {\n        this.math = math;\n        this.session = session;\n        this.eventObserver = eventObserver;\n        this.lastCostTimestamp = 0;\n        this.lastEvalTimestamp = 0;\n        this.resetStatistics();\n        this.zeroScalar = ndarray_1.Scalar.new(0);\n    }\n    GraphRunner.prototype.resetStatistics = function () {\n        this.totalBatchesTrained = 0;\n    };\n    GraphRunner.prototype.train = function (costTensor, trainFeedEntries, batchSize, optimizer, numBatches, metricTensor, metricFeedEntries, metricBatchSize, metricReduction, evalIntervalMs, costIntervalMs) {\n        if (metricReduction === void 0) { metricReduction = MetricReduction.MEAN; }\n        if (evalIntervalMs === void 0) { evalIntervalMs = DEFAULT_EVAL_INTERVAL_MS; }\n        if (costIntervalMs === void 0) { costIntervalMs = DEFAULT_COST_INTERVAL_MS; }\n        this.costTensor = costTensor;\n        this.trainFeedEntries = trainFeedEntries;\n        this.metricTensor = metricTensor;\n        this.metricFeedEntries = metricFeedEntries;\n        if (metricBatchSize != null && this.metricBatchSize !== metricBatchSize) {\n            if (this.metricBatchSizeScalar != null) {\n                this.metricBatchSizeScalar.dispose();\n            }\n            this.metricBatchSizeScalar = ndarray_1.Scalar.new(metricBatchSize);\n        }\n        this.metricBatchSize = metricBatchSize;\n        this.metricReduction = metricReduction;\n        this.batchSize = batchSize;\n        this.optimizer = optimizer;\n        this.metricIntervalMs = evalIntervalMs;\n        this.costIntervalMs = costIntervalMs;\n        this.currentTrainLoopNumBatches = numBatches;\n        this.batchesTrainedThisRun = 0;\n        this.isTraining = true;\n        this.trainStartTimestamp = performance.now();\n        this.trainNetwork();\n    };\n    GraphRunner.prototype.stopTraining = function () {\n        this.isTraining = false;\n    };\n    GraphRunner.prototype.resumeTraining = function () {\n        this.isTraining = true;\n        this.trainNetwork();\n    };\n    GraphRunner.prototype.trainNetwork = function () {\n        var _this = this;\n        if (this.batchesTrainedThisRun === this.currentTrainLoopNumBatches) {\n            this.stopTraining();\n        }\n        if (!this.isTraining) {\n            if (this.eventObserver.doneTrainingCallback != null) {\n                this.eventObserver.doneTrainingCallback();\n            }\n            return;\n        }\n        var start = performance.now();\n        var shouldComputeCost = this.eventObserver.avgCostCallback != null &&\n            (start - this.lastCostTimestamp > this.costIntervalMs);\n        if (shouldComputeCost) {\n            this.lastCostTimestamp = start;\n        }\n        var costReduction = shouldComputeCost ? session_1.CostReduction.MEAN : session_1.CostReduction.NONE;\n        this.math.scope(function (keep) {\n            var avgCost = _this.session.train(_this.costTensor, _this.trainFeedEntries, _this.batchSize, _this.optimizer, costReduction);\n            if (shouldComputeCost) {\n                var trainTime = performance.now() - start;\n                _this.eventObserver.avgCostCallback(avgCost);\n                if (_this.eventObserver.trainExamplesPerSecCallback != null) {\n                    var examplesPerSec = (_this.batchSize * 1000 / trainTime);\n                    _this.eventObserver.trainExamplesPerSecCallback(examplesPerSec);\n                }\n            }\n            if (_this.eventObserver.metricCallback != null &&\n                _this.metricFeedEntries != null &&\n                start - _this.lastEvalTimestamp > _this.metricIntervalMs) {\n                _this.lastEvalTimestamp = start;\n                if (_this.lastComputedMetric != null) {\n                    _this.lastComputedMetric.dispose();\n                }\n                _this.lastComputedMetric = _this.computeMetric();\n                _this.eventObserver.metricCallback(_this.lastComputedMetric);\n            }\n            if (_this.eventObserver.totalTimeCallback != null) {\n                _this.eventObserver.totalTimeCallback((start - _this.trainStartTimestamp) / 1000);\n            }\n            _this.batchesTrainedThisRun++;\n            _this.totalBatchesTrained++;\n            if (_this.eventObserver.batchesTrainedCallback != null) {\n                _this.eventObserver.batchesTrainedCallback(_this.totalBatchesTrained);\n            }\n        });\n        requestAnimationFrame(function () { return _this.trainNetwork(); });\n    };\n    GraphRunner.prototype.infer = function (inferenceTensor, inferenceFeedEntries, inferenceExampleIntervalMs, inferenceExampleCount, numPasses) {\n        var _this = this;\n        if (inferenceExampleIntervalMs === void 0) { inferenceExampleIntervalMs = DEFAULT_INFERENCE_EXAMPLE_INTERVAL_MS; }\n        if (inferenceExampleCount === void 0) { inferenceExampleCount = 5; }\n        if (this.eventObserver.inferenceExamplesCallback == null &&\n            this.eventObserver.inferenceExamplesPerSecCallback == null) {\n            throw new Error('Cannot start inference loop, no inference example or ' +\n                'examples/sec observer provided.');\n        }\n        for (var i = 0; i < inferenceFeedEntries.length; i++) {\n            var feedEntry = inferenceFeedEntries[i];\n            if (feedEntry.data instanceof ndarray_1.NDArray) {\n                throw new Error('Cannot start inference on the model runner with feed entries of ' +\n                    'type NDArray. Please use InputProviders.');\n            }\n        }\n        this.inferenceExampleIntervalMs = inferenceExampleIntervalMs;\n        this.inferenceTensor = inferenceTensor;\n        this.inferenceFeedEntries = inferenceFeedEntries;\n        this.inferenceExampleCount = inferenceExampleCount;\n        this.currentInferenceLoopNumPasses = numPasses;\n        if (!this.isInferring) {\n            this.inferencePassesThisRun = 0;\n            requestAnimationFrame(function () { return _this.inferNetwork(); });\n        }\n        this.isInferring = true;\n    };\n    GraphRunner.prototype.inferNetwork = function () {\n        var _this = this;\n        if (!this.isInferring ||\n            this.inferencePassesThisRun === this.currentInferenceLoopNumPasses) {\n            return;\n        }\n        this.math.scope(function (keep) {\n            var feeds = [];\n            var inferenceValues = [];\n            var start = performance.now();\n            for (var i = 0; i < _this.inferenceExampleCount; i++) {\n                var ndarrayFeedEntries = [];\n                for (var j = 0; j < _this.inferenceFeedEntries.length; j++) {\n                    var feedEntry = _this.inferenceFeedEntries[j];\n                    var nextCopy = feedEntry.data.getNextCopy(_this.math);\n                    ndarrayFeedEntries.push({ tensor: feedEntry.tensor, data: nextCopy });\n                }\n                feeds.push(ndarrayFeedEntries);\n                inferenceValues.push(_this.session.eval(_this.inferenceTensor, ndarrayFeedEntries));\n            }\n            if (_this.eventObserver.inferenceExamplesPerSecCallback != null) {\n                inferenceValues[inferenceValues.length - 1].getValues();\n                var inferenceExamplesPerSecTime = performance.now() - start;\n                var examplesPerSec = (_this.inferenceExampleCount * 1000 / inferenceExamplesPerSecTime);\n                _this.eventObserver.inferenceExamplesPerSecCallback(examplesPerSec);\n            }\n            if (_this.eventObserver.inferenceExamplesCallback != null) {\n                _this.eventObserver.inferenceExamplesCallback(feeds, inferenceValues);\n            }\n            _this.inferencePassesThisRun++;\n        });\n        this.lastInferTimeoutID = window.setTimeout(function () { return _this.inferNetwork(); }, this.inferenceExampleIntervalMs);\n    };\n    GraphRunner.prototype.stopInferring = function () {\n        this.isInferring = false;\n        window.clearTimeout(this.lastInferTimeoutID);\n    };\n    GraphRunner.prototype.isInferenceRunning = function () {\n        return this.isInferring;\n    };\n    GraphRunner.prototype.computeMetric = function () {\n        var _this = this;\n        if (this.metricFeedEntries == null) {\n            throw new Error('Cannot compute metric, no metric FeedEntries provided.');\n        }\n        var metric = this.zeroScalar;\n        return this.math.scope(function (keep) {\n            for (var i = 0; i < _this.metricBatchSize; i++) {\n                var metricValue = _this.session.eval(_this.metricTensor, _this.metricFeedEntries);\n                metric = _this.math.add(metric, metricValue);\n            }\n            if (_this.metricReduction === MetricReduction.MEAN) {\n                metric = _this.math.divide(metric, _this.metricBatchSizeScalar);\n            }\n            return metric;\n        });\n    };\n    GraphRunner.prototype.getTotalBatchesTrained = function () {\n        return this.totalBatchesTrained;\n    };\n    GraphRunner.prototype.getLastComputedMetric = function () {\n        return this.lastComputedMetric;\n    };\n    GraphRunner.prototype.setMath = function (math) {\n        this.math = math;\n    };\n    GraphRunner.prototype.setSession = function (session) {\n        this.session = session;\n    };\n    GraphRunner.prototype.setInferenceTensor = function (inferenceTensor) {\n        this.inferenceTensor = inferenceTensor;\n    };\n    GraphRunner.prototype.setInferenceExampleCount = function (inferenceExampleCount) {\n        this.inferenceExampleCount = inferenceExampleCount;\n    };\n    return GraphRunner;\n}());\nexports.GraphRunner = GraphRunner;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph_runner.js\n// module id = nbdk\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = require(\"../math/ndarray\");\nvar util = require(\"../util\");\nvar operation_emitter = require(\"./operation_emitter\");\nvar session_util = require(\"./session_util\");\nvar tensor_array_map_1 = require(\"./tensor_array_map\");\nvar FeedDictionary = (function () {\n    function FeedDictionary(feedEntries) {\n        var _this = this;\n        this.dict = {};\n        if (feedEntries) {\n            feedEntries.forEach(function (entry) { return _this.dict[entry.tensor.id] = entry; });\n        }\n    }\n    return FeedDictionary;\n}());\nexports.FeedDictionary = FeedDictionary;\nvar CostReduction;\n(function (CostReduction) {\n    CostReduction[CostReduction[\"NONE\"] = 0] = \"NONE\";\n    CostReduction[CostReduction[\"SUM\"] = 1] = \"SUM\";\n    CostReduction[CostReduction[\"MEAN\"] = 2] = \"MEAN\";\n})(CostReduction = exports.CostReduction || (exports.CostReduction = {}));\nvar Session = (function () {\n    function Session(graph, math) {\n        this.math = math;\n        this.activationArrayMap = new tensor_array_map_1.TensorArrayMap();\n        this.runtimeCache = {};\n        this.oneScalar = ndarray_1.Scalar.new(1);\n        this.gradientArrayMap = new tensor_array_map_1.SummedTensorArrayMap(this.math);\n    }\n    Session.prototype.dispose = function () {\n        var _this = this;\n        this.activationArrayMap.dispose();\n        Object.keys(this.runtimeCache).forEach(function (key) {\n            var runtime = _this.runtimeCache[key];\n            if (runtime.operations) {\n                runtime.operations.forEach(function (op) { return op.dispose(); });\n            }\n        });\n        this.runtimeCache = {};\n        if (this.batchSizeScalar != null) {\n            this.batchSizeScalar.dispose();\n        }\n        this.oneScalar.dispose();\n    };\n    Session.prototype.evalAll = function (tensors, feedEntries) {\n        var _this = this;\n        return this.math.scope(function () {\n            var feed = new FeedDictionary(feedEntries);\n            var runtime = _this.getOrCreateRuntime(tensors, feed);\n            var activations = _this.activationArrayMap;\n            session_util.disposeAndInitializeOperationOutputs(runtime.nodes, activations);\n            session_util.disposeTransientOperationArrays(runtime.operations, _this.activationArrayMap, _this.gradientArrayMap);\n            session_util.addPersistentArraysToTensorArrayMap(runtime.nodes, activations);\n            session_util.loadInputsFromFeedDictionaryToTensorArrayMap(feed, activations, _this.math);\n            runtime.operations.forEach(function (op) { return op.feedForward(_this.math, activations); });\n            var results = tensors.map(function (x) { return activations.get(x); });\n            tensors.forEach(function (x) { return activations.delete(x); });\n            session_util.releaseFeedDictionaryInputsFromTensorArrayMap(feed, activations, _this.math);\n            return results;\n        });\n    };\n    Session.prototype.eval = function (tensor, feedEntries) {\n        return this.evalAll([tensor], feedEntries)[0];\n    };\n    Session.prototype.train = function (costTensor, feedEntries, batchSize, optimizer, costReduction) {\n        var _this = this;\n        if (costReduction === void 0) { costReduction = CostReduction.NONE; }\n        util.assert(util.isScalarShape(costTensor.shape), 'Cost tensor for training must be a scalar value.');\n        if (this.prevBatchSize !== batchSize) {\n            this.prevBatchSize = batchSize;\n            if (this.batchSizeScalar != null) {\n                this.batchSizeScalar.dispose();\n            }\n            this.batchSizeScalar = this.math.keep(ndarray_1.Scalar.new(batchSize));\n        }\n        var feed = new FeedDictionary(feedEntries);\n        session_util.throwIfFeedDictionaryContainsNDArrays(feed);\n        var runtime = this.getOrCreateRuntime([costTensor], feed);\n        var inferenceOperations = runtime.operations;\n        var backPropOperations = runtime.operations.slice().reverse();\n        var activations = this.activationArrayMap;\n        var gradients = this.gradientArrayMap;\n        gradients.nullify(costTensor);\n        gradients.add(costTensor, this.oneScalar);\n        session_util.addPersistentArraysToTensorArrayMap(runtime.nodes, activations);\n        optimizer.beforeBatch(this.math, batchSize, runtime, activations, gradients);\n        return this.math.scope(function () {\n            var cost = ndarray_1.Scalar.new(0);\n            for (var i = 0; i < batchSize; ++i) {\n                session_util.disposeAndInitializeOperationOutputs(runtime.nodes, activations);\n                session_util.disposeAndInitializeOperationInputGradients(runtime.nodes, gradients);\n                session_util.disposeTransientOperationArrays(runtime.operations, activations, gradients);\n                session_util.loadInputsFromFeedDictionaryToTensorArrayMap(feed, activations, _this.math);\n                inferenceOperations.forEach(function (op) { return op.feedForward(_this.math, activations); });\n                backPropOperations.forEach(function (op) { return op.backProp(_this.math, activations, gradients); });\n                optimizer.afterExample(_this.math, runtime, activations, gradients);\n                session_util.releaseFeedDictionaryInputsFromTensorArrayMap(feed, activations, _this.math);\n                cost = _this.updateCostForExample(cost, activations.get(costTensor), costReduction);\n            }\n            optimizer.afterBatch(_this.math, batchSize, runtime, activations, gradients);\n            return _this.updateCostForBatch(cost, costReduction);\n        });\n    };\n    Session.prototype.updateCostForExample = function (totalCost, currCost, costReduction) {\n        if (costReduction === CostReduction.MEAN ||\n            costReduction === CostReduction.SUM) {\n            return this.math.add(totalCost, currCost);\n        }\n        return totalCost;\n    };\n    Session.prototype.updateCostForBatch = function (totalCost, costReduction) {\n        if (costReduction === CostReduction.MEAN) {\n            return this.math.divide(totalCost, this.batchSizeScalar);\n        }\n        return totalCost;\n    };\n    Session.prototype.getOrCreateRuntime = function (tensors, feed) {\n        var key = this.makeRuntimeCacheKey(tensors, feed);\n        var runtime = this.runtimeCache[key];\n        if (runtime === undefined) {\n            var nodes = session_util.getOrderedEvaluationSetFromEvalTensor(tensors, feed);\n            session_util.removeFeedDictionaryNodesFromEvaluationSet(feed, nodes);\n            session_util.throwErrorIfEvaluationSetContainsPlaceholderNodes(nodes);\n            var operations = operation_emitter.emitFromGraphNodes(nodes);\n            runtime = { nodes: nodes, operations: operations };\n            this.runtimeCache[key] = runtime;\n        }\n        return runtime;\n    };\n    Session.prototype.makeRuntimeCacheKey = function (tensors, feed) {\n        return tensors.map(function (x) { return x.id; }).sort().join('_') + '__' +\n            Object.keys(feed.dict).sort().join('_');\n    };\n    return Session;\n}());\nexports.Session = Session;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/session.js\n// module id = oERz\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ClipProgram = (function () {\n    function ClipProgram(aShape, min, max) {\n        this.variableNames = ['A'];\n        this.outputShape = aShape;\n        var minFixed = min.toFixed(20);\n        var maxFixed = max.toFixed(20);\n        this.userCode = \"\\n      void main() {\\n        float value = getAAtOutCoords();\\n        if (isNaN(value)) {\\n          setOutput(value);\\n          return;\\n        }\\n\\n        setOutput(clamp(value, \" + minFixed + \", \" + maxFixed + \"));\\n      }\\n    \";\n    }\n    return ClipProgram;\n}());\nexports.ClipProgram = ClipProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/clip_gpu.js\n// module id = oGZu\n// module chunks = 0","/*\nCopyright 2014 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\nvar global = this,\n    width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\nmath['seed' + rngname] = seedrandom;\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n}\n\n// End anonymous scope, and pass initial values.\n})(\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/seedrandom/seedrandom.js\n// module id = p//t\n// module chunks = 0","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_new-promise-capability.js\n// module id = qARP\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar activation_functions_1 = require(\"../../math/activation_functions\");\nvar op_1 = require(\"./op\");\nvar ElementWiseActivation = (function (_super) {\n    __extends(ElementWiseActivation, _super);\n    function ElementWiseActivation(xTensor, yTensor, func) {\n        var _this = _super.call(this) || this;\n        _this.xTensor = xTensor;\n        _this.yTensor = yTensor;\n        _this.func = func;\n        return _this;\n    }\n    ElementWiseActivation.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x = inferenceArrays.get(this.xTensor);\n        math.scope(function (keep) {\n            inferenceArrays.set(_this.yTensor, keep(_this.func.output(math, x)));\n        });\n    };\n    ElementWiseActivation.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var x = inferenceArrays.get(this.xTensor);\n        var y = inferenceArrays.get(this.yTensor);\n        var dy = gradientArrays.get(this.yTensor);\n        math.scope(function () {\n            var dydx = _this.func.der(math, x, y);\n            gradientArrays.add(_this.xTensor, math.elementWiseMul(dy, dydx));\n            dydx.dispose();\n        });\n    };\n    ElementWiseActivation.prototype.dispose = function () {\n        this.func.dispose();\n    };\n    return ElementWiseActivation;\n}(op_1.Operation));\nexports.ElementWiseActivation = ElementWiseActivation;\nvar ReLU = (function (_super) {\n    __extends(ReLU, _super);\n    function ReLU(xTensor, yTensor) {\n        return _super.call(this, xTensor, yTensor, new activation_functions_1.ReLUFunc()) || this;\n    }\n    return ReLU;\n}(ElementWiseActivation));\nexports.ReLU = ReLU;\nvar LeakyReLU = (function (_super) {\n    __extends(LeakyReLU, _super);\n    function LeakyReLU(xTensor, yTensor, alpha) {\n        return _super.call(this, xTensor, yTensor, new activation_functions_1.LeakyReluFunc(alpha)) || this;\n    }\n    return LeakyReLU;\n}(ElementWiseActivation));\nexports.LeakyReLU = LeakyReLU;\nvar TanH = (function (_super) {\n    __extends(TanH, _super);\n    function TanH(xTensor, yTensor) {\n        return _super.call(this, xTensor, yTensor, new activation_functions_1.TanHFunc()) || this;\n    }\n    return TanH;\n}(ElementWiseActivation));\nexports.TanH = TanH;\nvar Sigmoid = (function (_super) {\n    __extends(Sigmoid, _super);\n    function Sigmoid(xTensor, yTensor) {\n        return _super.call(this, xTensor, yTensor, new activation_functions_1.SigmoidFunc()) || this;\n    }\n    return Sigmoid;\n}(ElementWiseActivation));\nexports.Sigmoid = Sigmoid;\nvar Square = (function (_super) {\n    __extends(Square, _super);\n    function Square(xTensor, yTensor) {\n        return _super.call(this, xTensor, yTensor, new activation_functions_1.SquareFunc()) || this;\n    }\n    return Square;\n}(ElementWiseActivation));\nexports.Square = Square;\nvar Elu = (function (_super) {\n    __extends(Elu, _super);\n    function Elu(xTensor, yTensor) {\n        return _super.call(this, xTensor, yTensor, new activation_functions_1.EluFunc()) || this;\n    }\n    return Elu;\n}(ElementWiseActivation));\nexports.Elu = Elu;\nvar PReLU = (function (_super) {\n    __extends(PReLU, _super);\n    function PReLU(xTensor, alphaTensor, yTensor) {\n        var _this = _super.call(this) || this;\n        _this.xTensor = xTensor;\n        _this.alphaTensor = alphaTensor;\n        _this.yTensor = yTensor;\n        return _this;\n    }\n    PReLU.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x = inferenceArrays.get(this.xTensor);\n        var alpha = inferenceArrays.get(this.alphaTensor);\n        math.scope(function (keep) {\n            inferenceArrays.set(_this.yTensor, keep(math.prelu(x, alpha)));\n        });\n    };\n    PReLU.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var x = inferenceArrays.get(this.xTensor);\n        var alpha = inferenceArrays.get(this.alphaTensor);\n        var dy = gradientArrays.get(this.yTensor);\n        math.scope(function () {\n            var dydx = math.preluDer(x, alpha);\n            gradientArrays.add(_this.xTensor, math.elementWiseMul(dy, dydx));\n        });\n    };\n    return PReLU;\n}(op_1.Operation));\nexports.PReLU = PReLU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/ops/element_wise_activation.js\n// module id = qfl5\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../../environment\");\nvar ndarray_1 = require(\"../../math/ndarray\");\nvar session_util = require(\"../session_util\");\nvar tensor_array_map_1 = require(\"../tensor_array_map\");\nvar Optimizer = (function () {\n    function Optimizer(learningRate, specifiedVariableList) {\n        this.learningRate = learningRate;\n        this.variableGradients = new tensor_array_map_1.TensorArrayMap();\n        if (specifiedVariableList != null) {\n            this.specifiedVariableNodes = specifiedVariableList;\n        }\n        this.one = environment_1.ENV.math.keep(ndarray_1.Scalar.new(1));\n    }\n    Optimizer.prototype.beforeBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        this.variableNodes = this.specifiedVariableNodes == null ?\n            session_util.getVariableNodesFromEvaluationSet(runtime.nodes) :\n            this.specifiedVariableNodes;\n        if (batchSize !== this.prevBatchSize) {\n            if (this.c != null) {\n                this.c.dispose();\n            }\n            this.prevBatchSize = batchSize;\n            this.c = math.keep(ndarray_1.Scalar.new(-this.learningRate / batchSize));\n        }\n        this.variableNodes.forEach(function (node) { return _this.variableGradients.set(node.output, math.keep(ndarray_1.NDArray.zeros(node.output.shape))); });\n    };\n    Optimizer.prototype.afterExample = function (math, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        math.scope(function (keep) {\n            _this.variableNodes.forEach(function (node) {\n                var gradient = gradientArrayMap.get(node.output);\n                var accumulatedGradient = _this.variableGradients.get(node.output);\n                _this.variableGradients.set(node.output, keep(math.add(gradient, accumulatedGradient)));\n                accumulatedGradient.dispose();\n            });\n        });\n    };\n    Optimizer.prototype.dispose = function () {\n        if (this.c != null) {\n            this.c.dispose();\n        }\n        this.one.dispose();\n        this.variableNodes.forEach(function (node) {\n            node.data.dispose();\n        });\n        this.specifiedVariableNodes.forEach(function (node) {\n            node.data.dispose();\n        });\n    };\n    return Optimizer;\n}());\nexports.Optimizer = Optimizer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/optimizers/optimizer.js\n// module id = qhzv\n// module chunks = 0","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-dps.js\n// module id = qio6\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TextureManager = (function () {\n    function TextureManager(gpgpu) {\n        this.gpgpu = gpgpu;\n        this.numUsedTextures = 0;\n        this.numFreeTextures = 0;\n        this.freeTextures = {};\n        this.logEnabled = false;\n        this.allocatedTextures = [];\n        this.usedTextureCount = {};\n    }\n    TextureManager.prototype.acquireTexture = function (shapeRC) {\n        var shapeKey = getKeyFromTextureShape(shapeRC);\n        if (!(shapeKey in this.freeTextures)) {\n            this.freeTextures[shapeKey] = [];\n        }\n        if (!(shapeKey in this.usedTextureCount)) {\n            this.usedTextureCount[shapeKey] = 0;\n        }\n        this.usedTextureCount[shapeKey]++;\n        if (this.freeTextures[shapeKey].length > 0) {\n            this.numFreeTextures--;\n            this.numUsedTextures++;\n            this.log();\n            return this.freeTextures[shapeKey].shift();\n        }\n        this.numUsedTextures++;\n        this.log();\n        var newTexture = this.gpgpu.createMatrixTexture(shapeRC[0], shapeRC[1]);\n        this.allocatedTextures.push(newTexture);\n        return newTexture;\n    };\n    TextureManager.prototype.releaseTexture = function (texture, shape) {\n        var shapeKey = getKeyFromTextureShape(shape);\n        if (!(shapeKey in this.freeTextures)) {\n            this.freeTextures[shapeKey] = [];\n        }\n        this.freeTextures[shapeKey].push(texture);\n        this.numFreeTextures++;\n        this.numUsedTextures--;\n        this.usedTextureCount[shapeKey]--;\n        this.log();\n    };\n    TextureManager.prototype.log = function () {\n        if (!this.logEnabled) {\n            return;\n        }\n        var total = this.numFreeTextures + this.numUsedTextures;\n        console.log('Free/Used', this.numFreeTextures + \" / \" + this.numUsedTextures, \"(\" + total + \")\");\n    };\n    TextureManager.prototype.getNumUsedTextures = function () {\n        return this.numUsedTextures;\n    };\n    TextureManager.prototype.getNumFreeTextures = function () {\n        return this.numFreeTextures;\n    };\n    TextureManager.prototype.dispose = function () {\n        var _this = this;\n        this.allocatedTextures.forEach(function (texture) {\n            _this.gpgpu.deleteMatrixTexture(texture);\n        });\n        this.freeTextures = null;\n        this.allocatedTextures = null;\n        this.usedTextureCount = null;\n        this.numUsedTextures = 0;\n        this.numFreeTextures = 0;\n    };\n    return TextureManager;\n}());\nexports.TextureManager = TextureManager;\nfunction getKeyFromTextureShape(shapeRowsCol) {\n    return shapeRowsCol[0] + \"_\" + shapeRowsCol[1];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/texture_manager.js\n// module id = rmfs\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar version = '0.3.16';\nexports.version = version;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/version.js\n// module id = rxXm\n// module chunks = 0","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-object.js\n// module id = sB3e\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../../../environment\");\nvar util = require(\"../../../util\");\nvar shader_compiler = require(\"./shader_compiler\");\nvar ATTRIBUTE_NAMES = ['uv', 'clipSpacePos'];\nvar NAN_UNIFORM_NAME = 'NaN';\nfunction shouldUploadNaNUniform() {\n    return !environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED');\n}\nfunction compileProgram(gpgpu, program, inputs, output) {\n    var userCode = program.userCode;\n    var inputInfos = inputs.map(function (input, i) {\n        var shapeInfo = {\n            logicalShape: input.array.shape,\n            texShape: input.texData.texShape,\n            textureType: input.texData.textureType\n        };\n        return { name: program.variableNames[i], shapeInfo: shapeInfo };\n    });\n    var inShapeInfos = inputInfos.map(function (x) { return x.shapeInfo; });\n    var outShapeInfo = {\n        logicalShape: output.array.shape,\n        texShape: output.texData.texShape,\n        textureType: output.texData.textureType\n    };\n    var source = shader_compiler.makeShader(inputInfos, outShapeInfo, userCode, program.supportsBroadcasting === true);\n    var webGLProgram = gpgpu.createProgram(source);\n    var uniformLocations = {};\n    for (var i = 0; i < program.variableNames.length; i++) {\n        var uniformName = program.variableNames[i];\n        uniformLocations[uniformName] =\n            gpgpu.getUniformLocation(webGLProgram, uniformName);\n    }\n    var attributeLocations = {};\n    ATTRIBUTE_NAMES.forEach(function (attribute) {\n        attributeLocations[attribute] =\n            gpgpu.getAttributeLocation(webGLProgram, attribute);\n    });\n    if (shouldUploadNaNUniform()) {\n        uniformLocations[NAN_UNIFORM_NAME] =\n            gpgpu.getUniformLocation(webGLProgram, NAN_UNIFORM_NAME);\n    }\n    return {\n        program: program,\n        source: source,\n        webGLProgram: webGLProgram,\n        uniformLocations: uniformLocations,\n        attributeLocations: attributeLocations,\n        gpgpu: gpgpu,\n        inShapeInfos: inShapeInfos,\n        outShapeInfo: outShapeInfo\n    };\n}\nexports.compileProgram = compileProgram;\nfunction validateBinaryAndProgram(shapeInfos, inputs) {\n    if (shapeInfos.length !== inputs.length) {\n        throw Error(\"Binary was compiled with \" + shapeInfos.length + \" inputs, but \" +\n            (\"was executed with \" + inputs.length + \" inputs\"));\n    }\n    shapeInfos.forEach(function (s, i) {\n        var shapeA = s.logicalShape;\n        var texShapeA = s.texShape;\n        var shapeB = inputs[i].array.shape;\n        var texShapeB = inputs[i].texData.texShape;\n        if (!util.arraysEqual(shapeA, shapeB)) {\n            throw Error(\"Binary was compiled with different shapes than \" +\n                (\"the current args. Shapes \" + shapeA + \" and \" + shapeB + \" must match\"));\n        }\n        if (!util.arraysEqual(texShapeA, texShapeB)) {\n            throw Error(\"Binary was compiled with different texture shapes than the\" +\n                (\" current args. Shape \" + texShapeA + \" and \" + texShapeB + \" must match\"));\n        }\n    });\n}\nfunction runProgram(binary, inputs, output, customSetup) {\n    validateBinaryAndProgram(binary.inShapeInfos, inputs);\n    validateBinaryAndProgram([binary.outShapeInfo], [output]);\n    var outTex = output.texData.texture;\n    var outTexShape = output.texData.texShape;\n    var gpgpu = binary.gpgpu;\n    gpgpu.setOutputMatrixTexture(outTex, outTexShape[0], outTexShape[1]);\n    gpgpu.setProgram(binary.webGLProgram);\n    inputs.forEach(function (input, i) {\n        var tex = input.texData.texture;\n        var variableName = binary.program.variableNames[i];\n        var variableUniformLocation = binary.uniformLocations[variableName];\n        gpgpu.setInputMatrixTexture(tex, variableUniformLocation, i);\n    });\n    if (shouldUploadNaNUniform()) {\n        gpgpu.gl.uniform1f(binary.uniformLocations[NAN_UNIFORM_NAME], NaN);\n    }\n    if (customSetup != null) {\n        customSetup(gpgpu, binary.webGLProgram);\n    }\n    gpgpu.executeProgram(binary.attributeLocations);\n}\nexports.runProgram = runProgram;\nfunction makeShaderKey(program, inputs, output) {\n    var keyInputs = '';\n    inputs.concat(output).forEach(function (x) {\n        keyInputs += x.array.shape + \"_\" + x.texData.texShape;\n    });\n    var keyUserCode = program.userCode;\n    var keyBroadcast = (program.supportsBroadcasting === true).toString();\n    var key = program.constructor.name;\n    key += '_' + keyBroadcast + '_' + keyInputs + '_' + keyUserCode;\n    return key;\n}\nexports.makeShaderKey = makeShaderKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/gpgpu_math.js\n// module id = t6kj\n// module chunks = 0","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_species-constructor.js\n// module id = t8x9\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"./environment\");\nvar backend_cpu_1 = require(\"./math/backends/backend_cpu\");\nvar backend_webgl_1 = require(\"./math/backends/backend_webgl\");\nvar math_1 = require(\"./math/math\");\nvar ndarray_1 = require(\"./math/ndarray\");\nvar util = require(\"./util\");\nexports.TEST_EPSILON = 1e-2;\nfunction mean(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum / values.length;\n}\nexports.mean = mean;\nfunction standardDeviation(values, mean) {\n    var squareDiffSum = 0;\n    for (var i = 0; i < values.length; i++) {\n        var diff = values[i] - mean;\n        squareDiffSum += diff * diff;\n    }\n    return Math.sqrt(squareDiffSum / values.length);\n}\nexports.standardDeviation = standardDeviation;\nfunction kurtosis(values) {\n    var valuesMean = mean(values);\n    var n = values.length;\n    var sum2 = 0;\n    var sum4 = 0;\n    for (var i = 0; i < n; i++) {\n        var v = values[i] - valuesMean;\n        sum2 += Math.pow(v, 2);\n        sum4 += Math.pow(v, 4);\n    }\n    return (1 / n) * sum4 / Math.pow((1 / n) * sum2, 2);\n}\nexports.kurtosis = kurtosis;\nfunction skewness(values) {\n    var valuesMean = mean(values);\n    var n = values.length;\n    var sum2 = 0;\n    var sum3 = 0;\n    for (var i = 0; i < n; i++) {\n        var v = values[i] - valuesMean;\n        sum2 += Math.pow(v, 2);\n        sum3 += Math.pow(v, 3);\n    }\n    return (1 / n) * sum3 / Math.pow((1 / (n - 1)) * sum2, 3 / 2);\n}\nexports.skewness = skewness;\nfunction jarqueBeraNormalityTest(values) {\n    var n = values.length;\n    var s = skewness(values);\n    var k = kurtosis(values);\n    var jb = n / 6 * (Math.pow(s, 2) + 0.25 * Math.pow(k - 3, 2));\n    var CHI_SQUARE_2DEG = 5.991;\n    if (jb > CHI_SQUARE_2DEG) {\n        throw new Error(\"Invalid p-value for JB: \" + jb);\n    }\n}\nexports.jarqueBeraNormalityTest = jarqueBeraNormalityTest;\nfunction expectArrayInMeanStdRange(actual, expectedMean, expectedStdDev, epsilon) {\n    if (epsilon === void 0) { epsilon = exports.TEST_EPSILON; }\n    var actualMean = mean(actual);\n    expectNumbersClose(actualMean, expectedMean, epsilon);\n    expectNumbersClose(standardDeviation(actual, actualMean), expectedStdDev, epsilon);\n}\nexports.expectArrayInMeanStdRange = expectArrayInMeanStdRange;\nfunction expectArraysClose(actual, expected, epsilon) {\n    if (epsilon === void 0) { epsilon = exports.TEST_EPSILON; }\n    if (!(actual instanceof ndarray_1.NDArray) && !(expected instanceof ndarray_1.NDArray)) {\n        var aType = actual.constructor.name;\n        var bType = expected.constructor.name;\n        if (aType !== bType) {\n            throw new Error(\"Arrays are of different type actual: \" + aType + \" \" +\n                (\"vs expected: \" + bType));\n        }\n    }\n    else if (actual instanceof ndarray_1.NDArray && expected instanceof ndarray_1.NDArray) {\n        if (actual.dtype !== expected.dtype) {\n            throw new Error(\"Arrays are of different type actual: \" + actual.dtype + \" \" +\n                (\"vs expected: \" + expected.dtype + \".\"));\n        }\n        if (!util.arraysEqual(actual.shape, expected.shape)) {\n            throw new Error(\"Arrays are of different shape actual: \" + actual.shape + \" \" +\n                (\"vs expected: \" + expected.shape + \".\"));\n        }\n    }\n    var actualValues;\n    var expectedValues;\n    if (actual instanceof ndarray_1.NDArray) {\n        actualValues = actual.dataSync();\n    }\n    else {\n        actualValues = actual;\n    }\n    if (expected instanceof ndarray_1.NDArray) {\n        expectedValues = expected.dataSync();\n    }\n    else {\n        expectedValues = expected;\n    }\n    if (actualValues.length !== expectedValues.length) {\n        throw new Error(\"Arrays have different lengths actual: \" + actualValues.length + \" vs \" +\n            (\"expected: \" + expectedValues.length + \".\"));\n    }\n    for (var i = 0; i < expectedValues.length; ++i) {\n        var a = actualValues[i];\n        var e = expectedValues[i];\n        if (!areClose(a, e, epsilon)) {\n            var actualStr = \"actual[\" + i + \"] === \" + a;\n            var expectedStr = \"expected[\" + i + \"] === \" + e;\n            throw new Error('Arrays differ: ' + actualStr + ', ' + expectedStr);\n        }\n    }\n}\nexports.expectArraysClose = expectArraysClose;\nfunction expectNumbersClose(a, e, epsilon) {\n    if (epsilon === void 0) { epsilon = exports.TEST_EPSILON; }\n    if (!areClose(a, e, epsilon)) {\n        throw new Error(\"Numbers differ: actual === \" + a + \", expected === \" + e);\n    }\n}\nexports.expectNumbersClose = expectNumbersClose;\nfunction areClose(a, e, epsilon) {\n    if (isNaN(a) && isNaN(e)) {\n        return true;\n    }\n    if (isNaN(a) || isNaN(e) || Math.abs(a - e) > epsilon) {\n        return false;\n    }\n    return true;\n}\nfunction expectValuesInRange(actual, low, high) {\n    for (var i = 0; i < actual.length; i++) {\n        if (actual[i] < low || actual[i] > high) {\n            throw new Error(\"Value out of range:\" + actual[i] + \" low: \" + low + \", high: \" + high);\n        }\n    }\n}\nexports.expectValuesInRange = expectValuesInRange;\nfunction randomArrayInRange(n, minValue, maxValue) {\n    var v = new Float32Array(n);\n    var range = maxValue - minValue;\n    for (var i = 0; i < n; ++i) {\n        v[i] = (Math.random() * range) + minValue;\n    }\n    return v;\n}\nexports.randomArrayInRange = randomArrayInRange;\nfunction makeIdentity(n) {\n    var i = new Float32Array(n * n);\n    for (var j = 0; j < n; ++j) {\n        i[(j * n) + j] = 1;\n    }\n    return i;\n}\nexports.makeIdentity = makeIdentity;\nfunction cpuMultiplyMatrix(a, aRow, aCol, b, bRow, bCol) {\n    var result = new Float32Array(aRow * bCol);\n    for (var r = 0; r < aRow; ++r) {\n        var aOffset = (r * aCol);\n        var cOffset = (r * bCol);\n        for (var c = 0; c < bCol; ++c) {\n            var d = 0;\n            for (var k = 0; k < aCol; ++k) {\n                d += a[aOffset + k] * b[(k * bCol) + c];\n            }\n            result[cOffset + c] = d;\n        }\n    }\n    return result;\n}\nexports.cpuMultiplyMatrix = cpuMultiplyMatrix;\nfunction cpuDotProduct(a, b) {\n    if (a.length !== b.length) {\n        throw new Error('cpuDotProduct: incompatible vectors.');\n    }\n    var d = 0;\n    for (var i = 0; i < a.length; ++i) {\n        d += a[i] * b[i];\n    }\n    return d;\n}\nexports.cpuDotProduct = cpuDotProduct;\nfunction describeMathCPU(name, tests, featuresList) {\n    var testNameBase = 'CPU: math.' + name;\n    describeWithFeaturesAndExecutor(testNameBase, tests, function (testName, tests, features) { return executeMathTests(testName, tests, function () {\n        var safeMode = true;\n        return new math_1.NDArrayMath(new backend_cpu_1.MathBackendCPU(), safeMode);\n    }, features); }, featuresList);\n}\nexports.describeMathCPU = describeMathCPU;\nfunction describeMathGPU(name, tests, featuresList) {\n    var testNameBase = 'WebGL: math.' + name;\n    describeWithFeaturesAndExecutor(testNameBase, tests, function (testName, tests, features) { return executeMathTests(testName, tests, function () {\n        var safeMode = true;\n        return new math_1.NDArrayMath(new backend_webgl_1.MathBackendWebGL(), safeMode);\n    }, features); }, featuresList);\n}\nexports.describeMathGPU = describeMathGPU;\nfunction describeCustom(name, tests, featuresList, customBeforeEach, customAfterEach) {\n    describeWithFeaturesAndExecutor(name, [tests], function (testName, tests, features) { return executeTests(testName, tests, features, customBeforeEach, customAfterEach); }, featuresList);\n}\nexports.describeCustom = describeCustom;\nfunction describeWithFeaturesAndExecutor(testNameBase, tests, executor, featuresList) {\n    if (featuresList != null) {\n        featuresList.forEach(function (features) {\n            var testName = testNameBase + ' ' + JSON.stringify(features);\n            executor(testName, tests, features);\n        });\n    }\n    else {\n        executor(testNameBase, tests);\n    }\n}\nvar PROMISE_IT = function (name, testFunc) {\n    it(name, function (done) {\n        var result = testFunc();\n        if (result instanceof Promise) {\n            result.then(done, function (e) {\n                fail(e);\n                done();\n            });\n        }\n        else {\n            done();\n        }\n    });\n};\nfunction executeMathTests(testName, tests, mathFactory, features) {\n    var math;\n    var customBeforeEach = function () {\n        math = mathFactory();\n        environment_1.ENV.setMath(math);\n        math.startScope();\n    };\n    var customAfterEach = function () {\n        math.endScope(null);\n        math.dispose();\n    };\n    var customIt = function (name, testFunc) {\n        PROMISE_IT(name, function () { return testFunc(math); });\n    };\n    executeTests(testName, tests, features, customBeforeEach, customAfterEach, customIt);\n}\nexports.executeMathTests = executeMathTests;\nfunction executeTests(testName, tests, features, customBeforeEach, customAfterEach, customIt) {\n    if (customIt === void 0) { customIt = PROMISE_IT; }\n    describe(testName, function () {\n        beforeEach(function () {\n            if (features != null) {\n                environment_1.ENV.setFeatures(features);\n                environment_1.ENV.registerBackend('webgl', function () { return new backend_webgl_1.MathBackendWebGL(); });\n                environment_1.ENV.registerBackend('cpu', function () { return new backend_cpu_1.MathBackendCPU(); });\n            }\n            if (customBeforeEach != null) {\n                customBeforeEach();\n            }\n        });\n        afterEach(function () {\n            if (customAfterEach != null) {\n                customAfterEach();\n            }\n            if (features != null) {\n                environment_1.ENV.reset();\n            }\n        });\n        tests.forEach(function (test) { return test(customIt); });\n    });\n}\nexports.executeTests = executeTests;\nfunction assertIsNan(val, dtype) {\n    if (!util.isValNaN(val, dtype)) {\n        throw new Error(\"Value \" + val + \" does not represent NaN for dtype \" + dtype);\n    }\n}\nexports.assertIsNan = assertIsNan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/test_util.js\n// module id = uKcl\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/is-iterable\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/is-iterable.js\n// module id = us/S\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MaxPool2DBackpropProgram = (function () {\n    function MaxPool2DBackpropProgram(convInfo) {\n        this.variableNames = ['dy', 'maxPos'];\n        this.outputShape = convInfo.inShape;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var padTop = filterHeight - 1 - convInfo.padInfo.top;\n        var padLeft = filterWidth - 1 - convInfo.padInfo.left;\n        var lastIndex = filterHeight * filterWidth - 1;\n        this.userCode = \"\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 dyRCCorner = coords.yz - pads;\\n        int dyRCorner = dyRCCorner.x;\\n        int dyCCorner = dyRCCorner.y;\\n\\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          float dyR = float(dyRCorner + wR) / \" + strideHeight + \".0;\\n\\n          if (dyR < 0.0 || dyR >= \" + convInfo.outHeight + \".0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n            float dyC = float(dyCCorner + wC) / \" + strideWidth + \".0;\\n\\n            if (dyC < 0.0 || dyC >= \" + convInfo.outWidth + \".0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            float dyValue = getDy(b, idyR, idyC, d);\\n            int maxPosValue = \" + lastIndex + \" - int(getMaxPos(b, idyR, idyC, d));\\n\\n            // Get the current value, check it against the value from the\\n            // position matrix.\\n            int curPosValue = wR * \" + filterWidth + \" + wC;\\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\\n\\n            dotProd += dyValue * mask;\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return MaxPool2DBackpropProgram;\n}());\nexports.MaxPool2DBackpropProgram = MaxPool2DBackpropProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/webgl/max_pool_backprop_gpu.js\n// module id = v2Ar\n// module chunks = 0","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_array-includes.js\n// module id = vFc/\n// module chunks = 0","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = (!BUGGY && $native) || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-define.js\n// module id = vIB/\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = require(\"../../math/ndarray\");\nvar tensor_array_map_1 = require(\"../tensor_array_map\");\nvar optimizer_1 = require(\"./optimizer\");\nvar AdagradOptimizer = (function (_super) {\n    __extends(AdagradOptimizer, _super);\n    function AdagradOptimizer(learningRate, specifiedVariableList) {\n        var _this = _super.call(this, learningRate, specifiedVariableList) || this;\n        _this.learningRate = learningRate;\n        _this.accumulatedSquaredGradients = new tensor_array_map_1.TensorArrayMap();\n        _this.eps = ndarray_1.Scalar.new(1e-6);\n        return _this;\n    }\n    AdagradOptimizer.prototype.beforeBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        _super.prototype.beforeBatch.call(this, math, batchSize, runtime, activationArrayMap, gradientArrayMap);\n        if (this.accumulatedSquaredGradients.size() === 0) {\n            this.variableNodes.forEach(function (node) {\n                _this.accumulatedSquaredGradients.set(node.output, ndarray_1.NDArray.zeros(node.output.shape));\n            });\n        }\n    };\n    AdagradOptimizer.prototype.afterBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        math.scope(function (keep) {\n            _this.variableNodes.forEach(function (node) {\n                var oldVariable = activationArrayMap.get(node.output);\n                var gradient = _this.variableGradients.get(node.output);\n                var oldCache = _this.accumulatedSquaredGradients.get(node.output);\n                var gradientSquare = math.multiply(gradient, gradient);\n                var cache = math.add(oldCache, gradientSquare);\n                var variable = math.scaledArrayAdd(_this.c, math.divide(gradient, math.add(math.sqrt(cache), _this.eps)), _this.one, oldVariable);\n                _this.accumulatedSquaredGradients.set(node.output, keep(cache));\n                activationArrayMap.set(node.output, keep(variable));\n                node.data = variable;\n                oldVariable.dispose();\n                oldCache.dispose();\n            });\n        });\n        this.variableGradients.dispose();\n        this.variableGradients = new tensor_array_map_1.TensorArrayMap();\n    };\n    AdagradOptimizer.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.eps.dispose();\n        this.accumulatedSquaredGradients.dispose();\n    };\n    return AdagradOptimizer;\n}(optimizer_1.Optimizer));\nexports.AdagradOptimizer = AdagradOptimizer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/optimizers/adagrad_optimizer.js\n// module id = wH3f\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tensor_array_map_1 = require(\"../tensor_array_map\");\nvar optimizer_1 = require(\"./optimizer\");\nvar SGDOptimizer = (function (_super) {\n    __extends(SGDOptimizer, _super);\n    function SGDOptimizer(learningRate, specifiedVariableList) {\n        var _this = _super.call(this, learningRate, specifiedVariableList) || this;\n        _this.learningRate = learningRate;\n        return _this;\n    }\n    SGDOptimizer.prototype.afterBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        math.scope(function (keep) {\n            _this.variableNodes.forEach(function (node) {\n                var oldVariable = activationArrayMap.get(node.output);\n                var gradient = _this.variableGradients.get(node.output);\n                var variable = math.scaledArrayAdd(_this.c, gradient, _this.one, oldVariable);\n                activationArrayMap.set(node.output, keep(variable));\n                node.data = variable;\n                oldVariable.dispose();\n            });\n        });\n        this.variableGradients.dispose();\n        this.variableGradients = new tensor_array_map_1.TensorArrayMap();\n    };\n    SGDOptimizer.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n    };\n    SGDOptimizer.prototype.setLearningRate = function (learningRate) {\n        this.learningRate = learningRate;\n    };\n    return SGDOptimizer;\n}(optimizer_1.Optimizer));\nexports.SGDOptimizer = SGDOptimizer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/optimizers/sgd_optimizer.js\n// module id = wb5b\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/createClass.js\n// module id = wxAW\n// module chunks = 0","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.array.iterator.js\n// module id = xGkn\n// module chunks = 0","var hide = require('./_hide');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    if (safe && target[key]) target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_redefine-all.js\n// module id = xH/j\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"../../util\");\nvar ndarray_1 = require(\"../ndarray\");\nvar kernel_registry = require(\"./kernel_registry\");\nvar tape_util = require(\"./tape_util\");\nvar BackendEngine = (function () {\n    function BackendEngine(backend, safeMode) {\n        this.backend = backend;\n        this.safeMode = safeMode;\n        this.nextTapeNodeId = 0;\n        this.gradientScopeCount = 0;\n        this.debugMode = false;\n        this.activeScope = { keep: [], track: [] };\n        this.scopeStack = [this.activeScope];\n    }\n    BackendEngine.prototype.enableDebugMode = function () {\n        this.debugMode = true;\n    };\n    BackendEngine.prototype.executeKernel = function (kernelName, config, grad) {\n        var _this = this;\n        var kernelFn = function () {\n            return kernel_registry.executeKernel(_this.backend, kernelName, config);\n        };\n        var start;\n        if (this.debugMode) {\n            start = performance.now();\n        }\n        var result = kernelFn();\n        if (this.debugMode) {\n            var vals = result.getValues();\n            var time = util.rightPad(performance.now() - start + \"ms\", 9);\n            var paddedName = util.rightPad(kernelName, 25);\n            var rank = result.rank;\n            var size = result.size;\n            var shape = util.rightPad(result.shape.toString(), 14);\n            console.log(\"%c\" + paddedName + \"\\t%c\" + time + \"\\t%c\" + rank + \"D \" + shape + \"\\t%c\" + size, 'font-weight:bold', 'color:red', 'color:blue', 'color: orange');\n            util.checkForNaN(vals, result.dtype, name);\n        }\n        if (this.activeTape != null) {\n            config = tape_util.stripUndefinedInputsFromInputConfig(config);\n            var evaluatedNode = {\n                id: this.nextTapeNodeId++,\n                type: 'kernel',\n                name: \"kernel: \" + kernelName,\n                kernel: kernelName,\n                inputAndArgs: config,\n                output: result,\n                gradient: grad\n            };\n            this.activeTape.push(evaluatedNode);\n        }\n        return result;\n    };\n    BackendEngine.prototype.gradients = function (f, xs, returnValue) {\n        var _this = this;\n        var gradientsMode = true;\n        var result = this.scope('gradients', function () {\n            var y = f();\n            if (y.rank !== 0) {\n                throw new Error(\"Cannot compute gradient of non-scalar y output. \" +\n                    (\"Got y with rank \" + y.rank));\n            }\n            var gradients = _this.gradientWrt(y, xs);\n            if (returnValue) {\n                return [y].concat(gradients);\n            }\n            else {\n                return gradients;\n            }\n        }, gradientsMode);\n        if (returnValue) {\n            return { value: result[0], gradients: result.slice(1) };\n        }\n        else {\n            return result;\n        }\n    };\n    BackendEngine.prototype.gradientWrt = function (y, xs) {\n        var filteredTape = tape_util.getFilteredNodesXToY(this.activeTape, xs, y);\n        if (filteredTape.length === 0) {\n            throw new Error(\"Cannot compute gradient: y is not a function of xs.\");\n        }\n        var arrayAccumulatedGradientMap = {};\n        arrayAccumulatedGradientMap[y.id] = ndarray_1.Scalar.new(1);\n        tape_util.backpropagateGradients(arrayAccumulatedGradientMap, filteredTape);\n        var gradients = [];\n        for (var i = 0; i < xs.length; i++) {\n            gradients.push(arrayAccumulatedGradientMap[xs[i].id]);\n        }\n        return gradients;\n    };\n    BackendEngine.prototype.scope = function (name, scopeFn, gradientsMode) {\n        var _this = this;\n        this.startScope(gradientsMode);\n        var keepFn = function (ndarray) { return _this.keep(ndarray); };\n        var trackFn = function (ndarray) { return ndarray; };\n        var result = scopeFn(keepFn, trackFn);\n        if (result instanceof Promise) {\n            result.then(function (r) { return _this.endScope(r, gradientsMode); });\n            return result;\n        }\n        else {\n            this.endScope(result, gradientsMode);\n            return result;\n        }\n    };\n    BackendEngine.prototype.startScope = function (gradientsMode) {\n        if (gradientsMode && this.gradientScopeCount === 0) {\n            this.activeTape = [];\n        }\n        if (gradientsMode) {\n            this.gradientScopeCount++;\n        }\n        var newScopeArrays = { keep: [], track: [] };\n        this.scopeStack.push(newScopeArrays);\n        this.activeScope = newScopeArrays;\n    };\n    BackendEngine.prototype.endScope = function (result, gradientsMode) {\n        var _this = this;\n        var arraysToKeep = this.activeScope.keep;\n        var arraysToTrackInParent = tape_util.extractNDArraysFromScopeResult(result);\n        arraysToKeep = arraysToKeep.concat(arraysToTrackInParent);\n        for (var i = 0; i < this.activeScope.track.length; i++) {\n            var ndarray = this.activeScope.track[i];\n            if (util.isNDArrayInList(ndarray, arraysToKeep)) {\n                continue;\n            }\n            if (this.activeTape != null) {\n                arraysToTrackInParent.push(ndarray);\n            }\n            else {\n                ndarray.dispose();\n            }\n        }\n        this.scopeStack.pop();\n        this.activeScope = this.scopeStack.length === 0 ?\n            null :\n            this.scopeStack[this.scopeStack.length - 1];\n        arraysToTrackInParent.forEach(function (ndarray) {\n            if (!util.isNDArrayInList(ndarray, _this.activeScope.keep)) {\n                _this.track(ndarray);\n            }\n        });\n        if (gradientsMode) {\n            this.gradientScopeCount--;\n            if (this.gradientScopeCount === 0) {\n                this.activeTape = null;\n            }\n        }\n    };\n    BackendEngine.prototype.keep = function (result) {\n        if (this.scopeStack.length === 1) {\n            if (this.safeMode) {\n                throw new Error('You are using math in safe mode. Enclose all ' +\n                    'math.method() calls inside a scope: ' +\n                    'math.scope(() => {math.method();...}) to avoid memory ' +\n                    'leaks.');\n            }\n        }\n        this.activeScope.keep.push(result);\n        return result;\n    };\n    BackendEngine.prototype.track = function (result) {\n        if (this.scopeStack.length === 1) {\n            if (this.safeMode) {\n                throw new Error('You are using math in safe mode. Enclose all ' +\n                    'math.method() calls inside a scope: ' +\n                    'math.scope(() => {math.method();...}) to avoid memory ' +\n                    'leaks.');\n            }\n        }\n        this.activeScope.track.push(result);\n        return result;\n    };\n    BackendEngine.prototype.getBackend = function () {\n        return this.backend;\n    };\n    return BackendEngine;\n}());\nexports.BackendEngine = BackendEngine;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/math/backends/backend_engine.js\n// module id = xf6u\n// module chunks = 0","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_enum-bug-keys.js\n// module id = xnc9\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graph_1 = require(\"./graph\");\nvar priority_queue = require(\"./priority_queue\");\nvar priority_queue_1 = require(\"./priority_queue\");\nfunction getUnorderedEvaluationSet(nodes, terminatingNodes) {\n    var terminatingNodeMap = {};\n    var seen = {};\n    var set = [];\n    var visit = nodes.slice();\n    terminatingNodes.forEach(function (node) { return terminatingNodeMap[node.id] = node; });\n    var _loop_1 = function () {\n        var cur = visit.pop();\n        if (seen[cur.id] == null) {\n            if (terminatingNodeMap[cur.id] == null) {\n                Object.keys(cur.inputs)\n                    .map(function (inputName) { return cur.inputs[inputName]; })\n                    .forEach(function (input) { return visit.push(input.node); });\n            }\n            set.push(cur);\n            seen[cur.id] = cur;\n        }\n    };\n    while (visit.length !== 0) {\n        _loop_1();\n    }\n    return set;\n}\nexports.getUnorderedEvaluationSet = getUnorderedEvaluationSet;\nfunction getOrderedEvaluationSet(unorderedEvaluationSet) {\n    var set = [];\n    var nodeIndices = {};\n    var pendingDependencies = {};\n    var nodeQueue = new priority_queue_1.PriorityQueue(function (a, b) { return priority_queue.defaultCompare(pendingDependencies[a.id], pendingDependencies[b.id]); }, function (node, newIndex) { return nodeIndices[node.id] = newIndex; });\n    unorderedEvaluationSet.forEach(function (node) { return pendingDependencies[node.id] = 0; });\n    unorderedEvaluationSet.forEach(function (node) { return Object.keys(node.inputs)\n        .map(function (key) { return node.inputs[key]; })\n        .forEach(function (input) {\n        if (unorderedEvaluationSet.indexOf(input.node) !== -1) {\n            pendingDependencies[input.node.id]++;\n        }\n    }); });\n    unorderedEvaluationSet.forEach(function (node) { return nodeQueue.enqueue(node); });\n    while (!nodeQueue.empty()) {\n        set.unshift(nodeQueue.dequeue());\n        Object.keys(set[0].inputs).map(function (key) { return set[0].inputs[key]; }).forEach(function (input) {\n            if (unorderedEvaluationSet.indexOf(input.node) === -1) {\n                return;\n            }\n            pendingDependencies[input.node.id]--;\n            nodeQueue.update(input.node, nodeIndices[input.node.id]);\n        });\n    }\n    return set;\n}\nexports.getOrderedEvaluationSet = getOrderedEvaluationSet;\nfunction isInputNode(node) {\n    return Object.keys(node.inputs).length === 0;\n}\nexports.isInputNode = isInputNode;\nfunction shouldBackProp(t) {\n    return !(t.node instanceof graph_1.ConstantNode);\n}\nexports.shouldBackProp = shouldBackProp;\nfunction isPassthroughNode(node, map) {\n    var keys = Object.keys(node.inputs);\n    for (var i = 0; i < keys.length; i++) {\n        var input = node.inputs[keys[i]];\n        if (map.get(input, true) === map.get(node.output, true)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.isPassthroughNode = isPassthroughNode;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deeplearn/dist/graph/graph_util.js\n// module id = yNpf\n// module chunks = 0","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.string.iterator.js\n// module id = zQR9\n// module chunks = 0"],"sourceRoot":""}